{"version":3,"sources":["vfs.js","pdf_viewer.js","compatibility.js","pdfmake.js"],"names":["ninjaLoadFontVfs","jQuery","each","window","ninjaFontVfs","font","files","filename","file","pdfMake","vfs","ninjaAddVFSDoc","name","content","refreshPDF","document","trigger","PDFJS","this","version","build","info","msg","verbosity","INFOS","log","LogManager","notify","warn","WARNINGS","error","arguments","length","logArguments","push","apply","join","call","backtrace","Error","TODO","what","e","stack","split","slice","assert","cond","combineUrl","baseUrl","url","indexOf","charAt","i","substring","pathLength","lastIndexOf","prefixLength","isValidUrl","allowRelative","colon","protocol","substr","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","bytesToString","bytes","str","n","String","fromCharCode","stringToBytes","Uint8Array","charCodeAt","stringToPDFString","str2","code","PDFStringTranslateTable","isBool","v","isNum","isString","isName","Name","isDict","type","Dict","dictType","get","isArray","Array","isStream","undefined","isArrayBuffer","isPDFFunction","fnDict","dict","has","MessageHandler","comObj","callbackIndex","postMessageTransfers","callbacks","ah","actionHandler","data","globalScope","onmessage","event","isReply","callbackId","callback","action","promise","Promise","then","resolvedData","postMessage","loadJpegStream","id","imageUrl","objs","img","Image","onload","resolve","src","createScratchCanvas","width","height","canvas","createElement","addContextCurrentTransform","ctx","mozCurrentTransform","_scaleX","_scaleY","_originalSave","save","_originalRestore","restore","_originalRotate","rotate","_originalScale","scale","_originalTranslate","translate","_originalTransform","transform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","m","a","b","c","d","f","ad_bc","bc_ad","old","prev","pop","x","y","angle","cosValue","Math","cos","sinValue","sin","compileType3Glyph","imgData","j","j0","POINT_TO_PROCESS_LIMIT","width1","points","POINT_TYPES","pos","lineSize","count","sum","steps","Int32Array","outlines","p","end","pp","coords","p0","step","drawOutline","beginPath","ii","o","moveTo","jj","lineTo","fill","isWorker","FONT_IDENTITY_MATRIX","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","pdfBug","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","bind","PasswordResponses","loggers","addLogger","logger","message","NEED_PASSWORD","INCORRECT_PASSWORD","NotImplementedException","PasswordException","prototype","constructor","UnknownErrorException","details","InvalidPDFException","MissingPDFException","IDENTITY_MATRIX","MissingDataException","begin","XRefParseException","Util","makeCssRgb","rgb","makeCssCmyk","cmyk","ColorSpace","singletons","getRgb","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","r","p1","p2","p3","p4","min","max","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","sign","num","concatenateToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","key","getInheritableProperty","inherit","sub","base","create","loadScript","script","loaded","setAttribute","getElementsByTagName","appendChild","PageViewport","viewBox","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","abs","fontScale","clone","args","convertToViewportPoint","convertToViewportRectangle","tl","br","convertToPdfPoint","_status","STATUS_PENDING","_handlers","STATUS_RESOLVED","STATUS_REJECTED","REJECTION_TIMEOUT","HandlerManager","handlers","running","unhandledRejections","pendingRejectionCheck","scheduleHandlers","concat","setTimeout","runHandlers","handler","shift","nextStatus","thisPromise","nextValue","_value","onResolve","onReject","_unhandledRejection","removeUnhandeledRejection","ex","nextPromise","_updateStatus","addUnhandledRejection","time","Date","now","scheduleRejectionCheck","splice","unhandled","all","promises","reject","reason","deferred","results","unresolved","isPromise","status",{"end":{"file":0,"comments_before":[],"nlb":false,"endpos":29938,"endcol":18,"endline":1038,"pos":29928,"col":8,"line":1038,"value":"isResolved","type":"name","_comments_dumped":true},"start":{"file":0,"comments_before":[],"nlb":false,"endpos":29938,"endcol":18,"endline":1038,"pos":29928,"col":8,"line":1038,"value":"isResolved","type":"name","_comments_dumped":true},"name":"isResolved"},"isResolved","isRejected","StatTimer","rpad","pad","started","times","enabled","timeEnd","start","toString","out","longest","span","duration","createBlob","contentType","Blob","bb","MozBlobBuilder","append","getBlob","createObjectURL","URL","blob","digits","buffer","b1","b2","b3","d1","d2","d3","d4","on","actionName","scope","send","transfers","srcOffset","getRgbItem","dest","destOffset","getRgbBuffer","bits","getOutputLength","inputLength","isPassthrough","createRgbBuffer","subarray","numComponentColors","numComps","allColors","Uint16Array","colorMap","usesZeroToOneRange","parse","cs","xref","res","IR","parseToIR","AlternateCS","fromIR","gray","whitePoint","WhitePoint","blackPoint","BlackPoint","gamma","Gamma","CalGrayCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFnIR","PDFFunction","range","Range","LabCS","colorSpaces","refcs","fetchIfRef","mode","params","getAll","stream","getBytes","getIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","input","tinted","baseNumComps","baseBuf","scaled","decodeMap","baseCS","highVal","lookupArray","set","outputDelta","lookupPos","q","g","convertToRgb","srcScale","k","XW","YW","ZW","XB","YB","ZB","G","A","AG","pow","L","Y","Lstar","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","X","Z","PatternType","AXIAL","RADIAL","Pattern","getPattern","shadingFromIR","raw","Shadings","parseShading","shading","matrix","RadialAxial","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","t1","domainArr","extendStart","extendEnd","extendArr","x1","y1","r1","x2","y2","r2","distance","fn","fnObj","fnArray","arg","diff","colorStops","rgbColor","cssColor","background","r0","grad","createLinearGradient","createRadialGradient","addColorStop","TilingPattern","color","commonObjs","baseTransform","operatorList","bbox","xstep","ystep","paintType","tilingType","PaintType","COLORED","UNCOLORED","MAX_PATTERN_SIZE","createPatternCanvas","owner","x0","y0","topLeft","botRight","matrixScale","curMatrixScale","combinedScale","ceil","tmpCanvas","CachedCanvases","getCanvas","tmpCtx","context","graphics","CanvasGraphics","groupLevel","setFillAndStrokeStyleToContext","setScale","transformToScale","tmpTranslate","clipBbox","executeOperatorList","tmpScale","scaleToContext","bboxWidth","bboxHeight","fillStyle","strokeStyle","temporaryPatternCanvas","createPattern","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","size","outputSize","bps","array","codeSize","codeBuf","sampleMul","strBytes","strIdx","types","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeNum","typeFn","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","toMultiArray","arr","index","domain","inputSize","order","encode","samples","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","Uint32Array","domain_2i","domain_2i_1","xi","size_i","e0","floor","n0","n1","offset0","offset1","rj","c0","c1","fnRefs","fns","bounds","fnsIR","dmin","dmax","rmin","rmax","v2","lexer","PostScriptLexer","parser","PostScriptParser","numOutputs","evaluator","PostScriptEvaluator","cache","FunctionCache","initialStack","execute","transformed","rangeIndex","total","MAX_CACHE_SIZE","PostScriptStack","MAX_STACK_SIZE","copy","roll","t","l","operators","operands","operator","counter","atan","LN10","round","token","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","op","opValue","nextChar","currentChar","getByte","comment","ch","EOF","Lexer","isSpace","getNumber","toLowerCase","parseFloat","isNaN","Annotation","getTransformMatrix","minX","minY","maxX","maxY","xRatio","yRatio","getDefaultAppearance","appearanceState","appearance","appearances","subtype","annotationFlags","borderStyle","borderWidth","borderArray","hasAppearance","getData","hasHtml","getHtmlElement","getEmptyContainer","tagName","element","style","isViewable","loadResources","keys","getAsync","resources","objectLoader","ObjectLoader","map","load","getOperatorList","OperatorList","appearanceDict","resourcesPromise","border","opList","addOp","getConstructor","fieldType","LinkAnnotation","TextAnnotation","TextWidgetAnnotation","WidgetAnnotation","fromData","Constructor","fromRef","ref","annotation","appendToOperatorList","annotations","pdfManager","partialEvaluator","annotationsReadyPromise","annotationPromises","datas","annotOpList","addOpList","fieldValue","alternativeText","defaultAppearance","fieldFlags","fieldResources","fieldName","namedItem","parent","parentRef","getRaw","kids","kidRef","gen","fullName","textAlignment","setTextStyles","item","fontObj","fontSize","direction","fontDirection","fontWeight","black","bold","fontStyle","italic","fontName","loadedName","fontFamily","fallbackName","display","textContent","textAlign","verticalAlign","fontRefName","Stream","appearanceFnArray","appearanceArgsArray","argsArray","fnId","rgbValue","title","ANNOT_MIN_SIZE","container","className","image","iconName","imageResourcesPath","dataset","l10nId","l10nArgs","JSON","stringify","text","left","top","lines","line","createTextNode","showAnnotation","zIndex","removeAttribute","hideAnnotation","toElement","relatedTarget","addEventListener","linkType","addDefaultProtocolToUrl","urlDict","hasOperatorList","borderColor","href","maxImageSize","disableFontFace","disableWorker","workerSrc","disableRange","disableAutoFetch","getDocument","source","pdfDataRangeTransport","passwordCallback","progressCallback","workerInitializedPromise","workerReadyPromise","transport","location","WorkerTransport","fetchDocument","PDFDocumentProxy","pdfInfo","numPages","fingerprint","embeddedFontsUsed","getPage","number","getPageIndex","getDestinations","getJavaScript","js","javaScript","getOutline","outline","getMetadata","metadata","Metadata","isEncrypted","encrypted","dataLoaded","cleanup","startCleanup","destroy","PDFPageProxy","pageInfo","stats","enableStats","PDFObjects","receivingOperatorList","cleanupAfterRender","pendingDestroy","renderTasks","pageNumber","pageIndex","view","getViewport","getAnnotations","annotationsPromise","render","complete","self","internalRenderTask","_tryDestroy","renderTask","displayReadyPromise","lastChunk","messageHandler","InternalRenderTask","RenderTask","transparency","initalizeGraphics","operatorListChanged","getTextContent","getOperationList","operationList","dependencyFontsID","clear","_startRenderPage","_renderPageChunk","operatorListChunk","pageCache","pagePromises","Worker","worker","supportTypedArray","supportTransfers","setupMessageHandler","loadFakeWorkerFiles","setupFakeWorker","testObj","terminate","fakeWorkerFilesLoadedPromise","fakeWorker","WorkerMessageHandler","setup","updatePassword","password","addRangeListener","chunk","addProgressListener","requestDataRange","pdfDocument","exception","page","hasData","exportedData","FontFace","FontLoader","fontObjs","pageProxy","imageData","MAX_IMAGE_SIZE_TO_STORE","pageNum","components","rgbaLength","buf","getContext","drawImage","getImageData","chunkedViewerLoading","destinations","ensureObj","objId","resolved","cancel","operatorListIdx","graphicsReadyCallback","graphicsReady","cancelled","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","canvasContext","textLayer","imageLayer","beginDrawing","viewport","updateOperatorList","_continue","continueCallback","_next","endDrawing","MIN_FONT_SIZE","fixMetadata","meta","replace","codes","chars","DOMParser","parseFromString","Document","metaDocument","doc","rdf","documentElement","nodeName","firstChild","nextSibling","hasChildNodes","desc","entry","iLength","children","childNodes","trim","COMPILE_TYPE3_GLYPHS","trackTransform","canvasEntry","CanvasExtraState","alphaIsShape","fontSizeScale","textMatrix","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColorSpace","fillColorSpaceObj","strokeColorSpace","strokeColorSpaceObj","fillColorObj","strokeColorObj","fillColor","strokeColor","fillAlpha","strokeAlpha","lineWidth","paintFormXObjectDepth","setCurrentPoint","canvasCtx","current","stateStack","pendingClip","pendingEOFill","xobjs","groupStack","processingType3","baseTransformStack","putBinaryImageData","ImageData","putImageData","tmpImgData","createImageData","tmpImgDataPixels","copyCtxState","sourceCtx","destCtx","properties","property","setLineDash","getLineDash","lineDashOffset","mozDash","mozDashOffset","EXECUTION_TIME","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","clearRect","mozOpaque","fillRect","beginLayout","executionStartIdx","argsArrayLen","endTime","breakIt","deps","nn","depObjId","common","endLayout","lineCap","lineJoin","limit","miterLimit","dashArray","dashPhase","intent","flatness","states","state","globalAlpha","globalCompositeOperation","x3","y3","bezierCurveTo","consumePath","getSinglePixelWidth","hasOwnProperty","needRestore","mozFillRule","paths","pendingTextPaths","path","addToPath","spacing","coded","typeface","browserFontSize","rule","rise","applyTextTransforms","createTextGeometry","geometry","ctxMatrix","atan2","hScale","vScale","spaceWidth","paintChar","character","fillStrokeMode","isAddToPathSet","getPathGenerator","fillText","strokeText","glyphs","skipTextSelection","geom","glyphsLength","textSelection","canvasWidth","vertical","defaultVMetrics","glyph","a1","restoreNeeded","fontChar","vmetric","vx","vy","scaledX","scaledY","scaledAccentX","scaledAccentY","charWidth","accent","disabled","remeasure","measuredWidth","measureText","characterScaleX","offset","VERTICAL_TEXT_ROTATION","PI","appendText","arrLength","spacingAccumulator","spacingLength","shownCanvasWidth","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","pattern","patternIR","inv","mozCurrentTransformInverse","bl","ul","ur","depth","group","currentCtx","isolated","knockout","currentTransform","canvasBounds","drawnWidth","drawnHeight","scratchCanvas","groupCtx","imageSmoothingEnabled","mozImageSmoothingEnabled","w","h","domImage","position","getCanvasPosition","appendImage","MAX_SIZE_TO_COMPILE","compiled","maskCanvas","maskCtx","images","imgToPaint","widthScale","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","tag","inverse","insertRule","styleElement","getElementById","styleSheet","sheet","cssRules","parentNode","removeChild","loadTestFont","atob","loadTestFontId","loadingContext","requests","nextRequestId","isSyncFontLoadingSupported","userAgent","navigator","exec","fonts","rules","fontsToLoad","attached","loading","bindDOM","request","queueLoadingCallback","prepareFontLoadEvent","LoadLoader_completeRequest","otherRequest","requestId","int32","string32","spliceString","s","remove","insert","chunk1","chunk2","isFontReady","called","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","div","body","compiledGlyphs","mimetype","fontAdded","Function","scriptTagContainer","pdfjsSrc","lastChild","TypedArray","setArrayOffset","arg1","byteLength","Int8Array","webkitURL","definePropertyPossible","Test","def","__defineGetter__","__defineSetter__","xhrPrototype","XMLHttpRequest","xhr","mimeType","_responseType","overrideMimeType","VBArray","responseType","responseBody","toArray","responseText","bc","idx","output","headArgs","bound","_dataset","attributes","attribute","toUpperCase","changeList","itemName","add","list","classListPrototype","contains","toggle","_classList","classList","console","ignoreIfTargetDisabled","isDisabled","target","stopPropagation","node","disableCreateObjectURL","locale","userLanguage","isSafari","regex","isOldAndroid","test","isChromeWithRangeBug","disableStream","history","pushState","disableHistory","CanvasPixelArray","versionMatch","polyfill","match","parseInt","contextPrototype","CanvasRenderingContext2D","fakeRequestAnimationFrame","isIOS","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","isAndroid","maxCanvasPixels","isEmbeddedIE","disableFullscreen","scripts","modules","__webpack_require__","moduleId","installedModules","exports","module","global","Buffer","docDefinition","defaultClientFonts","PdfPrinter","saveAs","Roboto","normal","italics","bolditalics","_createDoc","options","printer","fs","bindFS","createPdfKitDocument","chunks","_pdfMakePages","_getPages","cb","ignoreBuffer","pages","open","win","getDataUrl","close","print","dataUrl","iFrame","removeIFrame","removeEventListener","autoPrint","download","defaultFileName","getBuffer","getBase64","createPdf","fontDescriptors","fixPageMargins","margin","Number","right","bottom","registerDefaultTableLayouts","layoutBuilder","registerTableLayouts","noBorders","hLineWidth","vLineWidth","paddingLeft","paddingRight","table","widths","headerLineOnly","headerRows","lightHorizontalLines","hLineColor","pageSize2widthAndHeight","pageSize","sizes","StringObject","updatePageOrientationInOptions","currentPage","pdfKitDoc","previousPageOrientation","orientation","renderPages","fontProvider","addPage","il","items","renderVector","renderLine","renderImage","watermark","renderWatermark","setFontRefsToPdfDoc","ascenderHeight","getAscenderHeight","textDecorator","drawBackground","inlines","inline","encoded","addContent","fontId","encodedText","drawDecorations","opacity","origin","vector","pdfDoc","dash","space","undash","fillOpacity","strokeOpacity","ellipse","roundedRect","pn","lineColor","fillAndStroke","_width","_height","FontProvider","LayoutBuilder","PdfKit","PDFReference","ImageMeasure","pageOrientation","compress","Producer","Creator","builder","pageMargins","tableLayouts","layoutDocument","styles","defaultStyle","header","footer","pageBreakBefore","jsRef","S","JS","namesRef","Names","_root","JavaScript","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","msSaveOrOpenBlob","get_URL","save_link","createElementNS","can_use_save_link","click","createEvent","initMouseEvent","dispatchEvent","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","setImmediate","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","revoker","revokeObjectURL","chrome","dispatch","filesaver","event_types","listener","FileSaver","object_url","target_view","blob_changed","dispatch_all","fs_error","new_tab","safari","readyState","DONE","abortable","func","create_if_not_found","exclusive","INIT","webkitSlice","TEMPORARY","root","getDirectory","dir","getFile","createWriter","writer","onwriteend","toURL","onerror","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","onwritestart","onprogress","onwrite","onabort","fromNumber","fromString","fromObject","that","allocate","checked","TYPED_ARRAY_SUPPORT","string","encoding","object","isBuffer","fromBuffer","fromArray","TypeError","ArrayBuffer","fromTypedArray","fromArrayLike","fromJsonObject","_augment","_isBuffer","fromPool","poolSize","rootParent","kMaxLength","RangeError","SlowBuffer","subject","utf8ToBytes","base64ToBytes","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64Slice","base64","fromByteArray","utf8Slice","tmp","decodeUtf8Char","asciiSlice","ret","binarySlice","hexSlice","len","toHex","utf16leSlice","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","codePoint","leadSurrogate","byteArray","hi","lo","toByteArray","dst","decodeURIComponent","err","INSPECT_MAX_BYTES","foo","isEncoding","loweredCase","equals","inspect","val","byteOffset","arrayIndexOf","foundIndex","readUInt8","writeUInt8","isFinite","swap","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","_set","toArrayBuffer","BP","toLocaleString","typeName","fontWrappers","fontDef","_","FontWrapper","provideFont","familyName","_font","fontWrapper","pdfFonts","addAll","otherArray","imageMeasure","tracker","TraversalTracker","decorateNode","positions","resetXY","DocMeasure","DocumentContext","PageElementWriter","ColumnCalculator","TableProcessor","Line","pack","offsetVector","fontStringify","isFunction","TextTools","StyleContextStack","docStructure","styleDictionary","pageBreakBeforeFct","addPageBreaksIfNecessary","linearNodeList","isEmpty","nodeInfo","pick","startPosition","pageNumbers","chain","uniq","any","followingNodeList","pageBreak","pageBreakCalculated","followingNodesOnPage","drop","filter","node0","nodesOnNextPage","previousNodesOnPage","take","resetXYs","docMeasure","tryLayoutDocument","measureDocument","_this","startTracking","addBackground","processNode","addHeadersAndFooters","addWatermark","backgroundGetter","pageBackground","getCurrentPage","beginUnbreakableBlock","commitUnbreakableBlock","addStaticRepeatable","headerOrFooter","sizeFunction","addDynamicRepeatable","nodeGetter","headerSizeFct","footerSizeFct","getSize","targetWidth","textTools","styleContextStack","sizeOfString","defaultFont","getOwnPropertyNames","watermarkObject","applyMargins","_margin","moveToNextPage","moveDown","addMargin","absPosition","absolutePosition","beginDetachedBlock","processVerticalContainer","columns","processColumns","processList","ol","processTable","processLeaf","processImage","processCanvas","qr","processQr","_span","endDetachedBlock","columnNode","gapArray","gap","gaps","availableWidth","_gap","buildColumnWidths","processRow","tableBody","tableRow","storePageBreakData","pageDesc","pageBreaks","prevPage","prevY","colLeftOffset","getEndingCell","column","columnIndex","rowSpan","endingRow","auto","beginColumnGroup","_calcWidth","leftOffset","colSpan","beginColumn","_columnEndingContext","markEnding","completeColumnGroup","orderedList","addMarkerToFirstLeaf","nextMarker","marker","_minWidth","addVector","markerLine","addInline","_inlines","addLine","gapSize","_gapSize","listMarker","tableNode","processor","beginTable","beginRow","_offsets","offsets","endRow","endTable","buildNextLine","textNode","hasEnoughSpaceForInline","lastLineInParagraph","addImage","_minHeight","availableHeight","addQr","4A0","2A0","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","imageDictionary","PDFImage","measureImage","realImageSrc","label","_imageRegistry","_imageCount","embed","groupDecorations","groups","curGroup","decoration","decorationColor","decorationStyle","ll","deco","drawDecoration","maxInline","inl","firstInline","biggerInline","totalWidth","lineAscent","ascent","ascender","descent","lw","nbDashes","rdx","nbDots","rx","sh","sv","nbWaves","rwx","iii","getHeight","__dirname","VirtualFileSystem","fileSystem","baseSystem","fixFilename","readFileSync","base64content","writeFileSync","baseCompareAscending","other","valIsReflexive","othIsReflexive","baseIndexOf","fromIndex","indexOfNaN","baseSortBy","comparer","baseToString","charAtCallback","charsLeftIndex","charsRightIndex","compareAscending","criteria","compareMultipleAscending","objCriteria","othCriteria","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","fromRight","isObjectLike","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","lodash","LodashWrapper","__wrapped__","__chain__","arrayCopy","__actions__","chainAll","actions","LazyWrapper","dropCount","filtered","iteratees","takeCount","POSITIVE_INFINITY","views","wrapped","lazyClone","lazyReverse","lazyValue","baseWrapperValue","isRight","getView","nativeMin","iterLength","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","Set","cacheIndexOf","isObject","cachePush","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","arrayMap","arrayMax","NEGATIVE_INFINITY","arrayMin","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","assignDefaults","objectValue","sourceValue","assignOwnDefaults","baseAssign","customizer","props","baseCopy","baseAt","collection","isArr","isLength","propsLength","isIndex","baseBindAll","methodNames","createWrapper","BIND_FLAG","baseCallback","thisArg","argCount","isBindable","bindCallback","identity","baseMatches","baseProperty","baseClone","isDeep","stackA","stackB","initCloneArray","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","FUNC_ERROR_TEXT","baseSlice","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEach","iterable","toObject","baseEachRight","baseForOwnRight","baseEvery","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseFor","keysFunc","baseForRight","baseForIn","keysIn","baseFunctions","baseInvoke","methodName","baseIsEqual","isWhere","valType","othType","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","valWrapped","othWrapped","equalArrays","equalObjects","baseIsMatch","strictCompareFlags","noCustomizer","objValue","srcValue","baseMap","isStrictComparable","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","basePullAt","indexes","previous","baseRandom","nativeRandom","baseReduce","initFromCollection","baseSome","baseUniq","isLarge","seenIndex","baseValues","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","valIsUndef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","getCallback","createAssigner","assigner","isIterateeCall","createBindWrapper","wrapper","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createExtremum","arrayFunc","isMin","noIteratee","toIterable","extremumBy","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","arity","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_KEY_FLAG","isBind","isBindKey","reorder","isAry","ARY_FLAG","CURRY_FLAG","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","createPad","strLength","nativeIsFinite","padLength","repeat","createPartialWrapper","newData","mergeData","baseSetData","setData","othLength","arrValue","othValue","othIndex","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","objProps","objLength","othProps","hasCtor","objCtor","othCtor","exValue","transforms","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","lastIndex","support","funcNames","funcDecomp","fnToString","reFuncName","reThis","isNative","MAX_SAFE_INTEGER","prereq","srcBitmask","newBitmask","arityFlags","REARG_FLAG","bindFlags","comboFlags","isRearg","isCombo","pickByArray","pickByCallback","oldArray","shimIsPlainObject","shimKeys","allowIndexes","nonEnumArgs","guard","compact","difference","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flatten","flattenDeep","initial","intersection","caches","last","pull","pullAt","rest","sortedIndex","sortedLastIndex","takeRight","takeRightWhile","takeWhile","union","isSorted","unzip","getLength","without","xor","zip","zipObject","tap","interceptor","thru","wrapperChain","wrapperReverse","reverse","wrapperToString","wrapperValue","at","includes","every","find","findLast","findWhere","forEachRight","invoke","pluck","reduce","reduceRight","sample","shuffle","rand","some","sortBy","sortByAll","where","after","temp","before","bindAll","functions","bindKey","curry","curryRight","debounce","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leadingCall","defer","delay","flow","funcs","flowRight","memoize","resolver","memoized","Cache","negate","once","partial","partialRight","rearg","throttle","debounceOptions","wrap","cloneDeep","isBoolean","isDate","isElement","nodeType","isEqual","isError","isMatch","isNumber","reNative","reHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","defaults","assign","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","invert","multiValue","isProto","skipIndexes","mapValues","omit","pairs","defaultValue","valuesIn","random","floating","noMin","noMax","capitalize","reLatin1","endsWith","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","padLeft","padRight","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reWords","matches","constant","mixin","isObj","noConflict","oldDash","noop","propertyOf","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","contextProps","arrayProto","objectProto","getPrototypeOf","propertyIsEnumerable","WeakMap","nativeIsArray","nativeKeys","nativeNow","nativeNumIsFinite","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","WinRTError","dom","createDocumentFragment","reEscape","reEvaluate","floatLength","HOT_SPAN","HOT_COUNT","countBy","groupBy","indexBy","partition","getTime","valueOf","objProto","merge","camelCase","word","kebabCase","whitespace","reHexPrefix","snakeCase","startCase","backflow","collect","compose","eachRight","extend","methods","select","tail","unique","detect","foldl","foldr","head","include","inject","VERSION","isFilter","LAZY_WHILE_FLAG","countName","whileName","takeName","dropName","operationName","createCallback","done","lodashFunc","retUnwrapped","isHybrid","isLazy","onlyLazy","otherArgs","chainName","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","PDFObject","zlib","__bind","me","finalize","deflate","Filter","uncompressedLength","initDeflate","createDeflate","Length","_base","_i","_len","_ref","_offset","_write","convert","_refEnd","__webpack_amd_options__","webpackPolyfill","deprecate","pdfkitDoc","MAX_CHAR_TYPES","charCatalogue","getFont","decender","pseudoName","postscriptName","_fontFamilies","widthOfString","lineHeight","toCharCode","char","charTypesInInline","characterFitInFontWithIndex","use","Data","JPEG","PNG","events","stopTracking","emit","innerBlock","styleStack","autoImageIndex","qrEncoder","measureNode","extendMargins","_maxWidth","getNodeMargin","processSingleMargins","currentMargin","marginLeft","marginTop","marginRight","marginBottom","flattenStyleArray","styleArray","flattenedStyles","styleName","convertMargin","flattenedStyleArray","measureColumns","measureVerticalContainer","measureList","measureTable","measureLeaf","measureCanvas","measureQr","convertIfBase64Image","imageSize","fit","factor","_alignment","getProperty","buildInlines","minWidth","maxWidth","gapSizeForList","isOrderedList","listItems","longestNo","buildMarker","radius","_maxHeight","isOrdered","nextItem","measures","measureMinMax","measureCb","getLayout","layout","defaultLayout","vLineColor","paddingTop","paddingBottom","getOffsets","totalOffset","prevRightPadding","lOffset","extendWidthsForColSpans","colSpans","currentMinMax","getMinMax","col","minDifference","maxDifference","markSpans","rowData","markVSpans","row","extendTableWidths","_layout","cols","rows","i2","l2","measure","snapshots","endingCell","pageOrientationString","currentPageOrientation","bottomMostContext","c2","bottomMost","lastColumnWidth","saved","calculateBottomMost","destContext","saveContextInEndingCell","initializePage","pageSnapshot","getPageSize","newPageOrientation","nextPageIndex","createNewPage","newPageCreated","getCurrentPosition","innerHeight","innerWidth","pageInnerHeight","pageInnerWidth","verticalRatio","horizontalRatio","transactionLevel","repeatables","ElementWriter","fitOnPage","addFct","dontUpdateContextPosition","ignoreContextX","ignoreContextY","addFragment","fragment","useBlockXOffset","useBlockYOffset","nextPage","rep","originalX","pushContext","forcedX","forcedY","unbreakableContext","popContext","nbPages","xOffset","yOffset","currentBlockToRepeatable","pushToRepeatables","popFromRepeatables","autoColumns","autoMin","autoMax","starColumns","starMaxMin","starMaxMax","fixedColumns","initial_availableWidth","isAutoColumn","isStarColumn","elasticWidth","minW","maxW","W","D","starSize","maxStar","starCount","getTableInnerContentWidth","prepareRowSpanData","rsd","lastWidth","paddings","lBorder","tableWidth","rowSpanData","cleanUpRepeatables","rowsWithoutPageBreak","keepWithHeaderRows","dontBreakRows","drawHorizontalLine","onRowBreak","rowIndex","rowPaddingTop","topLineWidth","bottomLineWidth","rowPaddingBottom","rowCallback","rowTopY","reservedAtBottom","lineIndex","overrideY","currentLine","shouldDrawLine","drawVerticalLine","vLineIndex","getLineXs","_colSpan","endingPage","endingY","xs","ys","hasBreaks","skipOrphanePadding","yi","yl","willBreak","rowBreakWithoutHeader","hzLineOffset","colIndex","wBorder","xf","yf","hLineWhenBroken","headerRepeatable","leadingCut","trailingCut","inlineWidths","newLineForced","lineEnd","getWidth","functionToCheck","getType","splitWords","WORD_RE","isNewLine","shouldAddLine","copyStyle","destination","normalizeTextArray","removeDiacritics","diacriticsMap","getStyleProperty","textArray","normalized","leadingSpaces","LEADING","trailingSpaces","TRAILING","alignment","getTrimmedWidth","currentLineWidth","measured","Ą","Ć","Ę","Ł","Ń","Ś","Ź","Ż","ą","ć","ę","ł","ń","ś","ź","ż","styleOverrides","styleNameOrOverride","howMany","autopush","styleNames","styleOverrideObject","pushSOO","pushedItems","PDFDocument","PDFPage","__hasProp","__extends","child","ctor","__super__","_super","_ref1","_pageBuffer","_pageBufferStart","_waiting","_ended","Type","Pages","Count","Kids","initColor","initVector","initFonts","initText","initImages","CreationDate","method","_results","bufferPages","flushPages","dictionary","margins","_ctm","bufferedPageRange","switchToPage","_read","_finalize","pipe","createWriteStream","_info","xRefOffset","Size","Root","Info","Readable","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","UPPER","LOWER","b64ToByteArray","b64","placeHolders","Arr","uint8ToBase64","uint8","tripletToBase64","extraBytes","escapable","escapableRe","swapBytes","\t","\b","\f","(",")","buff","isUnicode","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_j","generateFrame","MODES","numeric","MODE_NUMERIC","alphanumeric","MODE_ALPHANUMERIC","octet","MODE_OCTET","ECCLEVELS","ECCLEVEL_L","ECCLEVEL_M","Q","ECCLEVEL_Q","H","ECCLEVEL_H","ver","ecclevel","eccLevel","mask","NUMERIC_REGEXP","ALPHANUMERIC_OUT_REGEXP","validatedata","getmaxdatalen","generate","buildCanvas","foreground","modSize","cd","_canvas","VERSIONS","MODE_TERMINATOR","MODE_KANJI","ALPHANUMERIC_REGEXP","GF256_MAP","GF256_INVMAP","GF256_GENPOLY","prevpoly","poly","ALPHANUMERIC_MAP","MASKFUNCS","needsverinfo","getsizebyver","nfullbits","nbits","ndatabits","ndatalenbits","newdata","maxbuflen","datalen","nlenbits","calculateecc","genpoly","modulus","polylen","genpolylen","quotient","augumenteccs","nblocks","subsizes","subsize","subsize0","pivot","eccs","nitemsperblock","augumentbch","makebasematrix","reserved","blit","aligns","minj","maxj","putdata","maskdata","maskf","putformatinfo","evaluatematrix","PENALTY_CONSECUTIVE","PENALTY_TWOBYTWO","PENALTY_FINDERLIKE","PENALTY_DENSITY","evaluategroup","score","nblacks","nextrow","bestmask","bestscore","readByte","writeByte","byte","byteAt","readBool","writeBool","readUInt32","b4","writeUInt32","readInt32","int","writeInt32","readUInt16","writeUInt16","readInt16","writeInt16","readString","writeString","stringAt","readShort","writeShort","readLongLong","b5","b6","b7","b8","writeLongLong","readInt","writeInt","__indexOf","channels","MARKERS","colorSpace","Subtype","BitsPerComponent","Width","Height","PNGImage","palette","hasAlphaChannel","Predictor","Colors","colors","Columns","grayscale","greyscale","indexed","loadIndexedAlphaChannel","splitAlphaChannel","sMask","alphaChannel","Decode","decodePixels","pixels","colorByteSize","pixelCount","contextStack","addPageItem","cloneLine","getCurrentPositionOnPage","alignLine","additionalSpacing","alignImage","imageWidth","block","contextOrWidth","dimensions","DEFAULT_MARGINS","SIZES","ProcSet","defineProperties","Font","xobjects","XObject","ext_gstates","ExtGState","patterns","Annots","Parent","MediaBox","Contents","Resources","KAPPA","SVGPath","__slice","_ctmStack","_CAP_STYLES","BUTT","ROUND","SQUARE","_JOIN_STYLES","MITER","BEVEL","phase","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","cpy","ox","oy","xe","xm","ye","ym","circle","polygon","point","_windingRule","isFillRule","m11","m12","m21","m22","dx","dy","m0","m3","m4","m5","toFixed","rad","xFactor","yFactor","LineWrapper","_lineGap","lineGap","currentLineHeight","moveUp","_text","lineCallback","_initOptions","_wrapper","continued","_textOptions","_line","_fontSize","characterSpacing","heightOfString","indent","itemIndent","level","levels","textIndent","bulletIndent","opts","lineBreak","columnGap","_fragment","align","commands","renderedWidth","textWidth","_name","wordCount","link","underline","strike","_fillColor","PDFGradient","PDFLinearGradient","PDFRadialGradient","namedColors","_opacityRegistry","_opacityCount","_gradCount","_normalizeColor","hex","part","_setColor","gstate","_sMasked","SMask","_setColorSpace","_doOpacity","ca","CA","linearGradient","radialGradient","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","bh","bp","bw","hp","ip","wp","_ref2","valign","annotate","Rect","_convertRect","Border","C","Dest","note","contents","URI","_markup","QuadPoints","highlight","lineAnnotation","rectAnnotation","ellipseAnnotation","textAnnotation","DA","PDFFont","_fontCount","_registeredFonts","family","cacheKey","includeGap","registerFont","process","zlibBuffer","engine","buffers","nread","onError","removeListener","onEnd","zlibBufferSync","flushFlag","binding","Z_FINISH","_processChunk","Deflate","Zlib","DEFLATE","Inflate","INFLATE","Gzip","GZIP","Gunzip","GUNZIP","DeflateRaw","DEFLATERAW","InflateRaw","INFLATERAW","Unzip","UNZIP","_opts","_chunkSize","chunkSize","Z_DEFAULT_CHUNK","Transform","flush","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_BLOCK","_flushFlag","Z_MIN_CHUNK","Z_MAX_CHUNK","windowBits","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_MIN_LEVEL","Z_MAX_LEVEL","memLevel","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","strategy","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_binding","_hadError","errno","Z_DEFAULT_COMPRESSION","Z_DEFAULT_WINDOWBITS","Z_DEFAULT_MEMLEVEL","_buffer","_closed","_level","_strategy","util","ok","Z_DEFAULT_LEVEL","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_VERSION_ERROR","createInflate","createDeflateRaw","createInflateRaw","createGzip","createGunzip","createUnzip","deflateSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzipSync","inflate","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","inherits","nextTick","reset","_flush","_transform","kind","ws","_writableState","ended","ending","needDrain","availInAfter","availOutAfter","have","availOutBefore","async","inOff","availInBefore","newReq","er","writeSync","req","EE","EventEmitter","Writable","Duplex","PassThrough","ondata","pause","ondrain","readable","resume","onend","didOnEnd","onclose","listenerCount","_isStdio","arcToSegments","cx","cy","parameters","px","py","runners","segmentToBezier","solveArc","T","V","z","cmd","curArg","foundDecimal","bez","ey","large","rot","ry","seg","segs","sweep","rotateX","a00","a01","a10","a11","cos_th","pl","segments","sfactor","sfactor_sq","sin_th","th","th0","th1","th2","th3","th_arc","xc","yc","th_half","LineBreaker","spaceLeft","startX","startY","ellipsis","continuedX","lastLine","paragraphGap","wordWidth","eachWord","bk","breaker","fbk","lbk","shouldContinue","wordWidths","nextBreak","required","emitLine","lc","nextY","wc","nextSection","lh","stops","embedded","_colorSpace","stop","form","shader","FunctionType","Domain","Functions","Bounds","Encode","Shading","Matrix","opacityGradient","CS","Sh1","FormType","BBox","Group","opacity_id","ShadingType","Coords","Extend","init_done","write_in_progress","pending_close","bufferSet","zstream","zlib_deflate","zlib_inflate","constants","NONE","strm","deflateInit2","Z_DEFLATED","inflateInit2","_error","_writeCheck","in_off","in_len","out_off","out_len","avail_in","next_in","avail_out","next_out","deflateEnd","inflateEnd","deflateReset","inflateReset","section","short","colorType","compressionMethod","filterMethod","interlaceMethod","pixelBitlength","readFile","png","pa","paeth","pb","pc","pixelBytes","scanlineLength","upperLeft","_k","_l","_m","decodePalette","copyToImageData","alpha","_decodedPalette","AFMFont","Subset","TTFFont","STANDARD_FONTS","isAFM","registerAFM","fromDFont","subset","registerTTF","toUnicodeCmap","Courier","Courier-Bold","Courier-Oblique","Courier-BoldOblique","Helvetica","Helvetica-Bold","Helvetica-Oblique","Helvetica-BoldOblique","Times-Roman","Times-Bold","Times-Italic","Times-BoldItalic","Symbol","ZapfDingbats","characters","embedAFM","embedTTF","encodeText","scaleFactor","unitsPerEm","stemV","post","exists","italic_angle","italicAngle","capHeight","os2","xHeight","familyClass","isSerif","isScript","flags","isFixedPitch","cmap","unicode","charWidths","descriptor","firstChar","fontfile","Length1","FontName","FontFile2","FontBBox","Flags","StemV","ItalicAngle","Ascent","Descent","CapHeight","XHeight","widthOfGlyph","BaseFont","FontDescriptor","FirstChar","LastChar","Widths","Encoding","ToUnicode","unicodeMap","characterToGlyph","replacer","truncate","getMessage","actual","expected","fail","stackStartFunction","AssertionError","_deepEqual","multiline","ignoreCase","objEquiv","isNullOrUndefined","isPrimitive","aIsArgs","bIsArgs","pSlice","ka","objectKeys","kb","expectedException","_throws","shouldThrow","hasOwn","generatedMessage","captureStackTrace","fn_name","next_line","equal","notEqual","deepEqual","notDeepEqual","strictEqual","notStrictEqual","doesNotThrow","ifError","_events","_maxListeners","defaultMaxListeners","setMaxListeners","listeners","addListener","newListener","warned","trace","fired","removeAllListeners","emitter","stylize","stylizeNoColor","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","getOwnPropertyDescriptor","numLinesEst","cur","ar","isSymbol","re","objectToString","timestamp","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","format","objects","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","env","NODE_DEBUG","pid","special","boolean","null","date","regexp","drainQueue","draining","currentQueue","queue","fun","browser","argv","versions","off","cwd","chdir","umask","superCtor","super_","TempCtor","glyphWidths","boundingBoxes","WIN_ANSI_MAP",402,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8226,8230,8364,8240,8249,8250,710,8482,338,339,732,352,353,376,381,382,"CmapTable","DFont","Directory","GlyfTable","HeadTable","HheaTable","HmtxTable","LocaTable","MaxpTable","NameTable","OS2Table","PostTable","rawData","numFonts","dfont","getNamedFont","ttf","directory","hhea","maxp","hmtx","loca","glyf","xMin","yMin","xMax","yMax","codeMap","forGlyph","advance","utils","unicodes","next","generateCmap","mapping","roman","unicodeCmap","tables","glyphIDs","glyphsFor","additionalIDs","glyphFor","compound","ids","new2old","newIDs","nextGlyphID","old2new","oldID","oldIDs",0,"charMap","maxGlyphID","AI","AL","BA","BK","CB","CI_BRK","CJ","CP_BRK","CR","DI_BRK","ID","IN_BRK","LF","NL","NS","PR_BRK","SA","SG","SP","UnicodeTrie","WJ","XX","characterClasses","classTrie","pairTable","lastPos","curClass","nextClass","Break","mapClass","mapFirst","nextCodePoint","nextCharClass","lastClass","shouldBreak","WriteReq","WritableState","hwm","highWaterMark","defaultHwm","objectMode","writableObjectMode","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","writecb","writelen","pendingcb","prefinished","errorEmitted","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","cbs","prefinish","need","endWritable","cork","uncork","allowHalfOpen","TransformState","afterTransform","needTransform","transforming","writechunk","ts","_transformState","rs","_readableState","reading","needReadable","writeencoding","ReadableState","pipes","pipesCount","flowing","endEmitted","emittedReadable","readableListening","readableObjectMode","ranOut","awaitDrain","readingMore","decoder","StringDecoder","readableAddChunk","addToFront","chunkInvalid","onEofChunk","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","debug","emitReadable_","maybeReadMore_","pipeOnDrain","resumeScheduled","resume_","fromList","stringMode","endReadable","setEncoding","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","unpipe","doEnd","stdout","stderr","endFn","dests","ev","paused","_fromList","2","1","-1","-2","-3","-4","-5","-6","errorCode","rank","zero","flush_pending","pending","arraySet","pending_buf","pending_out","total_out","flush_block_only","trees","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","adler","adler32","crc32","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","MIN_LOOKAHEAD","_win","wmask","w_mask","strend","MAX_MATCH","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","MIN_MATCH","ins_h","hash_shift","hash_mask","deflate_stored","max_block_size","pending_buf_size","BS_NEED_MORE","max_start","BS_FINISH_STARTED","BS_FINISH_DONE","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","BS_BLOCK_DONE","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","lm_init","configuration_table","max_lazy","good_length","nice_length","max_chain","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","Buf16","HEAP_SIZE","dyn_dtree","D_CODES","bl_tree","BL_CODES","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","L_CODES","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","deflateResetKeep","data_type","Z_UNKNOWN","INIT_STATE","BUSY_STATE","_tr_init","deflateSetHeader","MAX_MEM_LEVEL","Buf8","deflateInit","MAX_WBITS","DEF_MEM_LEVEL","old_flush","beg","FINISH_STATE","hcrc","extra","os","EXTRA_STATE","OS_CODE","level_flags","PRESET_DICT","NAME_STATE","COMMENT_STATE","HCRC_STATE","bstate","_tr_align","_tr_stored_block","LENGTH_CODES","LITERALS","Config","deflateInfo","ZSWAP32","InflateState","havedict","check","wbits","wsize","whave","wnext","hold","lencode","distcode","lenbits","distbits","ncode","nlen","ndist","lens","work","lendyn","distdyn","sane","back","was","inflateResetKeep","HEAD","Buf32","ENOUGH_LENS","ENOUGH_DISTS","inflateReset2","inflateInit","DEF_WBITS","fixedtables","virgin","sym","lenfix","distfix","inflate_table","LENS","DISTS","updatewindow","dist","put","_in","_out","from","from_source","here_bits","here_op","here_val","last_bits","last_op","last_val","here","hbuf","TYPE","TYPEDO","inf_leave","FLAGS","BAD","DICTID","TIME","OS","xflags","EXLEN","extra_len","EXTRA","NAME","COMMENT","HCRC","DICT","Z_TREES","CHECK","STORED","LEN_","TABLE","COPY_","COPY","LENLENS","CODES","CODELENS","LEN","inflate_fast","LIT","LENEXT","DIST","DISTEXT","MATCH","LENGTH","MEM","SYNC","inflateGetHeader","inflateInfo","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_BINARY","Z_TEXT","ZStream","attr","dataLength","dataOffset","dataOfs","handle","mapLength","mapOffset","maxIndex","maxTypeIndex","nameListOffset","nameOfs","refListOffset","typeListOffset","named","sfnt","scalarType","tableCount","searchRange","entrySelector","rangeShift","adjustment","directoryLength","headOffset","log2","tableData","NameEntry","Table","subsetTag","entries","stringOffset","strings","platformID","encodingID","languageID","nameID","copyright","fontSubfamily","uniqueSubfamily","trademark","manufacturer","designer","description","vendorUrl","designerUrl","license","licenseUrl","preferredFamily","preferredSubfamily","compatibleFull","sampleText","nameTable","strCount","strTable","successorOf","revision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","CmapEntry","charmap","subtable","endCode","glyphId","glyphIds","idDelta","idRangeOffset","saveOffset","segCount","segCountX2","startCode","language","delta","deltas","endCodes","nextID","rangeOffsets","startCodes","startGlyph","_len1","_len2","_len3","_len4","_len5","_len6","_len7","_n","_o","_p","_q","new","lsbCount","metrics","numberOfMetrics","lsb","numGlyphs","leftSideBearings","metric","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","maxPoints","maxContours","maxCompositePoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","POSTSCRIPT_GLYPHS","numberOfGlyphs","underlinePosition","underlineThickness","minMemType42","maxMemType42","minMemType1","maxMemType1","glyphNameIndex","_results1","averageCharWidth","weightClass","widthClass","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","panose","charRange","vendorID","selection","firstCharIndex","lastCharIndex","winAscent","winDescent","codePageRange","defaultChar","breakChar","maxContext","lengthOf","added","alphabet","carry","isUpperCase","CompoundGlyph","SimpleGlyph","numberOfContours","glyphOffsets","MORE_COMPONENTS","ARG_1_AND_2_ARE_WORDS","WE_HAVE_A_TWO_BY_TWO","WE_HAVE_AN_X_AND_Y_SCALE","WE_HAVE_A_SCALE","WE_HAVE_INSTRUCTIONS","BB","CL","CM","CP","EX","GL","H2","H3","HL","HY","IN","IS","JL","JT","JV","NU","OP","PO","PR","QU","RI","SY","d_code","_dist_code","put_short","send_bits","Buf_size","send_code","tree","bi_reverse","bi_flush","gen_bitlen","xbits","dyn_tree","max_code","stree","stat_desc","static_tree","has_stree","extra_bits","extra_base","max_length","overflow","gen_codes","next_code","tr_static_init","base_length","extra_lbits","_length_code","base_dist","extra_dbits","static_ltree","static_dtree","static_l_desc","StaticTreeDesc","static_d_desc","static_bl_desc","extra_blbits","MAX_BL_BITS","init_block","END_BLOCK","bi_windup","copy_block","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lx","build_tree","elems","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","build_bl_tree","max_blindex","bl_order","send_all_trees","lcodes","dcodes","blcodes","detect_data_type","black_mask","static_init_done","TreeDesc","stored_len","STORED_BLOCK","STATIC_TREES","opt_lenb","static_lenb","DYN_TREES","DIST_CODE_LEN","s1","s2","makeTable","crc","crcTable","TYPED_OK","sources","shrinkBuf","fnTyped","src_offs","dest_offs","flattenChunks","fnUntyped","setTyped","json","highStart","errorValue","DATA_BLOCK_LENGTH","DATA_GRANULARITY","DATA_MASK","INDEX_1_OFFSET","INDEX_2_BLOCK_LENGTH","INDEX_2_BMP_LENGTH","INDEX_2_MASK","INDEX_SHIFT","LSCP_INDEX_2_LENGTH","LSCP_INDEX_2_OFFSET","OMITTED_BMP_INDEX_1_LENGTH","SHIFT_1","SHIFT_1_2","SHIFT_2","UTF8_2B_INDEX_2_LENGTH","UTF8_2B_INDEX_2_OFFSET","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","cr","lcode","dcode","lmask","dmask","dolen","dodist","MAXBITS","lbase","lext","dbase","dext","lens_index","table_index","incr","curr","used","huff","base_index","offs","extra_index"],"mappings":"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,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,OACA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,GAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,QACA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA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hC,OAAAA,EAMAxhC,EAAA4hC,QAAAA,EAKA5hC,EAAA0W,WAAAA,EAUA1W,EAAA66E,YAAAA,EAKA76E,EAAA+M,SAAAA,IAKAplD,KAAAq4C,EAAAH,EAAA,GAAAM,SAIA,SAAAF,EAAAD,EAAAH,GAEAI,EAAAD,SACA1zC,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA;AAEA+jJ,UAAA,OACAC,WAAA,IAKA,SAAArwG,EAAAD,EAAAH,GAEAI,EAAAD,QAAAz0C,MAAAD,SAAA,SAAA6mB,GACA,MAAA,kBAAA1oB,OAAAuP,UAAAuJ,SAAA5a,KAAAwqB,OH1zhEA1sB,OAAAM,QAAAN,OAAAM,YAAAN,OAAAM,QAAAC,OACAP,OAAAC,cAAAJ","file":"pdf.built.js","sourcesContent":["window.pdfMake = window.pdfMake || {}; window.pdfMake.vfs = {};\nif(window.ninjaFontVfs)ninjaLoadFontVfs();\nfunction ninjaLoadFontVfs(){\n  jQuery.each(window.ninjaFontVfs, function(font, files){\n    jQuery.each(files, function(filename, file){\n      window.pdfMake.vfs['fonts/'+font+'/'+filename] = file;\n    });\n  })\n}\nfunction ninjaAddVFSDoc(name,content){\n  window.pdfMake.vfs['docs/'+name] = content;\n  if(window.refreshPDF)refreshPDF(true);\n  jQuery(document).trigger('ninjaVFSDocAdded');\n}","/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Initializing PDFJS global object (if still undefined)\nif (typeof PDFJS === 'undefined') {\n  (typeof window !== 'undefined' ? window : this).PDFJS = {};\n}\n\nPDFJS.version = '0.8.765';\nPDFJS.build = '88ec2bd';\n\n(function pdfjsWrapper() {\n  // Use strict in our context only - users might not want it\n  'use strict';\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals Cmd, ColorSpace, Dict, MozBlobBuilder, Name, PDFJS, Ref, URL */\n\n'use strict';\n\nvar globalScope = (typeof window === 'undefined') ? this : window;\n\nvar isWorker = (typeof window == 'undefined');\n\nvar ERRORS = 0, WARNINGS = 1, INFOS = 5;\nvar verbosity = WARNINGS;\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\n\n// The global PDFJS object exposes the API\n// In production, it will be declared outside a global wrapper\n// In development, it will be declared here\nif (!globalScope.PDFJS) {\n  globalScope.PDFJS = {};\n}\n\nglobalScope.PDFJS.pdfBug = false;\n\n// All the possible operations for an operator list.\nvar OPS = PDFJS.OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87\n};\n\n// Use only for debugging purposes. This should not be used in any code that is\n// in mozilla master.\nvar log = (function() {\n  if ('console' in globalScope && 'log' in globalScope['console']) {\n    return globalScope['console']['log'].bind(globalScope['console']);\n  } else {\n    return function nop() {\n    };\n  }\n})();\n\n// A notice for devs that will not trigger the fallback UI.  These are good\n// for things that are helpful to devs, such as warning that Workers were\n// disabled, which is important to devs but not end users.\nfunction info(msg) {\n  if (verbosity >= INFOS) {\n    log('Info: ' + msg);\n    PDFJS.LogManager.notify('info', msg);\n  }\n}\n\n// Non-fatal warnings that should trigger the fallback UI.\nfunction warn(msg) {\n  if (verbosity >= WARNINGS) {\n    log('Warning: ' + msg);\n    PDFJS.LogManager.notify('warn', msg);\n  }\n}\n\n// Fatal errors that should trigger the fallback UI and halt execution by\n// throwing an exception.\nfunction error(msg) {\n  // If multiple arguments were passed, pass them all to the log function.\n  if (arguments.length > 1) {\n    var logArguments = ['Error:'];\n    logArguments.push.apply(logArguments, arguments);\n    log.apply(null, logArguments);\n    // Join the arguments into a single string for the lines below.\n    msg = [].join.call(arguments, ' ');\n  } else {\n    log('Error: ' + msg);\n  }\n  log(backtrace());\n  PDFJS.LogManager.notify('error', msg);\n  throw new Error(msg);\n}\n\n// Missing features that should trigger the fallback UI.\nfunction TODO(what) {\n  warn('TODO: ' + what);\n}\n\nfunction backtrace() {\n  try {\n    throw new Error();\n  } catch (e) {\n    return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n  }\n}\n\nfunction assert(cond, msg) {\n  if (!cond)\n    error(msg);\n}\n\n// Combines two URLs. The baseUrl shall be absolute URL. If the url is an\n// absolute URL, it will be returned as is.\nfunction combineUrl(baseUrl, url) {\n  if (!url)\n    return baseUrl;\n  if (url.indexOf(':') >= 0)\n    return url;\n  if (url.charAt(0) == '/') {\n    // absolute path\n    var i = baseUrl.indexOf('://');\n    i = baseUrl.indexOf('/', i + 3);\n    return baseUrl.substring(0, i) + url;\n  } else {\n    // relative path\n    var pathLength = baseUrl.length, i;\n    i = baseUrl.lastIndexOf('#');\n    pathLength = i >= 0 ? i : pathLength;\n    i = baseUrl.lastIndexOf('?', pathLength);\n    pathLength = i >= 0 ? i : pathLength;\n    var prefixLength = baseUrl.lastIndexOf('/', pathLength);\n    return baseUrl.substring(0, prefixLength + 1) + url;\n  }\n}\n\n// Validates if URL is safe and allowed, e.g. to avoid XSS.\nfunction isValidUrl(url, allowRelative) {\n  if (!url) {\n    return false;\n  }\n  var colon = url.indexOf(':');\n  if (colon < 0) {\n    return allowRelative;\n  }\n  var protocol = url.substr(0, colon);\n  switch (protocol) {\n    case 'http':\n    case 'https':\n    case 'ftp':\n    case 'mailto':\n      return true;\n    default:\n      return false;\n  }\n}\nPDFJS.isValidUrl = isValidUrl;\n\n// In a well-formed PDF, |cond| holds.  If it doesn't, subsequent\n// behavior is undefined.\nfunction assertWellFormed(cond, msg) {\n  if (!cond)\n    error(msg);\n}\n\nvar LogManager = PDFJS.LogManager = (function LogManagerClosure() {\n  var loggers = [];\n  return {\n    addLogger: function logManager_addLogger(logger) {\n      loggers.push(logger);\n    },\n    notify: function(type, message) {\n      for (var i = 0, ii = loggers.length; i < ii; i++) {\n        var logger = loggers[i];\n        if (logger[type])\n          logger[type](message);\n      }\n    }\n  };\n})();\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, { value: value,\n                                     enumerable: true,\n                                     configurable: true,\n                                     writable: false });\n  return value;\n}\n\nvar PasswordResponses = PDFJS.PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\n\nvar PasswordException = (function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n\n  return PasswordException;\n})();\n\nvar UnknownErrorException = (function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n\n  return UnknownErrorException;\n})();\n\nvar InvalidPDFException = (function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n\n  return InvalidPDFException;\n})();\n\nvar MissingPDFException = (function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n\n  return MissingPDFException;\n})();\n\nvar NotImplementedException = (function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n\n  return NotImplementedException;\n})();\n\nvar MissingDataException = (function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n\n  return MissingDataException;\n})();\n\nvar XRefParseException = (function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n\n  return XRefParseException;\n})();\n\n\nfunction bytesToString(bytes) {\n  var str = '';\n  var length = bytes.length;\n  for (var n = 0; n < length; ++n)\n    str += String.fromCharCode(bytes[n]);\n  return str;\n}\n\nfunction stringToBytes(str) {\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var n = 0; n < length; ++n)\n    bytes[n] = str.charCodeAt(n) & 0xFF;\n  return bytes;\n}\n\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n\nvar Util = PDFJS.Util = (function UtilClosure() {\n  function Util() {}\n\n  Util.makeCssRgb = function Util_makeCssRgb(rgb) {\n    return 'rgb(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ')';\n  };\n\n  Util.makeCssCmyk = function Util_makeCssCmyk(cmyk) {\n    var rgb = ColorSpace.singletons.cmyk.getRgb(cmyk, 0);\n    return Util.makeCssRgb(rgb);\n  };\n\n  // Concatenates two transformation matrices together and returns the result.\n  Util.transform = function Util_transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n    ];\n  };\n\n  // For 2d affine transforms\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  Util.getAxialAlignedBoundingBox =\n    function Util_getAxialAlignedBoundingBox(r, m) {\n\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1])\n    ];\n  };\n\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n    ];\n  };\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  Util.singularValueDecompose2dScale =\n    function Util_singularValueDecompose2dScale(m) {\n\n    var transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if ((orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n        (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if ((orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n        (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n\n    return result;\n  };\n\n  Util.sign = function Util_sign(num) {\n    return num < 0 ? -1 : 1;\n  };\n\n  // TODO(mack): Rename appendToArray\n  Util.concatenateToArray = function concatenateToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n\n  Util.prependToArray = function concatenateToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict,\n                                                                     name) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return dict.get(name);\n  };\n\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function() {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n\n  return Util;\n})();\n\nvar PageViewport = PDFJS.PageViewport = (function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1; rotateB = 0; rotateC = 0; rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0; rotateB = 1; rotateC = 1; rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0; rotateB = -1; rotateC = -1; rotateD = 0;\n        break;\n      //case 0:\n      default:\n        rotateA = 1; rotateB = 0; rotateC = 0; rotateD = -1;\n        break;\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC; rotateD = -rotateD;\n    }\n\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n    ];\n\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation,\n                              this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle:\n      function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n})();\n\nvar PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  var i, n = str.length, str2 = '';\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    // UTF16BE BOM\n    for (i = 2; i < n; i += 2)\n      str2 += String.fromCharCode(\n        (str.charCodeAt(i) << 8) | str.charCodeAt(i + 1));\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      str2 += code ? String.fromCharCode(code) : str.charAt(i);\n    }\n  }\n  return str2;\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v == 'boolean';\n}\n\nfunction isInt(v) {\n  return typeof v == 'number' && ((v | 0) == v);\n}\n\nfunction isNum(v) {\n  return typeof v == 'number';\n}\n\nfunction isString(v) {\n  return typeof v == 'string';\n}\n\nfunction isNull(v) {\n  return v === null;\n}\n\nfunction isName(v) {\n  return v instanceof Name;\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (!cmd || v.cmd == cmd);\n}\n\nfunction isDict(v, type) {\n  if (!(v instanceof Dict)) {\n    return false;\n  }\n  if (!type) {\n    return true;\n  }\n  var dictType = v.get('Type');\n  return isName(dictType) && dictType.name == type;\n}\n\nfunction isArray(v) {\n  return v instanceof Array;\n}\n\nfunction isStream(v) {\n  return typeof v == 'object' && v !== null && v !== undefined &&\n         ('getBytes' in v);\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v == 'object' && v !== null && v !== undefined &&\n         ('byteLength' in v);\n}\n\nfunction isRef(v) {\n  return v instanceof Ref;\n}\n\nfunction isPDFFunction(v) {\n  var fnDict;\n  if (typeof v != 'object')\n    return false;\n  else if (isDict(v))\n    fnDict = v;\n  else if (isStream(v))\n    fnDict = v.dict;\n  else\n    return false;\n  return fnDict.has('FunctionType');\n}\n\n/**\n * The following promise implementation tries to generally implment the\n * Promise/A+ spec. Some notable differences from other promise libaries are:\n * - There currently isn't a seperate deferred and promise object.\n * - Unhandled rejections eventually show an error if they aren't handled.\n *\n * Based off of the work in:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=810490\n */\nvar Promise = PDFJS.Promise = (function PromiseClosure() {\n  var STATUS_PENDING = 0;\n  var STATUS_RESOLVED = 1;\n  var STATUS_REJECTED = 2;\n\n  // In an attempt to avoid silent exceptions, unhandled rejections are\n  // tracked and if they aren't handled in a certain amount of time an\n  // error is logged.\n  var REJECTION_TIMEOUT = 500;\n\n  var HandlerManager = {\n    handlers: [],\n    running: false,\n    unhandledRejections: [],\n    pendingRejectionCheck: false,\n\n    scheduleHandlers: function scheduleHandlers(promise) {\n      if (promise._status == STATUS_PENDING) {\n        return;\n      }\n\n      this.handlers = this.handlers.concat(promise._handlers);\n      promise._handlers = [];\n\n      if (this.running) {\n        return;\n      }\n      this.running = true;\n\n      setTimeout(this.runHandlers.bind(this), 0);\n    },\n\n    runHandlers: function runHandlers() {\n      while (this.handlers.length > 0) {\n        var handler = this.handlers.shift();\n\n        var nextStatus = handler.thisPromise._status;\n        var nextValue = handler.thisPromise._value;\n\n        try {\n          if (nextStatus === STATUS_RESOLVED) {\n            if (typeof(handler.onResolve) == 'function') {\n              nextValue = handler.onResolve(nextValue);\n            }\n          } else if (typeof(handler.onReject) === 'function') {\n              nextValue = handler.onReject(nextValue);\n              nextStatus = STATUS_RESOLVED;\n\n              if (handler.thisPromise._unhandledRejection) {\n                this.removeUnhandeledRejection(handler.thisPromise);\n              }\n          }\n        } catch (ex) {\n          nextStatus = STATUS_REJECTED;\n          nextValue = ex;\n        }\n\n        handler.nextPromise._updateStatus(nextStatus, nextValue);\n      }\n\n      this.running = false;\n    },\n\n    addUnhandledRejection: function addUnhandledRejection(promise) {\n      this.unhandledRejections.push({\n        promise: promise,\n        time: Date.now()\n      });\n      this.scheduleRejectionCheck();\n    },\n\n    removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n      promise._unhandledRejection = false;\n      for (var i = 0; i < this.unhandledRejections.length; i++) {\n        if (this.unhandledRejections[i].promise === promise) {\n          this.unhandledRejections.splice(i);\n          i--;\n        }\n      }\n    },\n\n    scheduleRejectionCheck: function scheduleRejectionCheck() {\n      if (this.pendingRejectionCheck) {\n        return;\n      }\n      this.pendingRejectionCheck = true;\n      setTimeout(function rejectionCheck() {\n        this.pendingRejectionCheck = false;\n        var now = Date.now();\n        for (var i = 0; i < this.unhandledRejections.length; i++) {\n          if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n            var unhandled = this.unhandledRejections[i].promise._value;\n            var msg = 'Unhandled rejection: ' + unhandled;\n            if (unhandled.stack) {\n              msg += '\\n' + unhandled.stack;\n            }\n            warn(msg);\n            this.unhandledRejections.splice(i);\n            i--;\n          }\n        }\n        if (this.unhandledRejections.length) {\n          this.scheduleRejectionCheck();\n        }\n      }.bind(this), REJECTION_TIMEOUT);\n    }\n  };\n\n  function Promise() {\n    this._status = STATUS_PENDING;\n    this._handlers = [];\n  }\n  /**\n   * Builds a promise that is resolved when all the passed in promises are\n   * resolved.\n   * @param {array} array of data and/or promises to wait for.\n   * @return {Promise} New dependant promise.\n   */\n  Promise.all = function Promise_all(promises) {\n    var deferred = new Promise();\n    var unresolved = promises.length;\n    var results = [];\n    if (unresolved === 0) {\n      deferred.resolve(results);\n      return deferred;\n    }\n    function reject(reason) {\n      if (deferred._status === STATUS_REJECTED) {\n        return;\n      }\n      results = [];\n      deferred.reject(reason);\n    }\n    for (var i = 0, ii = promises.length; i < ii; ++i) {\n      var promise = promises[i];\n      var resolve = (function(i) {\n        return function(value) {\n          if (deferred._status === STATUS_REJECTED) {\n            return;\n          }\n          results[i] = value;\n          unresolved--;\n          if (unresolved === 0)\n            deferred.resolve(results);\n        };\n      })(i);\n      if (Promise.isPromise(promise)) {\n        promise.then(resolve, reject);\n      } else {\n        resolve(promise);\n      }\n    }\n    return deferred;\n  };\n\n  /**\n   * Checks if the value is likely a promise (has a 'then' function).\n   * @return {boolean} true if x is thenable\n   */\n  Promise.isPromise = function Promise_isPromise(value) {\n    return value && typeof value.then === 'function';\n  };\n\n  Promise.prototype = {\n    _status: null,\n    _value: null,\n    _handlers: null,\n    _unhandledRejection: null,\n\n    _updateStatus: function Promise__updateStatus(status, value) {\n      if (this._status === STATUS_RESOLVED ||\n          this._status === STATUS_REJECTED) {\n        return;\n      }\n\n      if (status == STATUS_RESOLVED &&\n          Promise.isPromise(value)) {\n        value.then(this._updateStatus.bind(this, STATUS_RESOLVED),\n                   this._updateStatus.bind(this, STATUS_REJECTED));\n        return;\n      }\n\n      this._status = status;\n      this._value = value;\n\n      if (status === STATUS_REJECTED && this._handlers.length === 0) {\n        this._unhandledRejection = true;\n        HandlerManager.addUnhandledRejection(this);\n      }\n\n      HandlerManager.scheduleHandlers(this);\n    },\n\n    get isResolved() {\n      return this._status === STATUS_RESOLVED;\n    },\n\n    get isRejected() {\n      return this._status === STATUS_REJECTED;\n    },\n\n    resolve: function Promise_resolve(value) {\n      this._updateStatus(STATUS_RESOLVED, value);\n    },\n\n    reject: function Promise_reject(reason) {\n      this._updateStatus(STATUS_REJECTED, reason);\n    },\n\n    then: function Promise_then(onResolve, onReject) {\n      var nextPromise = new Promise();\n      this._handlers.push({\n        thisPromise: this,\n        onResolve: onResolve,\n        onReject: onReject,\n        nextPromise: nextPromise\n      });\n      HandlerManager.scheduleHandlers(this);\n      return nextPromise;\n    }\n  };\n\n  return Promise;\n})();\n\nvar StatTimer = (function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length)\n      str += pad;\n    return str;\n  }\n  function StatTimer() {\n    this.started = {};\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled)\n        return;\n      if (name in this.started)\n        warn('Timer is already running for ' + name);\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled)\n        return;\n      if (!(name in this.started))\n        warn('Timer has not been started for ' + name);\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      // Remove timer from started so it can be called again.\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var times = this.times;\n      var out = '';\n      // Find the longest name for padding purposes.\n      var longest = 0;\n      for (var i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest)\n          longest = name.length;\n      }\n      for (var i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n})();\n\nPDFJS.createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined')\n    return new Blob([data], { type: contentType });\n  // Blob builder is deprecated in FF14 and removed in FF18.\n  var bb = new MozBlobBuilder();\n  bb.append(data);\n  return bb.getBlob(contentType);\n};\n\nPDFJS.createObjectURL = (function createObjectURLClosure() {\n  if (typeof URL !== 'undefined' && URL.createObjectURL) {\n    return function createObjectURL(data, contentType) {\n      var blob = PDFJS.createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    };\n  }\n\n  // Blob/createObjectURL is not available, falling back to data schema.\n  var digits =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  return function createObjectURL(data, contentType) {\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2, d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      var d3 = i + 1 < ii ? ((b2 & 0xF) << 2) | (b3 >> 6) : 64;\n      var d4 = i + 2 < ii ? (b3 & 0x3F) : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nfunction MessageHandler(name, comObj) {\n  this.name = name;\n  this.comObj = comObj;\n  this.callbackIndex = 1;\n  this.postMessageTransfers = true;\n  var callbacks = this.callbacks = {};\n  var ah = this.actionHandler = {};\n\n  ah['console_log'] = [function ahConsoleLog(data) {\n    log.apply(null, data);\n  }];\n  // If there's no console available, console_error in the\n  // action handler will do nothing.\n  if ('console' in globalScope) {\n    ah['console_error'] = [function ahConsoleError(data) {\n      globalScope['console'].error.apply(null, data);\n    }];\n  } else {\n    ah['console_error'] = [function ahConsoleError(data) {\n      log.apply(null, data);\n    }];\n  }\n  ah['_warn'] = [function ah_Warn(data) {\n    warn(data);\n  }];\n\n  comObj.onmessage = function messageHandlerComObjOnMessage(event) {\n    var data = event.data;\n    if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacks) {\n        var callback = callbacks[callbackId];\n        delete callbacks[callbackId];\n        callback(data.data);\n      } else {\n        error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var promise = new Promise();\n        promise.then(function(resolvedData) {\n          comObj.postMessage({\n            isReply: true,\n            callbackId: data.callbackId,\n            data: resolvedData\n          });\n        });\n        action[0].call(action[1], data.data, promise);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      error('Unkown action from worker: ' + data.action);\n    }\n  };\n}\n\nMessageHandler.prototype = {\n  on: function messageHandlerOn(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {String} actionName Action to call.\n   * @param {JSON} data JSON data to send.\n   * @param {function} [callback] Optional callback that will handle a reply.\n   * @param {Array} [transfers] Optional list of transfers/ArrayBuffers\n   */\n  send: function messageHandlerSend(actionName, data, callback, transfers) {\n    var message = {\n      action: actionName,\n      data: data\n    };\n    if (callback) {\n      var callbackId = this.callbackIndex++;\n      this.callbacks[callbackId] = callback;\n      message.callbackId = callbackId;\n    }\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n};\n\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = (function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  });\n  img.src = imageUrl;\n}\n\n\nvar ColorSpace = (function ColorSpaceClosure() {\n  // Constructor should define this.numComps, this.defaultColor, this.name\n  function ColorSpace() {\n    error('should not call ColorSpace constructor');\n  }\n\n  ColorSpace.prototype = {\n    /**\n     * Converts the color value to the RGB color. The color components are\n     * located in the src array starting from the srcOffset. Returns the array\n     * of the rgb components, each value ranging from [0,255].\n     */\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      error('Should not call ColorSpace.getRgb');\n    },\n    /**\n     * Converts the color value to the RGB color, similar to the getRgb method.\n     * The result placed into the dest array starting from the destOffset.\n     */\n    getRgbItem: function ColorSpace_getRgb(src, srcOffset, dest, destOffset) {\n      error('Should not call ColorSpace.getRgbItem');\n    },\n    /**\n     * Converts the specified number of the color values to the RGB colors.\n     * The colors are located in the src array starting from the srcOffset.\n     * The result is placed into the dest array starting from the destOffset.\n     * The src array items shall be in [0,2^bits) range, the dest array items\n     * will be in [0,255] range.\n     */\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count,\n                                                   dest, destOffset, bits) {\n      error('Should not call ColorSpace.getRgbBuffer');\n    },\n    /**\n     * Determines amount of the bytes is required to store the reslut of the\n     * conversion that done by the getRgbBuffer method.\n     */\n    getOutputLength: function ColorSpace_getOutputLength(inputLength) {\n      error('Should not call ColorSpace.getOutputLength');\n    },\n    /**\n     * Returns true if source data will be equal the result/output data.\n     */\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    /**\n     * Creates the output buffer and converts the specified number of the color\n     * values to the RGB colors, similar to the getRgbBuffer.\n     */\n    createRgbBuffer: function ColorSpace_createRgbBuffer(src, srcOffset,\n                                                         count, bits) {\n      if (this.isPassthrough(bits)) {\n        return src.subarray(srcOffset);\n      }\n      var dest = new Uint8Array(count * 3);\n      var numComponentColors = 1 << bits;\n      // Optimization: create a color map when there is just one component and\n      // we are converting more colors than the size of the color map. We\n      // don't build the map if the colorspace is gray or rgb since those\n      // methods are faster than building a map. This mainly offers big speed\n      // ups for indexed and alternate colorspaces.\n      if (this.numComps === 1 && count > numComponentColors &&\n          this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        // TODO it may be worth while to cache the color map. While running\n        // testing I never hit a cache so I will leave that out for now (perhaps\n        // we are reparsing colorspaces too much?).\n        var allColors = bits <= 8 ? new Uint8Array(numComponentColors) :\n                                    new Uint16Array(numComponentColors);\n        for (var i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bits);\n\n        var destOffset = 0;\n        for (var i = 0; i < count; ++i) {\n          var key = src[srcOffset++] * 3;\n          dest[destOffset++] = colorMap[key];\n          dest[destOffset++] = colorMap[key + 1];\n          dest[destOffset++] = colorMap[key + 2];\n        }\n        return dest;\n      }\n      this.getRgbBuffer(src, srcOffset, count, dest, 0, bits);\n      return dest;\n    },\n    /**\n     * True if the colorspace has components in the default range of [0, 1].\n     * This should be true for all colorspaces except for lab color spaces\n     * which are [0,100], [-128, 127], [-128, 127].\n     */\n    usesZeroToOneRange: true\n  };\n\n  ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n    var IR = ColorSpace.parseToIR(cs, xref, res);\n    if (IR instanceof AlternateCS)\n      return IR;\n\n    return ColorSpace.fromIR(IR);\n  };\n\n  ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n    var name = isArray(IR) ? IR[0] : IR;\n\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        var whitePoint = IR[1].WhitePoint;\n        var blackPoint = IR[1].BlackPoint;\n        var gamma = IR[1].Gamma;\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS)\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt),\n                                PDFFunction.fromIR(tintFnIR));\n      case 'LabCS':\n        var whitePoint = IR[1].WhitePoint;\n        var blackPoint = IR[1].BlackPoint;\n        var range = IR[1].Range;\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        error('Unkown name ' + name);\n    }\n    return null;\n  };\n\n  ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n    if (isName(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if (isDict(colorSpaces)) {\n        var refcs = colorSpaces.get(cs.name);\n        if (refcs)\n          cs = refcs;\n      }\n    }\n\n    cs = xref.fetchIfRef(cs);\n    var mode;\n\n    if (isName(cs)) {\n      mode = cs.name;\n      this.mode = mode;\n\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          error('unrecognized colorspace ' + mode);\n      }\n    } else if (isArray(cs)) {\n      mode = cs[0].name;\n      this.mode = mode;\n\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          var params = cs[1].getAll();\n          return ['CalGrayCS', params];\n        case 'CalRGB':\n          return 'DeviceRgbCS';\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          var numComps = dict.get('N');\n          if (numComps == 1)\n            return 'DeviceGrayCS';\n          if (numComps == 3)\n            return 'DeviceRgbCS';\n          if (numComps == 4)\n            return 'DeviceCmykCS';\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1];\n          if (basePatternCS)\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n          var hiVal = cs[2] + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if (isStream(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = cs[1];\n          var numComps = 1;\n          if (isName(name))\n            numComps = 1;\n          else if (isArray(name))\n            numComps = name.length;\n          var alt = ColorSpace.parseToIR(cs[2], xref, res);\n          var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          var params = cs[1].getAll();\n          return ['LabCS', params];\n        default:\n          error('unimplemented color space object \"' + mode + '\"');\n      }\n    } else {\n      error('unrecognized color space object: \"' + cs + '\"');\n    }\n    return null;\n  };\n  /**\n   * Checks if a decode map matches the default decode map for a color space.\n   * This handles the general decode maps where there are two values per\n   * component. e.g. [0, 1, 0, 1, 0, 1] for a RGB color.\n   * This does not handle Lab, Indexed, or Pattern decode maps since they are\n   * slightly different.\n   * @param {Array} decode Decode map (usually from an image).\n   * @param {Number} n Number of components the color space has.\n   */\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!decode)\n      return true;\n\n    if (n * 2 !== decode.length) {\n      warn('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] != 1)\n        return false;\n    }\n    return true;\n  };\n\n  ColorSpace.singletons = {\n    get gray() {\n      return shadow(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return shadow(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return shadow(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n\n  return ColorSpace;\n})();\n\n/**\n * Alternate color space handles both Separation and DeviceN color spaces.  A\n * Separation color space is actually just a DeviceN with one color component.\n * Both color spaces use a tinting function to convert colors to a base color\n * space.\n */\nvar AlternateCS = (function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n  }\n\n  AlternateCS.prototype = {\n    getRgb: function AlternateCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset,\n                                                dest, destOffset) {\n      var baseNumComps = this.base.numComps;\n      var input = 'subarray' in src ?\n        src.subarray(srcOffset, srcOffset + this.numComps) :\n        Array.prototype.slice.call(src, srcOffset, srcOffset + this.numComps);\n      var tinted = this.tintFn(input);\n      this.base.getRgbItem(tinted, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count,\n                                                    dest, destOffset, bits) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = base.isPassthrough(8) || !usesZeroToOneRange;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n\n      var scaled = new Float32Array(numComps);\n      for (var i = 0; i < count; i++) {\n        for (var j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        var tinted = tintFn(scaled);\n        if (usesZeroToOneRange) {\n          for (var j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength) {\n      return this.base.getOutputLength(inputLength *\n                                       this.base.numComps / this.numComps);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    createRgbBuffer: ColorSpace.prototype.createRgbBuffer,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n\n  return AlternateCS;\n})();\n\nvar PatternCS = (function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n\n  return PatternCS;\n})();\n\nvar IndexedCS = (function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array([0]);\n    this.base = base;\n    this.highVal = highVal;\n\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    var lookupArray;\n\n    if (isStream(lookup)) {\n      lookupArray = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      lookupArray.set(bytes);\n    } else if (isString(lookup)) {\n      lookupArray = new Uint8Array(length);\n      for (var i = 0; i < length; ++i)\n        lookupArray[i] = lookup.charCodeAt(i);\n    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n      lookupArray = lookup;\n    } else {\n      error('Unrecognized lookup table: ' + lookup);\n    }\n    this.lookup = lookupArray;\n  }\n\n  IndexedCS.prototype = {\n    getRgb: function IndexedCS_getRgb(src, srcOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      return this.base.getRgb(this.lookup, start);\n    },\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset,\n                                              dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbItem(this.lookup, start, dest, destOffset);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count,\n                                                  dest, destOffset) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps);\n      var lookup = this.lookup;\n\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength) {\n      return this.base.getOutputLength(inputLength * this.base.numComps);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    createRgbBuffer: ColorSpace.prototype.createRgbBuffer,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      // indexed color maps shouldn't be changed\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n})();\n\nvar DeviceGrayCS = (function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array([0]);\n  }\n\n  DeviceGrayCS.prototype = {\n    getRgb: function DeviceGrayCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset,\n                                                 dest, destOffset) {\n      var c = (src[srcOffset] * 255) | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count,\n                                                     dest, destOffset, bits) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset, q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = (scale * src[j++]) | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength) {\n      return inputLength * 3;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    createRgbBuffer: ColorSpace.prototype.createRgbBuffer,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n})();\n\nvar DeviceRgbCS = (function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array([0, 0, 0]);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: function DeviceRgbCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset,\n                                                dest, destOffset) {\n      var r = (src[srcOffset] * 255) | 0;\n      var g = (src[srcOffset + 1] * 255) | 0;\n      var b = (src[srcOffset + 2] * 255) | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count,\n                                                    dest, destOffset, bits) {\n      var length = count * 3;\n      if (bits == 8) {\n        dest.set(src.subarray(srcOffset, srcOffset + length), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset, q = destOffset;\n      for (var i = 0; i < length; ++i) {\n        dest[q++] = (scale * src[j++]) | 0;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength) {\n      return inputLength;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits == 8;\n    },\n    createRgbBuffer: ColorSpace.prototype.createRgbBuffer,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n})();\n\nvar DeviceCmykCS = (function DeviceCmykCSClosure() {\n  // The coefficients below was found using numerical analysis: the method of\n  // steepest descent for the sum((f_i - color_value_i)^2) for r/g/b colors,\n  // where color_value is the tabular value from the table of sampled RGB colors\n  // from CMYK US Web Coated (SWOP) colorspace, and f_i is the corresponding\n  // CMYK color conversion using the estimation below:\n  //   f(A, B,.. N) = Acc+Bcm+Ccy+Dck+c+Fmm+Gmy+Hmk+Im+Jyy+Kyk+Ly+Mkk+Nk+255\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n\n    var r =\n      c * (-4.387332384609988 * c + 54.48615194189176 * m +\n           18.82290502165302 * y + 212.25662451639585 * k +\n           -285.2331026137004) +\n      m * (1.7149763477362134 * m - 5.6096736904047315 * y +\n           -17.873870861415444 * k - 5.497006427196366) +\n      y * (-2.5217340131683033 * y - 21.248923337353073 * k +\n           17.5119270841813) +\n      k * (-21.86122147463605 * k - 189.48180835922747) + 255;\n    var g =\n      c * (8.841041422036149 * c + 60.118027045597366 * m +\n           6.871425592049007 * y + 31.159100130055922 * k +\n           -79.2970844816548) +\n      m * (-15.310361306967817 * m + 17.575251261109482 * y +\n           131.35250912493976 * k - 190.9453302588951) +\n      y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) +\n      k * (-20.737325471181034 * k - 187.80453709719578) + 255;\n    var b =\n      c * (0.8842522430003296 * c + 8.078677503112928 * m +\n           30.89978309703729 * y - 0.23883238689178934 * k +\n           -14.183576799673286) +\n      m * (10.49593273432072 * m + 63.02378494754052 * y +\n           50.606957656360734 * k - 112.23884253719248) +\n      y * (0.03296041114873217 * y + 115.60384449646641 * k +\n           -193.58209356861505) +\n      k * (-22.33816807309886 * k - 180.12613974708367) + 255;\n\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array([0, 0, 0, 1]);\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: function DeviceCmykCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      convertToRgb(src, srcOffset, 1, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset,\n                                                 dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count,\n                                                     dest, destOffset, bits) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength) {\n      return (inputLength >> 2) * 3;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    createRgbBuffer: ColorSpace.prototype.createRgbBuffer,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n\n  return DeviceCmykCS;\n})();\n\n//\n// CalGrayCS: Based on \"PDF Reference, Sixth Ed\", p.245\n//\nvar CalGrayCS = (function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array([0, 0, 0]);\n\n    if (!whitePoint) {\n      error('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n\n    // Translate arguments to spec variables.\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n\n    this.G = gamma;\n\n    // Validate variables as per spec.\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      error('Invalid WhitePoint components for ' + this.name +\n            ', no fallback available');\n    }\n\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      TODO(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB +\n           ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n\n    if (this.G < 1) {\n      info('Invalid Gamma: ' + this.G + ' for ' + this.name +\n           ', falling back to default');\n      this.G = 1;\n    }\n  }\n\n  CalGrayCS.prototype = {\n    getRgb: function CalGrayCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset,\n                                              dest, destOffset) {\n      // A represents a gray component of a calibrated gray space.\n      // A <---> AG in the spec\n      var A = src[srcOffset];\n      var AG = Math.pow(A, this.G);\n\n      // Computes intermediate variables M, L, N as per spec.\n      // Except if other than default BlackPoint values are used.\n      var M = this.XW * AG;\n      var L = this.YW * AG;\n      var N = this.ZW * AG;\n\n      // Decode XYZ, as per spec.\n      var X = M;\n      var Y = L;\n      var Z = N;\n\n      // http://www.poynton.com/notes/colour_and_gamma/ColorFAQ.html, Ch 4.\n      // This yields values in range [0, 100].\n      var Lstar = Math.max(116 * Math.pow(Y, 1 / 3) - 16, 0);\n\n      // Convert values to rgb range [0, 255].\n      dest[destOffset] = Lstar * 255 / 100;\n      dest[destOffset + 1] = Lstar * 255 / 100;\n      dest[destOffset + 2] = Lstar * 255 / 100;\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count,\n                                                  dest, destOffset, bits) {\n      // TODO: This part is copied from DeviceGray. Make this utility function.\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset, q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = (scale * src[j++]) | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength) {\n      return inputLength * 3;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    createRgbBuffer: ColorSpace.prototype.createRgbBuffer,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n})();\n\n//\n// LabCS: Based on \"PDF Reference, Sixth Ed\", p.250\n//\nvar LabCS = (function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array([0, 0, 0]);\n\n    if (!whitePoint)\n      error('WhitePoint missing - required for color space Lab');\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n\n    // Translate args to spec variables\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n\n    // These are here just for completeness - the spec doesn't offer any\n    // formulas that use BlackPoint in Lab\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n\n    // Validate vars as per spec\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1)\n      error('Invalid WhitePoint components, no fallback available');\n\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      info('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      info('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n\n  // Function g(x) from spec\n  function fn_g(x) {\n    if (x >= 6 / 29)\n      return x * x * x;\n    else\n      return (108 / 841) * (x - 4 / 29);\n  }\n\n  function decode(value, high1, low2, high2) {\n    return low2 + (value) * (high2 - low2) / (high1);\n  }\n\n  // If decoding is needed maxVal should be 2^bits per component - 1.\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    // XXX: Lab input is in the range of [0, 100], [amin, amax], [bmin, bmax]\n    // not the usual [0, 1]. If a command like setFillColor is used the src\n    // values will already be within the correct range. However, if we are\n    // converting an image we have to map the values to the correct range given\n    // above.\n    // Ls,as,bs <---> L*,a*,b* in the spec\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n\n    // Adjust limits of 'as' and 'bs'\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n\n    // Computes intermediate variables X,Y,Z as per spec\n    var M = (Ls + 16) / 116;\n    var L = M + (as / 500);\n    var N = M - (bs / 200);\n\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n\n    var r, g, b;\n    // Using different conversions for D50 and D65 white points,\n    // per http://www.color.org/srgb.pdf\n    if (cs.ZW < 1) {\n      // Assuming D50 (X=0.9642, Y=1.00, Z=0.8249)\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      // Assuming D65 (X=0.9505, Y=1.00, Z=1.0888)\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    // clamp color values to [0,1] range then convert to [0,255] range.\n    dest[destOffset] = Math.sqrt(r < 0 ? 0 : r > 1 ? 1 : r) * 255;\n    dest[destOffset + 1] = Math.sqrt(g < 0 ? 0 : g > 1 ? 1 : g) * 255;\n    dest[destOffset + 2] = Math.sqrt(b < 0 ? 0 : b > 1 ? 1 : b) * 255;\n  }\n\n  LabCS.prototype = {\n    getRgb: function LabCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      convertToRgb(this, src, srcOffset, false, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count,\n                                              dest, destOffset, bits) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength) {\n      return inputLength;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      // XXX: Decoding is handled with the lab conversion because of the strange\n      // ranges that are used.\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n})();\n\n\n\nvar PatternType = {\n  AXIAL: 2,\n  RADIAL: 3\n};\n\nvar Pattern = (function PatternClosure() {\n  // Constructor should define this.getPattern\n  function Pattern() {\n    error('should not call Pattern constructor');\n  }\n\n  Pattern.prototype = {\n    // Input: current Canvas context\n    // Output: the appropriate fillStyle or strokeStyle\n    getPattern: function Pattern_getPattern(ctx) {\n      error('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n\n  Pattern.shadingFromIR = function Pattern_shadingFromIR(raw) {\n    return Shadings[raw[0]].fromIR(raw);\n  };\n\n  Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref,\n                                                       res) {\n\n    var dict = isStream(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n\n    switch (type) {\n      case PatternType.AXIAL:\n      case PatternType.RADIAL:\n        // Both radial and axial shadings are handled by RadialAxial shading.\n        return new Shadings.RadialAxial(dict, matrix, xref, res);\n      default:\n        TODO('Unsupported shading type: ' + type);\n        return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n})();\n\nvar Shadings = {};\n\n// A small number to offset the first/last color stops so we can insert ones to\n// support extend.  Number.MIN_VALUE appears to be too small and breaks the\n// extend. 1e-7 works in FF but chrome seems to use an even smaller sized number\n// internally so we have to go bigger.\nShadings.SMALL_NUMBER = 1e-2;\n\n// Radial and axial shading have very similar implementations\n// If needed, the implementations can be broken into two classes\nShadings.RadialAxial = (function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, ctx) {\n    this.matrix = matrix;\n    this.coordsArr = dict.get('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.ctx = ctx;\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = ColorSpace.parse(cs, xref, res);\n    this.cs = cs;\n\n    var t0 = 0.0, t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.get('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n\n    var extendStart = false, extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.get('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n\n    if (this.shadingType === PatternType.RADIAL &&\n       (!extendStart || !extendEnd)) {\n      // Radial gradient only currently works if either circle is fully within\n      // the other circle.\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance &&\n          r2 <= r1 + distance) {\n        warn('Unsupported radial gradient.');\n      }\n    }\n\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n\n    var fnObj = dict.get('Function');\n    var fn;\n    if (isArray(fnObj)) {\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        var obj = xref.fetchIfRef(fnObj[j]);\n        if (!isPDFFunction(obj)) {\n          error('Invalid function');\n        }\n        fnArray.push(PDFFunction.parse(xref, obj));\n      }\n      fn = function radialAxialColorFunction(arg) {\n        var out = [];\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          out.push(fnArray[i](arg)[0]);\n        }\n        return out;\n      };\n    } else {\n      if (!isPDFFunction(fnObj)) {\n        error('Invalid function');\n      }\n      fn = PDFFunction.parse(xref, fnObj);\n    }\n\n    // 10 samples seems good enough for now, but probably won't work\n    // if there are sharp color changes. Ideally, we would implement\n    // the spec faithfully and add lossless optimizations.\n    var diff = t1 - t0;\n    var step = diff / 10;\n\n    var colorStops = this.colorStops = [];\n\n    // Protect against bad domains so we don't end up in an infinte loop below.\n    if (t0 >= t1 || step <= 0) {\n      // Acrobat doesn't seem to handle these cases so we'll ignore for\n      // now.\n      info('Bad shading domain.');\n      return;\n    }\n\n    for (var i = t0; i <= t1; i += step) {\n      var rgbColor = cs.getRgb(fn([i]), 0);\n      var cssColor = Util.makeCssRgb(rgbColor);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      var rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = Util.makeCssRgb(rgbColor);\n    }\n\n    if (!extendStart) {\n      // Insert a color stop at the front and offset the first real color stop\n      // so it doesn't conflict with the one we insert.\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      // Same idea as above in extendStart but for the end.\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n\n    this.colorStops = colorStops;\n  }\n\n  RadialAxial.fromIR = function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var colorStops = raw[2];\n    var p0 = raw[3];\n    var p1 = raw[4];\n    var r0 = raw[5];\n    var r1 = raw[6];\n    return {\n      type: 'Pattern',\n      getPattern: function RadialAxial_getPattern(ctx) {\n        var grad;\n        if (type == PatternType.AXIAL)\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        else if (type == PatternType.RADIAL)\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      }\n    };\n  };\n\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var type = this.shadingType;\n      if (type == PatternType.AXIAL) {\n        var p0 = [coordsArr[0], coordsArr[1]];\n        var p1 = [coordsArr[2], coordsArr[3]];\n        var r0 = null;\n        var r1 = null;\n      } else if (type == PatternType.RADIAL) {\n        var p0 = [coordsArr[0], coordsArr[1]];\n        var p1 = [coordsArr[3], coordsArr[4]];\n        var r0 = coordsArr[2];\n        var r1 = coordsArr[5];\n      } else {\n        error('getPattern type unknown: ' + type);\n      }\n\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = Util.applyTransform(p0, matrix);\n        p1 = Util.applyTransform(p1, matrix);\n      }\n\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n\n  return RadialAxial;\n})();\n\nShadings.Dummy = (function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n\n  Dummy.fromIR = function Dummy_fromIR() {\n    return {\n      type: 'Pattern',\n      getPattern: function Dummy_fromIR_getPattern() {\n        return 'hotpink';\n      }\n    };\n  };\n\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n})();\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  function TilingPattern(IR, color, ctx, objs, commonObjs, baseTransform) {\n    this.name = IR[1][0].name;\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.baseTransform = baseTransform;\n    this.type = 'Pattern';\n    this.ctx = ctx;\n  }\n\n  TilingPattern.getIR = function TilingPattern_getIR(operatorList, dict, args) {\n    var matrix = dict.get('Matrix');\n    var bbox = dict.get('BBox');\n    var xstep = dict.get('XStep');\n    var ystep = dict.get('YStep');\n    var paintType = dict.get('PaintType');\n    var tilingType = dict.get('TilingType');\n\n    return [\n      'TilingPattern', args, operatorList, matrix, bbox, xstep, ystep,\n      paintType, tilingType\n    ];\n  };\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var objs = this.objs;\n      var commonObjs = this.commonObjs;\n      var ctx = this.ctx;\n\n      TODO('TilingType: ' + tilingType);\n\n      var x0 = bbox[0], y0 = bbox[1], x1 = bbox[2], y1 = bbox[3];\n\n      var topLeft = [x0, y0];\n      // we want the canvas to be as large as the step size\n      var botRight = [x0 + xstep, y0 + ystep];\n\n      var width = botRight[0] - topLeft[0];\n      var height = botRight[1] - topLeft[1];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n                             this.baseTransform);\n      var combinedScale = [matrixScale[0] * curMatrixScale[0],\n                           matrixScale[1] * curMatrixScale[1]];\n\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      width = Math.min(Math.ceil(Math.abs(width * combinedScale[0])),\n                       MAX_PATTERN_SIZE);\n\n      height = Math.min(Math.ceil(Math.abs(height * combinedScale[1])),\n                        MAX_PATTERN_SIZE);\n\n      var tmpCanvas = CachedCanvases.getCanvas('pattern', width, height, true);\n      var tmpCtx = tmpCanvas.context;\n      var graphics = new CanvasGraphics(tmpCtx, commonObjs, objs);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(tmpCtx, paintType, color);\n\n      this.setScale(width, height, xstep, ystep);\n      this.transformToScale(graphics);\n\n      // transform coordinates to pattern space\n      var tmpTranslate = [1, 0, 0, 1, -topLeft[0], -topLeft[1]];\n      graphics.transform.apply(graphics, tmpTranslate);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n      return tmpCanvas.canvas;\n    },\n\n    setScale: function TilingPattern_setScale(width, height, xstep, ystep) {\n      this.scale = [width / xstep, height / ystep];\n    },\n\n    transformToScale: function TilingPattern_transformToScale(graphics) {\n      var scale = this.scale;\n      var tmpScale = [scale[0], 0, 0, scale[1], 0, 0];\n      graphics.transform.apply(graphics, tmpScale);\n    },\n\n    scaleToContext: function TilingPattern_scaleToContext() {\n      var scale = this.scale;\n      this.ctx.scale(1 / scale[0], 1 / scale[1]);\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (bbox && isArray(bbox) && 4 == bbox.length) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.rectangle(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext:\n      function setFillAndStrokeStyleToContext(context, paintType, color) {\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);\n          var cssColor = Util.makeCssRgb(rgbColor);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          break;\n        default:\n          error('Unsupported paint type: ' + paintType);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      var ctx = this.ctx;\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n      this.scaleToContext();\n\n      return ctx.createPattern(temporaryPatternCanvas, 'repeat');\n    }\n  };\n\n  return TilingPattern;\n})();\n\n\n\nvar PDFFunction = (function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n\n  return {\n    getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps,\n                                                       str) {\n      var length = 1;\n      for (var i = 0, ii = size.length; i < ii; i++)\n        length *= size[i];\n      length *= outputSize;\n\n      var array = [];\n      var codeSize = 0;\n      var codeBuf = 0;\n      // 32 is a valid bps so shifting won't work\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n\n      var strBytes = str.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (var i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array.push((codeBuf >> codeSize) * sampleMul);\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n\n    getIR: function PDFFunction_getIR(xref, fn) {\n      var dict = fn.dict;\n      if (!dict)\n        dict = fn;\n\n      var types = [this.constructSampled,\n                   null,\n                   this.constructInterpolated,\n                   this.constructStiched,\n                   this.constructPostScript];\n\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn)\n        error('Unknown type of function');\n\n      return typeFn.call(this, fn, dict, xref);\n    },\n\n    fromIR: function PDFFunction_fromIR(IR) {\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR(IR);\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR(IR);\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR(IR);\n        //case CONSTRUCT_POSTSCRIPT:\n        default:\n          return this.constructPostScriptFromIR(IR);\n      }\n    },\n\n    parse: function PDFFunction_parse(xref, fn) {\n      var IR = this.getIR(xref, fn);\n      return this.fromIR(IR);\n    },\n\n    constructSampled: function PDFFunction_constructSampled(str, dict) {\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var outputLength = arr.length / 2;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.get('Domain');\n      var range = dict.get('Range');\n\n      if (!domain || !range)\n        error('No domain or range');\n\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        // No description how cubic spline interpolation works in PDF32000:2008\n        // As in poppler, ignoring order, linear interpolation may work as good\n        TODO('No support for cubic spline interpolation: ' + order);\n      }\n\n      var encode = dict.get('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n\n      var decode = dict.get('Decode');\n      if (!decode)\n        decode = range;\n      else\n        decode = toMultiArray(decode);\n\n      var samples = this.getSampleArray(size, outputSize, bps, str);\n\n      return [\n        CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size,\n        outputSize, Math.pow(2, bps) - 1, range\n      ];\n    },\n\n    constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n      // See chapter 3, page 109 of the PDF reference\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + ((x - xmin) * ((ymax - ymin) / (xmax - xmin)));\n      }\n\n      return function constructSampledFromIRResult(args) {\n        // See chapter 3, page 110 of the PDF reference.\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var mask = IR[8];\n        var range = IR[9];\n\n        if (m != args.length)\n          error('Incorrect number of arguments: ' + m + ' != ' +\n                args.length);\n\n        var x = args;\n\n        // Building the cube vertices: its part and sample index\n        // http://rjwagner49.com/Mathematics/Interpolation.pdf\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        for (var j = 0; j < cubeVertices; j++)\n          cubeN[j] = 1;\n\n        var k = n, pos = 1;\n        // Map x_i to y_j for 0 <= i < m using the sampled function.\n        for (var i = 0; i < m; ++i) {\n          // x_i' = min(max(x_i, Domain_2i), Domain_2i+1)\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(x[i], domain_2i), domain_2i_1);\n\n          // e_i = Interpolate(x_i', Domain_2i, Domain_2i+1,\n          //                   Encode_2i, Encode_2i+1)\n          var e = interpolate(xi, domain_2i, domain_2i_1,\n                              encode[i][0], encode[i][1]);\n\n          // e_i' = min(max(e_i, 0), Size_i - 1)\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n\n          // Adjusting the cube: N and vertex sample index\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1; // e1 = e0 + 1;\n          var n0 = e0 + 1 - e; // (e1 - e) / (e1 - e0);\n          var n1 = e - e0; // (e - e0) / (e1 - e0);\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k; // e1 * k\n          for (var j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n\n          k *= size_i;\n          pos <<= 1;\n        }\n\n        var y = new Float64Array(n);\n        for (var j = 0; j < n; ++j) {\n          // Sum all cube vertices' samples portions\n          var rj = 0;\n          for (var i = 0; i < cubeVertices; i++)\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n\n          // r_j' = Interpolate(r_j, 0, 2^BitsPerSample - 1,\n          //                    Decode_2j, Decode_2j+1)\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n\n          // y_j = min(max(r_j, range_2j), range_2j+1)\n          y[j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n\n        return y;\n      };\n    },\n\n    constructInterpolated: function PDFFunction_constructInterpolated(str,\n                                                                      dict) {\n      var c0 = dict.get('C0') || [0];\n      var c1 = dict.get('C1') || [1];\n      var n = dict.get('N');\n\n      if (!isArray(c0) || !isArray(c1))\n        error('Illegal dictionary for interpolated function');\n\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i)\n        diff.push(c1[i] - c0[i]);\n\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n\n    constructInterpolatedFromIR:\n      function PDFFunction_constructInterpolatedFromIR(IR) {\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n\n      var length = diff.length;\n\n      return function constructInterpolatedFromIRResult(args) {\n        var x = n == 1 ? args[0] : Math.pow(args[0], n);\n\n        var out = [];\n        for (var j = 0; j < length; ++j)\n          out.push(c0[j] + (x * diff[j]));\n\n        return out;\n\n      };\n    },\n\n    constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n      var domain = dict.get('Domain');\n\n      if (!domain)\n        error('No domain');\n\n      var inputSize = domain.length / 2;\n      if (inputSize != 1)\n        error('Bad domain for stiched function');\n\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i)\n        fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n\n      var bounds = dict.get('Bounds');\n      var encode = dict.get('Encode');\n\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n\n    constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(PDFFunction.fromIR(fnsIR[i]));\n      }\n\n      return function constructStichedFromIRResult(args) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max)\n            v = max;\n          else if (v < min)\n            v = min;\n          return v;\n        };\n\n        // clip to domain\n        var v = clip(args[0], domain[0], domain[1]);\n        // calulate which bound the value is in\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i])\n            break;\n        }\n\n        // encode value into domain of function\n        var dmin = domain[0];\n        if (i > 0)\n          dmin = bounds[i - 1];\n        var dmax = domain[1];\n        if (i < bounds.length)\n          dmax = bounds[i];\n\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n\n        var v2 = rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n\n        // call the appropropriate function\n        return fns[i]([v2]);\n      };\n    },\n\n    constructPostScript: function PDFFunction_constructPostScript(fn, dict,\n                                                                  xref) {\n      var domain = dict.get('Domain');\n      var range = dict.get('Range');\n\n      if (!domain)\n        error('No domain.');\n\n      if (!range)\n        error('No range.');\n\n      var lexer = new PostScriptLexer(fn);\n      var parser = new PostScriptParser(lexer);\n      var code = parser.parse();\n\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n\n    constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(\n                                          IR) {\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      var numOutputs = range.length / 2;\n      var evaluator = new PostScriptEvaluator(code);\n      // Cache the values for a big speed up, the cache size is limited though\n      // since the number of possible values can be huge from a PS function.\n      var cache = new FunctionCache();\n      return function constructPostScriptFromIRResult(args) {\n        var initialStack = [];\n        for (var i = 0, ii = (domain.length / 2); i < ii; ++i) {\n          initialStack.push(args[i]);\n        }\n\n        var key = initialStack.join('_');\n        if (cache.has(key))\n          return cache.get(key);\n\n        var stack = evaluator.execute(initialStack);\n        var transformed = [];\n        for (i = numOutputs - 1; i >= 0; --i) {\n          var out = stack.pop();\n          var rangeIndex = 2 * i;\n          if (out < range[rangeIndex])\n            out = range[rangeIndex];\n          else if (out > range[rangeIndex + 1])\n            out = range[rangeIndex + 1];\n          transformed[i] = out;\n        }\n        cache.set(key, transformed);\n        return transformed;\n      };\n    }\n  };\n})();\n\nvar FunctionCache = (function FunctionCacheClosure() {\n  // Of 10 PDF's with type4 functions the maxium number of distinct values seen\n  // was 256. This still may need some tweaking in the future though.\n  var MAX_CACHE_SIZE = 1024;\n  function FunctionCache() {\n    this.cache = {};\n    this.total = 0;\n  }\n  FunctionCache.prototype = {\n    has: function FunctionCache_has(key) {\n      return key in this.cache;\n    },\n    get: function FunctionCache_get(key) {\n      return this.cache[key];\n    },\n    set: function FunctionCache_set(key, value) {\n      if (this.total < MAX_CACHE_SIZE) {\n        this.cache[key] = value;\n        this.total++;\n      }\n    }\n  };\n  return FunctionCache;\n})();\n\nvar PostScriptStack = (function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = initialStack || [];\n  }\n\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE)\n        error('PostScript function stack overflow.');\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0)\n        error('PostScript function stack underflow.');\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE)\n        error('PostScript function stack overflow.');\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++)\n        stack.push(stack[i]);\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    // rotate the last n stack elements p times\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i]; stack[i] = stack[j]; stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i]; stack[i] = stack[j]; stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i]; stack[i] = stack[j]; stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n})();\nvar PostScriptEvaluator = (function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators, operands) {\n    this.operators = operators;\n    this.operands = operands;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator == 'number') {\n          // Operator is really an operand and should be pushed to the stack.\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          // non standard ps operators\n          case 'jz': // jump if false\n            b = stack.pop();\n            a = stack.pop();\n            if (!a)\n              counter = b;\n            break;\n          case 'j': // jump\n            a = stack.pop();\n            counter = a;\n            break;\n\n          // all ps operators in alphabetical order (excluding if/ifelse)\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if (isBool(a) && isBool(b))\n              stack.push(a && b);\n            else\n              stack.push(a & b);\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0)\n              stack.push(a << b);\n            else\n              stack.push(a >> b);\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            // noop\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a == b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push((a / b) | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a != b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-b);\n            break;\n          case 'not':\n            a = stack.pop();\n            if (isBool(a) && isBool(b))\n              stack.push(a && b);\n            else\n              stack.push(a & b);\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if (isBool(a) && isBool(b))\n              stack.push(a || b);\n            else\n              stack.push(a | b);\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if (isBool(a) && isBool(b))\n              stack.push(a != b);\n            else\n              stack.push(a ^ b);\n            break;\n          default:\n            error('Unknown operator ' + operator);\n            break;\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n})();\n\nvar PostScriptParser = (function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type == type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type))\n        return true;\n      error('Unexpected symbol: found ' + this.token.type + ' expected ' +\n            type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      // Add two place holders that will be updated later\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        // The true block is right after the 'if' so it just falls through on\n        // true else it jumps and skips the true block.\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        // The jump is added at the end of the true block to skip the false\n        // block.\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        error('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n})();\n\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\n\nvar PostScriptToken = (function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n\n  var opCache = {};\n\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue)\n      return opValue;\n\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE,\n                                                '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE,\n                                                '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE,\n                                                'IFELSE');\n  return PostScriptToken;\n})();\n\nvar PostScriptLexer = (function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return (this.currentChar = this.stream.getByte());\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var s = '';\n      var comment = false;\n      var ch = this.currentChar;\n\n      // skip comments\n      while (true) {\n        if (ch < 0) {\n          return EOF;\n        }\n\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch == 0x25) { // '%'\n          comment = true;\n        } else if (!Lexer.isSpace(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30: case 0x31: case 0x32: case 0x33: case 0x34: // '0'-'4'\n        case 0x35: case 0x36: case 0x37: case 0x38: case 0x39: // '5'-'9'\n        case 0x2B: case 0x2D: case 0x2E: // '+', '-', '.'\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER,\n                                      this.getNumber());\n        case 0x7B: // '{'\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D: // '}'\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      // operator\n      var str = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && // and 'A'-'Z', 'a'-'z'\n             ((ch >= 0x41 && ch <= 0x5A) || (ch >= 0x61 && ch <= 0x7A))) {\n        str += String.fromCharCode(ch);\n      }\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var str = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if ((ch >= 0x30 && ch <= 0x39) || // '0'-'9'\n             ch === 0x2D || ch === 0x2E) { // '-', '.'\n          str += String.fromCharCode(ch);\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(str);\n      if (isNaN(value))\n        error('Invalid floating point number: ' + value);\n      return value;\n    }\n  };\n  return PostScriptLexer;\n})();\n\n\n\nvar Annotation = (function AnnotationClosure() {\n  // 12.5.5: Algorithm: Appearance streams\n  function getTransformMatrix(rect, bbox, matrix) {\n    var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n    var minX = bounds[0];\n    var minY = bounds[1];\n    var maxX = bounds[2];\n    var maxY = bounds[3];\n\n    if (minX === maxX || minY === maxY) {\n      // From real-life file, bbox was [0, 0, 0, 0]. In this case,\n      // just apply the transform for rect\n      return [1, 0, 0, 1, rect[0], rect[1]];\n    }\n\n    var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n    var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n    return [\n      xRatio,\n      0,\n      0,\n      yRatio,\n      rect[0] - minX * xRatio,\n      rect[1] - minY * yRatio\n    ];\n  }\n\n  function getDefaultAppearance(dict) {\n    var appearanceState = dict.get('AP');\n    if (!isDict(appearanceState)) {\n      return;\n    }\n\n    var appearance;\n    var appearances = appearanceState.get('N');\n    if (isDict(appearances)) {\n      var as = dict.get('AS');\n      if (as && appearances.has(as.name)) {\n        appearance = appearances.get(as.name);\n      }\n    } else {\n      appearance = appearances;\n    }\n    return appearance;\n  }\n\n  function Annotation(params) {\n    if (params.data) {\n      this.data = params.data;\n      return;\n    }\n\n    var dict = params.dict;\n    var data = this.data = {};\n\n    data.subtype = dict.get('Subtype').name;\n    var rect = dict.get('Rect');\n    data.rect = Util.normalizeRect(rect);\n    data.annotationFlags = dict.get('F');\n\n    var color = dict.get('C');\n    if (isArray(color) && color.length === 3) {\n      // TODO(mack): currently only supporting rgb; need support different\n      // colorspaces\n      data.color = color;\n    } else {\n      data.color = [0, 0, 0];\n    }\n\n    // Some types of annotations have border style dict which has more\n    // info than the border array\n    if (dict.has('BS')) {\n      var borderStyle = dict.get('BS');\n      data.borderWidth = borderStyle.has('W') ? borderStyle.get('W') : 1;\n    } else {\n      var borderArray = dict.get('Border') || [0, 0, 1];\n      data.borderWidth = borderArray[2] || 0;\n    }\n\n    this.appearance = getDefaultAppearance(dict);\n    data.hasAppearance = !!this.appearance;\n  }\n\n  Annotation.prototype = {\n\n    getData: function Annotation_getData() {\n      return this.data;\n    },\n\n    hasHtml: function Annotation_hasHtml() {\n      return false;\n    },\n\n    getHtmlElement: function Annotation_getHtmlElement(commonObjs) {\n      throw new NotImplementedException(\n        'getHtmlElement() should be implemented in subclass');\n    },\n\n    // TODO(mack): Remove this, it's not really that helpful.\n    getEmptyContainer: function Annotation_getEmptyContainer(tagName, rect) {\n      assert(!isWorker,\n        'getEmptyContainer() should be called from main thread');\n\n      rect = rect || this.data.rect;\n      var element = document.createElement(tagName);\n      element.style.width = Math.ceil(rect[2] - rect[0]) + 'px';\n      element.style.height = Math.ceil(rect[3] - rect[1]) + 'px';\n      return element;\n    },\n\n    isViewable: function Annotation_isViewable() {\n      var data = this.data;\n      return !!(\n        data &&\n        (!data.annotationFlags ||\n         !(data.annotationFlags & 0x22)) && // Hidden or NoView\n        data.rect                            // rectangle is nessessary\n      );\n    },\n\n    loadResources: function(keys) {\n      var promise = new Promise();\n      this.appearance.dict.getAsync('Resources').then(function(resources) {\n        if (!resources) {\n          promise.resolve();\n          return;\n        }\n        var objectLoader = new ObjectLoader(resources.map,\n                                            keys,\n                                            resources.xref);\n        objectLoader.load().then(function() {\n          promise.resolve(resources);\n        });\n      }.bind(this));\n\n      return promise;\n    },\n\n    getOperatorList: function Annotation_getToOperatorList(evaluator) {\n\n      var promise = new Promise();\n\n      if (!this.appearance) {\n        promise.resolve(new OperatorList());\n        return promise;\n      }\n\n      var data = this.data;\n\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources([\n        'ExtGState',\n        'ColorSpace',\n        'Pattern',\n        'Shading',\n        'XObject',\n        'Font'\n        // ProcSet\n        // Properties\n      ]);\n      var bbox = appearanceDict.get('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.get('Matrix') || [1, 0, 0, 1, 0 ,0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n\n      var border = data.border;\n\n      resourcesPromise.then(function(resources) {\n        var opList = new OperatorList();\n        opList.addOp(OPS.beginAnnotation, [data.rect, transform, matrix]);\n        evaluator.getOperatorList(this.appearance, resources, opList);\n        opList.addOp(OPS.endAnnotation, []);\n        promise.resolve(opList);\n      }.bind(this));\n\n      return promise;\n    }\n  };\n\n  Annotation.getConstructor =\n      function Annotation_getConstructor(subtype, fieldType) {\n\n    if (!subtype) {\n      return;\n    }\n\n    // TODO(mack): Implement FreeText annotations\n    if (subtype === 'Link') {\n      return LinkAnnotation;\n    } else if (subtype === 'Text') {\n      return TextAnnotation;\n    } else if (subtype === 'Widget') {\n      if (!fieldType) {\n        return;\n      }\n\n      if (fieldType === 'Tx') {\n        return TextWidgetAnnotation;\n      } else {\n        return WidgetAnnotation;\n      }\n    } else {\n      return Annotation;\n    }\n  };\n\n  // TODO(mack): Support loading annotation from data\n  Annotation.fromData = function Annotation_fromData(data) {\n    var subtype = data.subtype;\n    var fieldType = data.fieldType;\n    var Constructor = Annotation.getConstructor(subtype, fieldType);\n    if (Constructor) {\n      return new Constructor({ data: data });\n    }\n  };\n\n  Annotation.fromRef = function Annotation_fromRef(xref, ref) {\n\n    var dict = xref.fetchIfRef(ref);\n    if (!isDict(dict)) {\n      return;\n    }\n\n    var subtype = dict.get('Subtype');\n    subtype = isName(subtype) ? subtype.name : '';\n    if (!subtype) {\n      return;\n    }\n\n    var fieldType = Util.getInheritableProperty(dict, 'FT');\n    fieldType = isName(fieldType) ? fieldType.name : '';\n\n    var Constructor = Annotation.getConstructor(subtype, fieldType);\n    if (!Constructor) {\n      return;\n    }\n\n    var params = {\n      dict: dict,\n      ref: ref,\n    };\n\n    var annotation = new Constructor(params);\n\n    if (annotation.isViewable()) {\n      return annotation;\n    } else {\n      TODO('unimplemented annotation type: ' + subtype);\n    }\n  };\n\n  Annotation.appendToOperatorList = function Annotation_appendToOperatorList(\n      annotations, opList, pdfManager, partialEvaluator) {\n\n    function reject(e) {\n      annotationsReadyPromise.reject(e);\n    }\n\n    var annotationsReadyPromise = new Promise();\n\n    var annotationPromises = [];\n    for (var i = 0, n = annotations.length; i < n; ++i) {\n      annotationPromises.push(annotations[i].getOperatorList(partialEvaluator));\n    }\n    Promise.all(annotationPromises).then(function(datas) {\n      opList.addOp(OPS.beginAnnotations, []);\n      for (var i = 0, n = datas.length; i < n; ++i) {\n        var annotOpList = datas[i];\n        opList.addOpList(annotOpList);\n      }\n      opList.addOp(OPS.endAnnotations, []);\n      annotationsReadyPromise.resolve();\n    }, reject);\n\n    return annotationsReadyPromise;\n  };\n\n  return Annotation;\n})();\nPDFJS.Annotation = Annotation;\n\n\nvar WidgetAnnotation = (function WidgetAnnotationClosure() {\n\n  function WidgetAnnotation(params) {\n    Annotation.call(this, params);\n\n    if (params.data) {\n      return;\n    }\n\n    var dict = params.dict;\n    var data = this.data;\n\n    data.fieldValue = stringToPDFString(\n      Util.getInheritableProperty(dict, 'V') || '');\n    data.alternativeText = stringToPDFString(dict.get('TU') || '');\n    data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = isName(fieldType) ? fieldType.name : '';\n    data.fieldFlags = Util.getInheritableProperty(dict, 'Ff') || 0;\n    this.fieldResources = Util.getInheritableProperty(dict, 'DR') || new Dict();\n\n    // Building the full field name by collecting the field and\n    // its ancestors 'T' data and joining them using '.'.\n    var fieldName = [];\n    var namedItem = dict;\n    var ref = params.ref;\n    while (namedItem) {\n      var parent = namedItem.get('Parent');\n      var parentRef = namedItem.getRaw('Parent');\n      var name = namedItem.get('T');\n      if (name) {\n        fieldName.unshift(stringToPDFString(name));\n      } else {\n        // The field name is absent, that means more than one field\n        // with the same name may exist. Replacing the empty name\n        // with the '`' plus index in the parent's 'Kids' array.\n        // This is not in the PDF spec but necessary to id the\n        // the input controls.\n        var kids = parent.get('Kids');\n        var j, jj;\n        for (j = 0, jj = kids.length; j < jj; j++) {\n          var kidRef = kids[j];\n          if (kidRef.num == ref.num && kidRef.gen == ref.gen)\n            break;\n        }\n        fieldName.unshift('`' + j);\n      }\n      namedItem = parent;\n      ref = parentRef;\n    }\n    data.fullName = fieldName.join('.');\n  }\n\n  var parent = Annotation.prototype;\n  Util.inherit(WidgetAnnotation, Annotation, {\n    isViewable: function WidgetAnnotation_isViewable() {\n      if (this.data.fieldType === 'Sig') {\n        TODO('unimplemented annotation type: Widget signature');\n        return false;\n      }\n\n      return parent.isViewable.call(this);\n    }\n  });\n\n  return WidgetAnnotation;\n})();\n\nvar TextWidgetAnnotation = (function TextWidgetAnnotationClosure() {\n  function TextWidgetAnnotation(params) {\n    WidgetAnnotation.call(this, params);\n\n    if (params.data) {\n      return;\n    }\n\n    this.data.textAlignment = Util.getInheritableProperty(params.dict, 'Q');\n  }\n\n  // TODO(mack): This dupes some of the logic in CanvasGraphics.setFont()\n  function setTextStyles(element, item, fontObj) {\n\n    var style = element.style;\n    style.fontSize = item.fontSize + 'px';\n    style.direction = item.fontDirection < 0 ? 'rtl': 'ltr';\n\n    if (!fontObj) {\n      return;\n    }\n\n    style.fontWeight = fontObj.black ?\n                            (fontObj.bold ? 'bolder' : 'bold') :\n                            (fontObj.bold ? 'bold' : 'normal');\n    style.fontStyle = fontObj.italic ? 'italic' : 'normal';\n\n    var fontName = fontObj.loadedName;\n    var fontFamily = fontName ? '\"' + fontName + '\", ' : '';\n    // Use a reasonable default font if the font doesn't specify a fallback\n    var fallbackName = fontObj.fallbackName || 'Helvetica, sans-serif';\n    style.fontFamily = fontFamily + fallbackName;\n  }\n\n\n  var parent = WidgetAnnotation.prototype;\n  Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n    hasHtml: function TextWidgetAnnotation_hasHtml() {\n      return !this.data.hasAppearance && !!this.data.fieldValue;\n    },\n\n    getHtmlElement: function TextWidgetAnnotation_getHtmlElement(commonObjs) {\n      assert(!isWorker, 'getHtmlElement() shall be called from main thread');\n\n      var item = this.data;\n\n      var element = this.getEmptyContainer('div');\n      element.style.display = 'table';\n\n      var content = document.createElement('div');\n      content.textContent = item.fieldValue;\n      var textAlignment = item.textAlignment;\n      content.style.textAlign = ['left', 'center', 'right'][textAlignment];\n      content.style.verticalAlign = 'middle';\n      content.style.display = 'table-cell';\n\n      var fontObj = item.fontRefName ?\n                    commonObjs.getData(item.fontRefName) : null;\n      var cssRules = setTextStyles(content, item, fontObj);\n\n      element.appendChild(content);\n\n      return element;\n    },\n\n    getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator) {\n      if (this.appearance) {\n        return Annotation.prototype.getOperatorList.call(this, evaluator);\n      }\n\n      var promise = new Promise();\n      var opList = new OperatorList();\n      var data = this.data;\n\n      // Even if there is an appearance stream, ignore it. This is the\n      // behaviour used by Adobe Reader.\n\n      var defaultAppearance = data.defaultAppearance;\n      if (!defaultAppearance) {\n        promise.resolve(opList);\n        return promise;\n      }\n\n      // Include any font resources found in the default appearance\n\n      var stream = new Stream(stringToBytes(defaultAppearance));\n      evaluator.getOperatorList(stream, this.fieldResources, opList);\n      var appearanceFnArray = opList.fnArray;\n      var appearanceArgsArray = opList.argsArray;\n      var fnArray = [];\n      var argsArray = [];\n\n      // TODO(mack): Add support for stroke color\n      data.rgb = [0, 0, 0];\n      // TODO THIS DOESN'T MAKE ANY SENSE SINCE THE fnArray IS EMPTY!\n      for (var i = 0, n = fnArray.length; i < n; ++i) {\n        var fnId = appearanceFnArray[i];\n        var args = appearanceArgsArray[i];\n\n        if (fnId === OPS.setFont) {\n          data.fontRefName = args[0];\n          var size = args[1];\n          if (size < 0) {\n            data.fontDirection = -1;\n            data.fontSize = -size;\n          } else {\n            data.fontDirection = 1;\n            data.fontSize = size;\n          }\n        } else if (fnId === OPS.setFillRGBColor) {\n          data.rgb = args;\n        } else if (fnId === OPS.setFillGray) {\n          var rgbValue = args[0] * 255;\n          data.rgb = [rgbValue, rgbValue, rgbValue];\n        }\n      }\n      promise.resolve(opList);\n      return promise;\n    }\n  });\n\n  return TextWidgetAnnotation;\n})();\n\nvar TextAnnotation = (function TextAnnotationClosure() {\n  function TextAnnotation(params) {\n    Annotation.call(this, params);\n\n    if (params.data) {\n      return;\n    }\n\n    var dict = params.dict;\n    var data = this.data;\n\n    var content = dict.get('Contents');\n    var title = dict.get('T');\n    data.content = stringToPDFString(content || '');\n    data.title = stringToPDFString(title || '');\n    data.name = !dict.has('Name') ? 'Note' : dict.get('Name').name;\n  }\n\n  var ANNOT_MIN_SIZE = 10;\n\n  Util.inherit(TextAnnotation, Annotation, {\n\n    getOperatorList: function TextAnnotation_getOperatorList(evaluator) {\n      var promise = new Promise();\n      promise.resolve(new OperatorList());\n      return promise;\n    },\n\n    hasHtml: function TextAnnotation_hasHtml() {\n      return true;\n    },\n\n    getHtmlElement: function TextAnnotation_getHtmlElement(commonObjs) {\n      assert(!isWorker, 'getHtmlElement() shall be called from main thread');\n\n      var item = this.data;\n      var rect = item.rect;\n\n      // sanity check because of OOo-generated PDFs\n      if ((rect[3] - rect[1]) < ANNOT_MIN_SIZE) {\n        rect[3] = rect[1] + ANNOT_MIN_SIZE;\n      }\n      if ((rect[2] - rect[0]) < ANNOT_MIN_SIZE) {\n        rect[2] = rect[0] + (rect[3] - rect[1]); // make it square\n      }\n\n      var container = this.getEmptyContainer('section', rect);\n      container.className = 'annotText';\n\n      var image = document.createElement('img');\n      image.style.height = container.style.height;\n      var iconName = item.name;\n      image.src = PDFJS.imageResourcesPath + 'annotation-' +\n        iconName.toLowerCase() + '.svg';\n      image.alt = '[{{type}} Annotation]';\n      image.dataset.l10nId = 'text_annotation_type';\n      image.dataset.l10nArgs = JSON.stringify({type: iconName});\n      var content = document.createElement('div');\n      content.setAttribute('hidden', true);\n      var title = document.createElement('h1');\n      var text = document.createElement('p');\n      content.style.left = Math.floor(rect[2] - rect[0]) + 'px';\n      content.style.top = '0px';\n      title.textContent = item.title;\n\n      if (!item.content && !item.title) {\n        content.setAttribute('hidden', true);\n      } else {\n        var e = document.createElement('span');\n        var lines = item.content.split(/(?:\\r\\n?|\\n)/);\n        for (var i = 0, ii = lines.length; i < ii; ++i) {\n          var line = lines[i];\n          e.appendChild(document.createTextNode(line));\n          if (i < (ii - 1))\n            e.appendChild(document.createElement('br'));\n        }\n        text.appendChild(e);\n\n        var showAnnotation = function showAnnotation() {\n          container.style.zIndex += 1;\n          content.removeAttribute('hidden');\n        };\n\n        var hideAnnotation = function hideAnnotation(e) {\n          if (e.toElement || e.relatedTarget) { // No context menu is used\n            container.style.zIndex -= 1;\n            content.setAttribute('hidden', true);\n          }\n        };\n\n        content.addEventListener('mouseover', showAnnotation, false);\n        content.addEventListener('mouseout', hideAnnotation, false);\n        image.addEventListener('mouseover', showAnnotation, false);\n        image.addEventListener('mouseout', hideAnnotation, false);\n      }\n\n      content.appendChild(title);\n      content.appendChild(text);\n      container.appendChild(image);\n      container.appendChild(content);\n\n      return container;\n    }\n  });\n\n  return TextAnnotation;\n})();\n\nvar LinkAnnotation = (function LinkAnnotationClosure() {\n  function LinkAnnotation(params) {\n    Annotation.call(this, params);\n\n    if (params.data) {\n      return;\n    }\n\n    var dict = params.dict;\n    var data = this.data;\n\n    var action = dict.get('A');\n    if (action) {\n      var linkType = action.get('S').name;\n      if (linkType === 'URI') {\n        var url = addDefaultProtocolToUrl(action.get('URI'));\n        // TODO: pdf spec mentions urls can be relative to a Base\n        // entry in the dictionary.\n        if (!isValidUrl(url, false)) {\n          url = '';\n        }\n        data.url = url;\n      } else if (linkType === 'GoTo') {\n        data.dest = action.get('D');\n      } else if (linkType === 'GoToR') {\n        var urlDict = action.get('F');\n        if (isDict(urlDict)) {\n          // We assume that the 'url' is a Filspec dictionary\n          // and fetch the url without checking any further\n          url = urlDict.get('F') || '';\n        }\n\n        // TODO: pdf reference says that GoToR\n        // can also have 'NewWindow' attribute\n        if (!isValidUrl(url, false)) {\n          url = '';\n        }\n        data.url = url;\n        data.dest = action.get('D');\n      } else if (linkType === 'Named') {\n        data.action = action.get('N').name;\n      } else {\n        TODO('unrecognized link type: ' + linkType);\n      }\n    } else if (dict.has('Dest')) {\n      // simple destination link\n      var dest = dict.get('Dest');\n      data.dest = isName(dest) ? dest.name : dest;\n    }\n  }\n\n  // Lets URLs beginning with 'www.' default to using the 'http://' protocol.\n  function addDefaultProtocolToUrl(url) {\n    if (url.indexOf('www.') === 0) {\n      return ('http://' + url);\n    }\n    return url;\n  }\n\n  Util.inherit(LinkAnnotation, Annotation, {\n    hasOperatorList: function LinkAnnotation_hasOperatorList() {\n      return false;\n    },\n\n    hasHtml: function LinkAnnotation_hasHtml() {\n      return true;\n    },\n\n    getHtmlElement: function LinkAnnotation_getHtmlElement(commonObjs) {\n      var rect = this.data.rect;\n      var element = document.createElement('a');\n      var borderWidth = this.data.borderWidth;\n\n      element.style.borderWidth = borderWidth + 'px';\n      var color = this.data.color;\n      var rgb = [];\n      for (var i = 0; i < 3; ++i) {\n        rgb[i] = Math.round(color[i] * 255);\n      }\n      element.style.borderColor = Util.makeCssRgb(rgb);\n      element.style.borderStyle = 'solid';\n\n      var width = rect[2] - rect[0] - 2 * borderWidth;\n      var height = rect[3] - rect[1] - 2 * borderWidth;\n      element.style.width = width + 'px';\n      element.style.height = height + 'px';\n\n      element.href = this.data.url || '';\n      return element;\n    }\n  });\n\n  return LinkAnnotation;\n})();\n\n\n/**\n * The maximum allowed image size in total pixels e.g. width * height. Images\n * above this value will not be drawn. Use -1 for no limit.\n * @var {Number}\n */\nPDFJS.maxImageSize = PDFJS.maxImageSize === undefined ? -1 : PDFJS.maxImageSize;\n\n/**\n * By default fonts are converted to OpenType fonts and loaded via font face\n * rules. If disabled, the font will be rendered using a built in font renderer\n * that constructs the glyphs with primitive path commands.\n * @var {Boolean}\n */\nPDFJS.disableFontFace = PDFJS.disableFontFace === undefined ?\n                        false : PDFJS.disableFontFace;\n\n/**\n * Path for image resources, mainly for annotation icons. Include trailing\n * slash.\n * @var {String}\n */\nPDFJS.imageResourcesPath = PDFJS.imageResourcesPath === undefined ?\n                           '' : PDFJS.imageResourcesPath;\n\n/**\n * Disable the web worker and run all code on the main thread. This will happen\n * automatically if the browser doesn't support workers or sending typed arrays\n * to workers.\n * @var {Boolean}\n */\nPDFJS.disableWorker = PDFJS.disableWorker === undefined ?\n                      false : PDFJS.disableWorker;\n\n/**\n * Path and filename of the worker file. Required when the worker is enabled in\n * development mode. If unspecified in the production build, the worker will be\n * loaded based on the location of the pdf.js file.\n * @var {String}\n */\nPDFJS.workerSrc = PDFJS.workerSrc === undefined ? null : PDFJS.workerSrc;\n\n/**\n * Disable range request loading of PDF files. When enabled and if the server\n * supports partial content requests then the PDF will be fetched in chunks.\n * Enabled (false) by default.\n * @var {Boolean}\n */\nPDFJS.disableRange = PDFJS.disableRange === undefined ?\n                     false : PDFJS.disableRange;\n\n/**\n * Disable pre-fetching of PDF file data. When range requests are enabled PDF.js\n * will automatically keep fetching more data even if it isn't needed to display\n * the current page. This default behavior can be disabled.\n * @var {Boolean}\n */\nPDFJS.disableAutoFetch = PDFJS.disableAutoFetch === undefined ?\n                         false : PDFJS.disableAutoFetch;\n\n/**\n * Enables special hooks for debugging PDF.js.\n * @var {Boolean}\n */\nPDFJS.pdfBug = PDFJS.pdfBug === undefined ? false : PDFJS.pdfBug;\n\n/**\n * Enables transfer usage in postMessage for ArrayBuffers.\n * @var {boolean}\n */\nPDFJS.postMessageTransfers = PDFJS.postMessageTransfers === undefined ?\n                             true : PDFJS.postMessageTransfers;\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedAray|object} source Can be an url to where a PDF is\n * located, a typed array (Uint8Array) already populated with data or\n * and parameter object with the following possible fields:\n *  - url   - The URL of the PDF.\n *  - data  - A typed array with PDF data.\n *  - httpHeaders - Basic authentication headers.\n *  - password - For decrypting password-protected PDFs.\n *  - initialData - A typed array with the first portion or all of the pdf data.\n *                  Used by the extension since some data is already loaded\n *                  before the switch to range requests. \n *\n * @param {object} pdfDataRangeTransport is optional. It is used if you want\n * to manually serve range requests for data in the PDF. See viewer.js for\n * an example of pdfDataRangeTransport's interface.\n *\n * @param {function} passwordCallback is optional. It is used to request a\n * password if wrong or no password was provided. The callback receives two\n * parameters: function that needs to be called with new password and reason\n * (see {PasswordResponses}).\n *\n * @return {Promise} A promise that is resolved with {PDFDocumentProxy} object.\n */\nPDFJS.getDocument = function getDocument(source,\n                                         pdfDataRangeTransport,\n                                         passwordCallback,\n                                         progressCallback) {\n  var workerInitializedPromise, workerReadyPromise, transport;\n\n  if (typeof source === 'string') {\n    source = { url: source };\n  } else if (isArrayBuffer(source)) {\n    source = { data: source };\n  } else if (typeof source !== 'object') {\n    error('Invalid parameter in getDocument, need either Uint8Array, ' +\n          'string or a parameter object');\n  }\n\n  if (!source.url && !source.data)\n    error('Invalid parameter array, need either .data or .url');\n\n  // copy/use all keys as is except 'url' -- full path is required\n  var params = {};\n  for (var key in source) {\n    if (key === 'url' && typeof window !== 'undefined') {\n      params[key] = combineUrl(window.location.href, source[key]);\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  workerInitializedPromise = new PDFJS.Promise();\n  workerReadyPromise = new PDFJS.Promise();\n  transport = new WorkerTransport(workerInitializedPromise,\n      workerReadyPromise, pdfDataRangeTransport, progressCallback);\n  workerInitializedPromise.then(function transportInitialized() {\n    transport.passwordCallback = passwordCallback;\n    transport.fetchDocument(params);\n  });\n  return workerReadyPromise;\n};\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nvar PDFDocumentProxy = (function PDFDocumentProxyClosure() {\n  function PDFDocumentProxy(pdfInfo, transport) {\n    this.pdfInfo = pdfInfo;\n    this.transport = transport;\n  }\n  PDFDocumentProxy.prototype = {\n    /**\n     * @return {number} Total number of pages the PDF contains.\n     */\n    get numPages() {\n      return this.pdfInfo.numPages;\n    },\n    /**\n     * @return {string} A unique ID to identify a PDF. Not guaranteed to be\n     * unique.\n     */\n    get fingerprint() {\n      return this.pdfInfo.fingerprint;\n    },\n    /**\n     * @return {boolean} true if embedded document fonts are in use. Will be\n     * set during rendering of the pages.\n     */\n    get embeddedFontsUsed() {\n      return this.transport.embeddedFontsUsed;\n    },\n    /**\n     * @param {number} The page number to get. The first page is 1.\n     * @return {Promise} A promise that is resolved with a {PDFPageProxy}\n     * object.\n     */\n    getPage: function PDFDocumentProxy_getPage(number) {\n      return this.transport.getPage(number);\n    },\n    /**\n     * @param {object} Must have 'num' and 'gen' properties.\n     * @return {Promise} A promise that is resolved with the page index that is\n     * associated with the reference.\n     */\n    getPageIndex: function PDFDocumentProxy_getPageIndex(ref) {\n      return this.transport.getPageIndex(ref);\n    },\n    /**\n     * @return {Promise} A promise that is resolved with a lookup table for\n     * mapping named destinations to reference numbers.\n     */\n    getDestinations: function PDFDocumentProxy_getDestinations() {\n      return this.transport.getDestinations();\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an array of all the\n     * JavaScript strings in the name tree.\n     */\n    getJavaScript: function PDFDocumentProxy_getDestinations() {\n      var promise = new PDFJS.Promise();\n      var js = this.pdfInfo.javaScript;\n      promise.resolve(js);\n      return promise;\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an {array} that is a\n     * tree outline (if it has one) of the PDF. The tree is in the format of:\n     * [\n     *  {\n     *   title: string,\n     *   bold: boolean,\n     *   italic: boolean,\n     *   color: rgb array,\n     *   dest: dest obj,\n     *   items: array of more items like this\n     *  },\n     *  ...\n     * ].\n     */\n    getOutline: function PDFDocumentProxy_getOutline() {\n      var promise = new PDFJS.Promise();\n      var outline = this.pdfInfo.outline;\n      promise.resolve(outline);\n      return promise;\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an {object} that has\n     * info and metadata properties.  Info is an {object} filled with anything\n     * available in the information dictionary and similarly metadata is a\n     * {Metadata} object with information from the metadata section of the PDF.\n     */\n    getMetadata: function PDFDocumentProxy_getMetadata() {\n      var promise = new PDFJS.Promise();\n      var info = this.pdfInfo.info;\n      var metadata = this.pdfInfo.metadata;\n      promise.resolve({\n        info: info,\n        metadata: metadata ? new PDFJS.Metadata(metadata) : null\n      });\n      return promise;\n    },\n    isEncrypted: function PDFDocumentProxy_isEncrypted() {\n      var promise = new PDFJS.Promise();\n      promise.resolve(this.pdfInfo.encrypted);\n      return promise;\n    },\n    /**\n     * @return {Promise} A promise that is resolved with a TypedArray that has\n     * the raw data from the PDF.\n     */\n    getData: function PDFDocumentProxy_getData() {\n      var promise = new PDFJS.Promise();\n      this.transport.getData(promise);\n      return promise;\n    },\n    /**\n     * @return {Promise} A promise that is resolved when the document's data\n     * is loaded\n     */\n    dataLoaded: function PDFDocumentProxy_dataLoaded() {\n      return this.transport.dataLoaded();\n    },\n    cleanup: function PDFDocumentProxy_cleanup() {\n      this.transport.startCleanup();\n    },\n    destroy: function PDFDocumentProxy_destroy() {\n      this.transport.destroy();\n    }\n  };\n  return PDFDocumentProxy;\n})();\n\nvar PDFPageProxy = (function PDFPageProxyClosure() {\n  function PDFPageProxy(pageInfo, transport) {\n    this.pageInfo = pageInfo;\n    this.transport = transport;\n    this.stats = new StatTimer();\n    this.stats.enabled = !!globalScope.PDFJS.enableStats;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this.receivingOperatorList  = false;\n    this.cleanupAfterRender = false;\n    this.pendingDestroy = false;\n    this.renderTasks = [];\n  }\n  PDFPageProxy.prototype = {\n    /**\n     * @return {number} Page number of the page. First page is 1.\n     */\n    get pageNumber() {\n      return this.pageInfo.pageIndex + 1;\n    },\n    /**\n     * @return {number} The number of degrees the page is rotated clockwise.\n     */\n    get rotate() {\n      return this.pageInfo.rotate;\n    },\n    /**\n     * @return {object} The reference that points to this page. It has 'num' and\n     * 'gen' properties.\n     */\n    get ref() {\n      return this.pageInfo.ref;\n    },\n    /**\n     * @return {array} An array of the visible portion of the PDF page in the\n     * user space units - [x1, y1, x2, y2].\n     */\n    get view() {\n      return this.pageInfo.view;\n    },\n    /**\n     * @param {number} scale The desired scale of the viewport.\n     * @param {number} rotate Degrees to rotate the viewport. If omitted this\n     * defaults to the page rotation.\n     * @return {PageViewport} Contains 'width' and 'height' properties along\n     * with transforms required for rendering.\n     */\n    getViewport: function PDFPageProxy_getViewport(scale, rotate) {\n      if (arguments.length < 2)\n        rotate = this.rotate;\n      return new PDFJS.PageViewport(this.view, scale, rotate, 0, 0);\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an {array} of the\n     * annotation objects.\n     */\n    getAnnotations: function PDFPageProxy_getAnnotations() {\n      if (this.annotationsPromise)\n        return this.annotationsPromise;\n\n      var promise = new PDFJS.Promise();\n      this.annotationsPromise = promise;\n      this.transport.getAnnotations(this.pageInfo.pageIndex);\n      return promise;\n    },\n    /**\n     * Begins the process of rendering a page to the desired context.\n     * @param {object} params A parameter object that supports:\n     * {\n     *   canvasContext(required): A 2D context of a DOM Canvas object.,\n     *   textLayer(optional): An object that has beginLayout, endLayout, and\n     *                        appendText functions.,\n     *   imageLayer(optional): An object that has beginLayout, endLayout and\n     *                         appendImage functions.,\n     *   continueCallback(optional): A function that will be called each time\n     *                               the rendering is paused.  To continue\n     *                               rendering call the function that is the\n     *                               first argument to the callback.\n     * }.\n     * @return {RenderTask} An extended promise that is resolved when the page\n     * finishes rendering (see RenderTask).\n     */\n    render: function PDFPageProxy_render(params) {\n      var stats = this.stats;\n      stats.time('Overall');\n\n      // If there was a pending destroy cancel it so no cleanup happens during\n      // this call to render.\n      this.pendingDestroy = false;\n\n      // If there is no displayReadyPromise yet, then the operatorList was never\n      // requested before. Make the request and create the promise.\n      if (!this.displayReadyPromise) {\n        this.receivingOperatorList = true;\n        this.displayReadyPromise = new Promise();\n        this.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        this.stats.time('Page Request');\n        this.transport.messageHandler.send('RenderPageRequest', {\n          pageIndex: this.pageNumber - 1\n        });\n      }\n\n      var internalRenderTask = new InternalRenderTask(complete, params,\n                                       this.objs, this.commonObjs,\n                                       this.operatorList, this.pageNumber);\n      this.renderTasks.push(internalRenderTask);\n      var renderTask = new RenderTask(internalRenderTask);\n\n      var self = this;\n      this.displayReadyPromise.then(\n        function pageDisplayReadyPromise(transparency) {\n          if (self.pendingDestroy) {\n            complete();\n            return;\n          }\n          stats.time('Rendering');\n          internalRenderTask.initalizeGraphics(transparency);\n          internalRenderTask.operatorListChanged();\n        },\n        function pageDisplayReadPromiseError(reason) {\n          complete(reason);\n        }\n      );\n\n      function complete(error) {\n        var i = self.renderTasks.indexOf(internalRenderTask);\n        if (i >= 0) {\n          self.renderTasks.splice(i, 1);\n        }\n\n        if (self.cleanupAfterRender) {\n          self.pendingDestroy = true;\n        }\n        self._tryDestroy();\n\n        if (error) {\n          renderTask.reject(error);\n        } else {\n          renderTask.resolve();\n        }\n        stats.timeEnd('Rendering');\n        stats.timeEnd('Overall');\n      }\n\n      return renderTask;\n    },\n    /**\n     * @return {Promise} That is resolved with the a {string} that is the text\n     * content from the page.\n     */\n    getTextContent: function PDFPageProxy_getTextContent() {\n      var promise = new PDFJS.Promise();\n      this.transport.messageHandler.send('GetTextContent', {\n          pageIndex: this.pageNumber - 1\n        },\n        function textContentCallback(textContent) {\n          promise.resolve(textContent);\n        }\n      );\n      return promise;\n    },\n    /**\n     * Stub for future feature.\n     */\n    getOperationList: function PDFPageProxy_getOperationList() {\n      var promise = new PDFJS.Promise();\n      var operationList = { // not implemented\n        dependencyFontsID: null,\n        operatorList: null\n      };\n      promise.resolve(operationList);\n      return promise;\n    },\n    /**\n     * Destroys resources allocated by the page.\n     */\n    destroy: function PDFPageProxy_destroy() {\n      this.pendingDestroy = true;\n      this._tryDestroy();\n    },\n    /**\n     * For internal use only. Attempts to clean up if rendering is in a state\n     * where that's possible.\n     */\n    _tryDestroy: function PDFPageProxy__destroy() {\n      if (!this.pendingDestroy ||\n          this.renderTasks.length !== 0 ||\n          this.receivingOperatorList) {\n        return;\n      }\n\n      delete this.operatorList;\n      delete this.displayReadyPromise;\n      this.objs.clear();\n      this.pendingDestroy = false;\n    },\n    /**\n     * For internal use only.\n     */\n    _startRenderPage: function PDFPageProxy_startRenderPage(transparency) {\n      this.displayReadyPromise.resolve(transparency);\n    },\n    /**\n     * For internal use only.\n     */\n    _renderPageChunk: function PDFPageProxy_renderPageChunk(operatorListChunk) {\n      // Add the new chunk to the current operator list.\n      for (var i = 0, ii = operatorListChunk.length; i < ii; i++) {\n        this.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n        this.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n      }\n      this.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n      // Notify all the rendering tasks there are more operators to be consumed.\n      for (var i = 0; i < this.renderTasks.length; i++) {\n        this.renderTasks[i].operatorListChanged();\n      }\n\n      if (operatorListChunk.lastChunk) {\n        this.receivingOperatorList = false;\n        this._tryDestroy();\n      }\n    }\n  };\n  return PDFPageProxy;\n})();\n/**\n * For internal use only.\n */\nvar WorkerTransport = (function WorkerTransportClosure() {\n  function WorkerTransport(workerInitializedPromise, workerReadyPromise,\n      pdfDataRangeTransport, progressCallback) {\n    this.pdfDataRangeTransport = pdfDataRangeTransport;\n\n    this.workerReadyPromise = workerReadyPromise;\n    this.progressCallback = progressCallback;\n    this.commonObjs = new PDFObjects();\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.embeddedFontsUsed = false;\n\n    this.passwordCallback = null;\n\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fullfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an Uint8Array\n    // as it arrives on the worker. Chrome added this with version 15.\n    if (!globalScope.PDFJS.disableWorker && typeof Worker !== 'undefined') {\n      var workerSrc = PDFJS.workerSrc;\n      if (!workerSrc) {\n        error('No PDFJS.workerSrc specified');\n      }\n\n      try {\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        var worker = new Worker(workerSrc);\n        var messageHandler = new MessageHandler('main', worker);\n        this.messageHandler = messageHandler;\n\n        messageHandler.on('test', function transportTest(data) {\n          var supportTypedArray = data && data.supportTypedArray;\n          if (supportTypedArray) {\n            this.worker = worker;\n            if (!data.supportTransfers) {\n              PDFJS.postMessageTransfers = false;\n            }\n            this.setupMessageHandler(messageHandler);\n            workerInitializedPromise.resolve();\n          } else {\n            globalScope.PDFJS.disableWorker = true;\n            this.loadFakeWorkerFiles().then(function() {\n              this.setupFakeWorker();\n              workerInitializedPromise.resolve();\n            }.bind(this));\n          }\n        }.bind(this));\n\n        var testObj = new Uint8Array([PDFJS.postMessageTransfers ? 255 : 0]);\n        // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n        // typed array. Also, checking if we can use transfers.\n        try {\n          messageHandler.send('test', testObj, null, [testObj.buffer]);\n        } catch (ex) {\n          info('Cannot use postMessage transfers');\n          testObj[0] = 0;\n          messageHandler.send('test', testObj);\n        }\n        return;\n      } catch (e) {\n        info('The worker has been disabled.');\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    globalScope.PDFJS.disableWorker = true;\n    this.loadFakeWorkerFiles().then(function() {\n      this.setupFakeWorker();\n      workerInitializedPromise.resolve();\n    }.bind(this));\n  }\n  WorkerTransport.prototype = {\n    destroy: function WorkerTransport_destroy() {\n      this.pageCache = [];\n      this.pagePromises = [];\n      var self = this;\n      this.messageHandler.send('Terminate', null, function () {\n        if (self.worker) {\n          self.worker.terminate();\n        }\n      });\n    },\n\n    loadFakeWorkerFiles: function WorkerTransport_loadFakeWorkerFiles() {\n      if (!PDFJS.fakeWorkerFilesLoadedPromise) {\n        PDFJS.fakeWorkerFilesLoadedPromise = new Promise();\n        // In the developer build load worker_loader which in turn loads all the\n        // other files and resolves the promise. In production only the\n        // pdf.worker.js file is needed.\n        Util.loadScript(PDFJS.workerSrc, function() {\n          PDFJS.fakeWorkerFilesLoadedPromise.resolve();\n        });\n      }\n      return PDFJS.fakeWorkerFilesLoadedPromise;\n    },\n\n    setupFakeWorker: function WorkerTransport_setupFakeWorker() {\n      warn('Setting up fake worker.');\n      // If we don't use a worker, just post/sendMessage to the main thread.\n      var fakeWorker = {\n        postMessage: function WorkerTransport_postMessage(obj) {\n          fakeWorker.onmessage({data: obj});\n        },\n        terminate: function WorkerTransport_terminate() {}\n      };\n\n      var messageHandler = new MessageHandler('main', fakeWorker);\n      this.setupMessageHandler(messageHandler);\n\n      // If the main thread is our worker, setup the handling for the messages\n      // the main thread sends to it self.\n      PDFJS.WorkerMessageHandler.setup(messageHandler);\n    },\n\n    setupMessageHandler:\n      function WorkerTransport_setupMessageHandler(messageHandler) {\n      this.messageHandler = messageHandler;\n\n      function updatePassword(password) {\n        messageHandler.send('UpdatePassword', password);\n      }\n\n      var pdfDataRangeTransport = this.pdfDataRangeTransport;\n      if (pdfDataRangeTransport) {\n        pdfDataRangeTransport.addRangeListener(function(begin, chunk) {\n          messageHandler.send('OnDataRange', {\n            begin: begin,\n            chunk: chunk\n          });\n        });\n\n        pdfDataRangeTransport.addProgressListener(function(loaded) {\n          messageHandler.send('OnDataProgress', {\n            loaded: loaded\n          });\n        });\n\n        messageHandler.on('RequestDataRange',\n          function transportDataRange(data) {\n            pdfDataRangeTransport.requestDataRange(data.begin, data.end);\n          }, this);\n      }\n\n      messageHandler.on('GetDoc', function transportDoc(data) {\n        var pdfInfo = data.pdfInfo;\n        var pdfDocument = new PDFDocumentProxy(pdfInfo, this);\n        this.pdfDocument = pdfDocument;\n        this.workerReadyPromise.resolve(pdfDocument);\n      }, this);\n\n      messageHandler.on('NeedPassword', function transportPassword(data) {\n        if (this.passwordCallback) {\n          return this.passwordCallback(updatePassword,\n                                       PasswordResponses.NEED_PASSWORD);\n        }\n        this.workerReadyPromise.reject(data.exception.message, data.exception);\n      }, this);\n\n      messageHandler.on('IncorrectPassword', function transportBadPass(data) {\n        if (this.passwordCallback) {\n          return this.passwordCallback(updatePassword,\n                                       PasswordResponses.INCORRECT_PASSWORD);\n        }\n        this.workerReadyPromise.reject(data.exception.message, data.exception);\n      }, this);\n\n      messageHandler.on('InvalidPDF', function transportInvalidPDF(data) {\n        this.workerReadyPromise.reject(data.exception.name, data.exception);\n      }, this);\n\n      messageHandler.on('MissingPDF', function transportMissingPDF(data) {\n        this.workerReadyPromise.reject(data.exception.message, data.exception);\n      }, this);\n\n      messageHandler.on('UnknownError', function transportUnknownError(data) {\n        this.workerReadyPromise.reject(data.exception.message, data.exception);\n      }, this);\n\n      messageHandler.on('GetPage', function transportPage(data) {\n        var pageInfo = data.pageInfo;\n        var page = new PDFPageProxy(pageInfo, this);\n        this.pageCache[pageInfo.pageIndex] = page;\n        var promise = this.pagePromises[pageInfo.pageIndex];\n        promise.resolve(page);\n      }, this);\n\n      messageHandler.on('GetAnnotations', function transportAnnotations(data) {\n        var annotations = data.annotations;\n        var promise = this.pageCache[data.pageIndex].annotationsPromise;\n        promise.resolve(annotations);\n      }, this);\n\n      messageHandler.on('StartRenderPage', function transportRender(data) {\n        var page = this.pageCache[data.pageIndex];\n\n        page.stats.timeEnd('Page Request');\n        page._startRenderPage(data.transparency);\n      }, this);\n\n      messageHandler.on('RenderPageChunk', function transportRender(data) {\n        var page = this.pageCache[data.pageIndex];\n\n        page._renderPageChunk(data.operatorList);\n      }, this);\n\n      messageHandler.on('commonobj', function transportObj(data) {\n        var id = data[0];\n        var type = data[1];\n        if (this.commonObjs.hasData(id))\n          return;\n\n        switch (type) {\n          case 'Font':\n            var exportedData = data[2];\n\n            var font;\n            if ('error' in exportedData) {\n              var error = exportedData.error;\n              warn('Error during font loading: ' + error);\n              this.commonObjs.resolve(id, error);\n              break;\n            } else {\n              font = new FontFace(exportedData);\n            }\n\n            FontLoader.bind(\n              [font],\n              function fontReady(fontObjs) {\n                this.commonObjs.resolve(id, font);\n              }.bind(this)\n            );\n            break;\n          case 'FontPath':\n            this.commonObjs.resolve(id, data[2]);\n            break;\n          default:\n            error('Got unknown common object type ' + type);\n        }\n      }, this);\n\n      messageHandler.on('obj', function transportObj(data) {\n        var id = data[0];\n        var pageIndex = data[1];\n        var type = data[2];\n        var pageProxy = this.pageCache[pageIndex];\n        if (pageProxy.objs.hasData(id))\n          return;\n\n        switch (type) {\n          case 'JpegStream':\n            var imageData = data[3];\n            loadJpegStream(id, imageData, pageProxy.objs);\n            break;\n          case 'Image':\n            var imageData = data[3];\n            pageProxy.objs.resolve(id, imageData);\n\n            // heuristics that will allow not to store large data\n            var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n            if ('data' in imageData &&\n                imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n              pageProxy.cleanupAfterRender = true;\n            }\n            break;\n          default:\n            error('Got unknown object type ' + type);\n        }\n      }, this);\n\n      messageHandler.on('DocProgress', function transportDocProgress(data) {\n        if (this.progressCallback) {\n          this.progressCallback({\n            loaded: data.loaded,\n            total: data.total\n          });\n        }\n      }, this);\n\n      messageHandler.on('DocError', function transportDocError(data) {\n        this.workerReadyPromise.reject(data);\n      }, this);\n\n      messageHandler.on('PageError', function transportError(data) {\n        var page = this.pageCache[data.pageNum - 1];\n        if (page.displayReadyPromise)\n          page.displayReadyPromise.reject(data.error);\n        else\n          error(data.error);\n      }, this);\n\n      messageHandler.on('JpegDecode', function(data, promise) {\n        var imageUrl = data[0];\n        var components = data[1];\n        if (components != 3 && components != 1)\n          error('Only 3 component or 1 component can be returned');\n\n        var img = new Image();\n        img.onload = (function messageHandler_onloadClosure() {\n          var width = img.width;\n          var height = img.height;\n          var size = width * height;\n          var rgbaLength = size * 4;\n          var buf = new Uint8Array(size * components);\n          var tmpCanvas = createScratchCanvas(width, height);\n          var tmpCtx = tmpCanvas.getContext('2d');\n          tmpCtx.drawImage(img, 0, 0);\n          var data = tmpCtx.getImageData(0, 0, width, height).data;\n\n          if (components == 3) {\n            for (var i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n              buf[j] = data[i];\n              buf[j + 1] = data[i + 1];\n              buf[j + 2] = data[i + 2];\n            }\n          } else if (components == 1) {\n            for (var i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n              buf[j] = data[i];\n            }\n          }\n          promise.resolve({ data: buf, width: width, height: height});\n        }).bind(this);\n        img.src = imageUrl;\n      });\n    },\n\n    fetchDocument: function WorkerTransport_fetchDocument(source) {\n      source.disableAutoFetch = PDFJS.disableAutoFetch;\n      source.chunkedViewerLoading = !!this.pdfDataRangeTransport;\n      this.messageHandler.send('GetDocRequest', {\n        source: source,\n        disableRange: PDFJS.disableRange,\n        maxImageSize: PDFJS.maxImageSize,\n        disableFontFace: PDFJS.disableFontFace\n      });\n    },\n\n    getData: function WorkerTransport_getData(promise) {\n      this.messageHandler.send('GetData', null, function(data) {\n        promise.resolve(data);\n      });\n    },\n\n    dataLoaded: function WorkerTransport_dataLoaded() {\n      var promise = new PDFJS.Promise();\n      this.messageHandler.send('DataLoaded', null, function(args) {\n        promise.resolve(args);\n      });\n      return promise;\n    },\n\n    getPage: function WorkerTransport_getPage(pageNumber, promise) {\n      var pageIndex = pageNumber - 1;\n      if (pageIndex in this.pagePromises)\n        return this.pagePromises[pageIndex];\n      var promise = new PDFJS.Promise('Page ' + pageNumber);\n      this.pagePromises[pageIndex] = promise;\n      this.messageHandler.send('GetPageRequest', { pageIndex: pageIndex });\n      return promise;\n    },\n\n    getPageIndex: function WorkerTransport_getPageIndexByRef(ref) {\n      var promise = new PDFJS.Promise();\n      this.messageHandler.send('GetPageIndex', { ref: ref },\n        function (pageIndex) {\n          promise.resolve(pageIndex);\n        }\n      );\n      return promise;\n    },\n\n    getAnnotations: function WorkerTransport_getAnnotations(pageIndex) {\n      this.messageHandler.send('GetAnnotationsRequest',\n        { pageIndex: pageIndex });\n    },\n\n    getDestinations: function WorkerTransport_getDestinations() {\n      var promise = new PDFJS.Promise();\n      this.messageHandler.send('GetDestinations', null,\n        function transportDestinations(destinations) {\n          promise.resolve(destinations);\n        }\n      );\n      return promise;\n    },\n\n    startCleanup: function WorkerTransport_startCleanup() {\n      this.messageHandler.send('Cleanup', null,\n        function endCleanup() {\n          for (var i = 0, ii = this.pageCache.length; i < ii; i++) {\n            var page = this.pageCache[i];\n            if (page) {\n              page.destroy();\n            }\n          }\n          this.commonObjs.clear();\n          FontLoader.clear();\n        }.bind(this)\n      );\n    }\n  };\n  return WorkerTransport;\n\n})();\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects\n * for fonts, images, rendering code and such. These objects might get processed\n * inside of a worker. The `PDFObjects` implements some basic functions to\n * manage these objects.\n */\nvar PDFObjects = (function PDFObjectsClosure() {\n  function PDFObjects() {\n    this.objs = {};\n  }\n\n  PDFObjects.prototype = {\n    /**\n     * Internal function.\n     * Ensures there is an object defined for `objId`.\n     */\n    ensureObj: function PDFObjects_ensureObj(objId) {\n      if (this.objs[objId])\n        return this.objs[objId];\n\n      var obj = {\n        promise: new Promise(objId),\n        data: null,\n        resolved: false\n      };\n      this.objs[objId] = obj;\n\n      return obj;\n    },\n\n    /**\n     * If called *without* callback, this returns the data of `objId` but the\n     * object needs to be resolved. If it isn't, this function throws.\n     *\n     * If called *with* a callback, the callback is called with the data of the\n     * object once the object is resolved. That means, if you call this\n     * function and the object is already resolved, the callback gets called\n     * right away.\n     */\n    get: function PDFObjects_get(objId, callback) {\n      // If there is a callback, then the get can be async and the object is\n      // not required to be resolved right now\n      if (callback) {\n        this.ensureObj(objId).promise.then(callback);\n        return null;\n      }\n\n      // If there isn't a callback, the user expects to get the resolved data\n      // directly.\n      var obj = this.objs[objId];\n\n      // If there isn't an object yet or the object isn't resolved, then the\n      // data isn't ready yet!\n      if (!obj || !obj.resolved)\n        error('Requesting object that isn\\'t resolved yet ' + objId);\n\n      return obj.data;\n    },\n\n    /**\n     * Resolves the object `objId` with optional `data`.\n     */\n    resolve: function PDFObjects_resolve(objId, data) {\n      var obj = this.ensureObj(objId);\n\n      obj.resolved = true;\n      obj.data = data;\n      obj.promise.resolve(data);\n    },\n\n    isResolved: function PDFObjects_isResolved(objId) {\n      var objs = this.objs;\n\n      if (!objs[objId]) {\n        return false;\n      } else {\n        return objs[objId].resolved;\n      }\n    },\n\n    hasData: function PDFObjects_hasData(objId) {\n      return this.isResolved(objId);\n    },\n\n    /**\n     * Returns the data of `objId` if object exists, null otherwise.\n     */\n    getData: function PDFObjects_getData(objId) {\n      var objs = this.objs;\n      if (!objs[objId] || !objs[objId].resolved) {\n        return null;\n      } else {\n        return objs[objId].data;\n      }\n    },\n\n    clear: function PDFObjects_clear() {\n      this.objs = {};\n    }\n  };\n  return PDFObjects;\n})();\n/*\n * RenderTask is basically a promise but adds a cancel function to terminate it.\n */\nvar RenderTask = (function RenderTaskClosure() {\n  function RenderTask(internalRenderTask) {\n    this.internalRenderTask = internalRenderTask;\n    Promise.call(this);\n  }\n\n  RenderTask.prototype = Object.create(Promise.prototype);\n\n  /**\n   * Cancel the rendering task. If the task is curently rendering it will not be\n   * cancelled until graphics pauses with a timeout. The promise that this\n   * object extends will resolved when cancelled.\n   */\n  RenderTask.prototype.cancel = function RenderTask_cancel() {\n    this.internalRenderTask.cancel();\n  };\n\n  return RenderTask;\n})();\n\nvar InternalRenderTask = (function InternalRenderTaskClosure() {\n\n  function InternalRenderTask(callback, params, objs, commonObjs, operatorList,\n                              pageNumber) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this.pageNumber = pageNumber;\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this.cancelled = false;\n  }\n\n  InternalRenderTask.prototype = {\n\n    initalizeGraphics:\n        function InternalRenderTask_initalizeGraphics(transparency) {\n\n      if (this.cancelled) {\n        return;\n      }\n      if (PDFJS.pdfBug && 'StepperManager' in globalScope &&\n          globalScope.StepperManager.enabled) {\n        this.stepper = globalScope.StepperManager.create(this.pageNumber - 1);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n\n      var params = this.params;\n      this.gfx = new CanvasGraphics(params.canvasContext, this.commonObjs,\n                                    this.objs, params.textLayer,\n                                    params.imageLayer);\n\n      this.gfx.beginDrawing(params.viewport, transparency);\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    },\n\n    cancel: function InternalRenderTask_cancel() {\n      this.running = false;\n      this.cancelled = true;\n      this.callback('cancelled');\n    },\n\n    operatorListChanged: function InternalRenderTask_operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continue.bind(this);\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    },\n\n    _continue: function InternalRenderTask__continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.params.continueCallback) {\n        this.params.continueCallback(this._next.bind(this));\n      } else {\n        this._next();\n      }\n    },\n\n    _next: function InternalRenderTask__next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList,\n                                        this.operatorListIdx,\n                                        this._continue.bind(this),\n                                        this.stepper);\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          this.callback();\n        }\n      }\n    }\n\n  };\n\n  return InternalRenderTask;\n})();\n\n\nvar Metadata = PDFJS.Metadata = (function MetadataClosure() {\n  function fixMetadata(meta) {\n    return meta.replace(/>\\\\376\\\\377([^<]+)/g, function(all, codes) {\n      var bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g,\n                                function(code, d1, d2, d3) {\n        return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n      });\n      var chars = '';\n      for (var i = 0; i < bytes.length; i += 2) {\n        var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n        chars += code >= 32 && code < 127 && code != 60 && code != 62 &&\n          code != 38 && false ? String.fromCharCode(code) :\n          '&#x' + (0x10000 + code).toString(16).substring(1) + ';';\n      }\n      return '>' + chars;\n    });\n  }\n\n  function Metadata(meta) {\n    if (typeof meta === 'string') {\n      // Ghostscript produces invalid metadata\n      meta = fixMetadata(meta);\n\n      var parser = new DOMParser();\n      meta = parser.parseFromString(meta, 'application/xml');\n    } else if (!(meta instanceof Document)) {\n      error('Metadata: Invalid metadata object');\n    }\n\n    this.metaDocument = meta;\n    this.metadata = {};\n    this.parse();\n  }\n\n  Metadata.prototype = {\n    parse: function Metadata_parse() {\n      var doc = this.metaDocument;\n      var rdf = doc.documentElement;\n\n      if (rdf.nodeName.toLowerCase() !== 'rdf:rdf') { // Wrapped in <xmpmeta>\n        rdf = rdf.firstChild;\n        while (rdf && rdf.nodeName.toLowerCase() !== 'rdf:rdf')\n          rdf = rdf.nextSibling;\n      }\n\n      var nodeName = (rdf) ? rdf.nodeName.toLowerCase() : null;\n      if (!rdf || nodeName !== 'rdf:rdf' || !rdf.hasChildNodes())\n        return;\n\n      var children = rdf.childNodes, desc, entry, name, i, ii, length, iLength;\n\n      for (i = 0, length = children.length; i < length; i++) {\n        desc = children[i];\n        if (desc.nodeName.toLowerCase() !== 'rdf:description')\n          continue;\n\n        for (ii = 0, iLength = desc.childNodes.length; ii < iLength; ii++) {\n          if (desc.childNodes[ii].nodeName.toLowerCase() !== '#text') {\n            entry = desc.childNodes[ii];\n            name = entry.nodeName.toLowerCase();\n            this.metadata[name] = entry.textContent.trim();\n          }\n        }\n      }\n    },\n\n    get: function Metadata_get(name) {\n      return this.metadata[name] || null;\n    },\n\n    has: function Metadata_has(name) {\n      return typeof this.metadata[name] !== 'undefined';\n    }\n  };\n\n  return Metadata;\n})();\n\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n\nvar COMPILE_TYPE3_GLYPHS = true;\n\nfunction createScratchCanvas(width, height) {\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based on.\n  if (!ctx.mozCurrentTransform) {\n    // Store the original context\n    ctx._scaleX = ctx._scaleX || 1.0;\n    ctx._scaleY = ctx._scaleY || 1.0;\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = [ctx._scaleX, 0, 0, ctx._scaleY, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, 'mozCurrentTransform', {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      }\n    });\n\n    Object.defineProperty(ctx, 'mozCurrentTransformInverse', {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0], b = m[1], c = m[2], d = m[3], e = m[4], f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc\n        ];\n      }\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5]\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * (-sinValue) + m[2] * cosValue,\n        m[1] * (-sinValue) + m[3] * cosValue,\n        m[4],\n        m[5]\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  var cache = {};\n  return {\n    getCanvas: function CachedCanvases_getCanvas(id, width, height,\n                                                 trackTransform) {\n      var canvasEntry;\n      if (id in cache) {\n        canvasEntry = cache[id];\n        canvasEntry.canvas.width = width;\n        canvasEntry.canvas.height = height;\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        var canvas = createScratchCanvas(width, height);\n        var ctx = canvas.getContext('2d');\n        if (trackTransform) {\n          addContextCurrentTransform(ctx);\n        }\n        cache[id] = canvasEntry = {canvas: canvas, context: ctx};\n      }\n      return canvasEntry;\n    },\n    clear: function () {\n      cache = {};\n    }\n  };\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width, height = imgData.height;\n  var i, j, j0, width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n  // finding iteresting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var pos = 3, data = imgData.data, lineSize = width * 4, count = 0;\n  if (data[3] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 4]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos += 4;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  pos += 4;\n  for (i = 1; i < height; i++) {\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum = (sum >> 2) + (data[pos + 4] ? 4 : 0) +\n            (data[pos - lineSize + 4] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos += 4;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n    pos += 4;\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos -= lineSize;\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 4]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos += 4;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p], p0 = p, pp;\n    do {\n      var step = steps[type];\n      do { p += step; } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else { // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2 | type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n      --count;\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function(c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (var i = 0, ii = outlines.length; i < ii; i++) {\n      var o = outlines[i];\n      c.moveTo(o[0], o[1]);\n      for (var j = 2, jj = o.length; j < jj; j += 2) {\n        c.lineTo(o[j], o[j+1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  function CanvasExtraState(old) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Color spaces\n    this.fillColorSpace = ColorSpace.singletons.gray;\n    this.fillColorSpaceObj = null;\n    this.strokeColorSpace = ColorSpace.singletons.gray;\n    this.strokeColorSpaceObj = null;\n    this.fillColorObj = null;\n    this.strokeColorObj = null;\n    // Default fore and background colors\n    this.fillColor = '#000000';\n    this.strokeColor = '#000000';\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.paintFormXObjectDepth = 0;\n\n    this.old = old;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n\n  function CanvasGraphics(canvasCtx, commonObjs, objs, textLayer, imageLayer) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.textLayer = textLayer;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    if (canvasCtx) {\n      addContextCurrentTransform(canvasCtx);\n    }\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== 'undefined' && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    var tmpImgData = ctx.createImageData(imgData.width, imgData.height);\n\n    var data = imgData.data;\n    var tmpImgDataPixels = tmpImgData.data;\n    if ('set' in tmpImgDataPixels)\n      tmpImgDataPixels.set(data);\n    else {\n      // Copy over the imageData pixel by pixel.\n      for (var i = 0, ii = tmpImgDataPixels.length; i < ii; i++)\n        tmpImgDataPixels[i] = data[i];\n    }\n\n    ctx.putImageData(tmpImgData, 0, 0);\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = ['strokeStyle', 'fillStyle', 'fillRule', 'globalAlpha',\n                      'lineWidth', 'lineCap', 'lineJoin', 'miterLimit',\n                      'globalCompositeOperation', 'font'];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (property in sourceCtx) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if ('setLineDash' in sourceCtx) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset =  sourceCtx.lineDashOffset;\n    } else if ('mozDash' in sourceCtx) {\n      destCtx.mozDash = sourceCtx.mozDash;\n      destCtx.mozDashOffset = sourceCtx.mozDashOffset;\n    }\n  }\n\n  var LINE_CAP_STYLES = ['butt', 'round', 'square'];\n  var LINE_JOIN_STYLES = ['miter', 'round', 'bevel'];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n\n    beginDrawing: function CanvasGraphics_beginDrawing(viewport, transparency) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, so we fill with white if\n      // we can.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n      if (transparency) {\n        this.ctx.clearRect(0, 0, width, height);\n      } else {\n        this.ctx.mozOpaque = true;\n        this.ctx.save();\n        this.ctx.fillStyle = 'rgb(255, 255, 255)';\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.restore();\n      }\n\n      var transform = viewport.transform;\n      this.baseTransform = transform.slice();\n      this.ctx.save();\n      this.ctx.transform.apply(this.ctx, transform);\n\n      if (this.textLayer) {\n        this.textLayer.beginLayout();\n      }\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n                                    operatorList,\n                                    executionStartIdx, continueCallback,\n                                    stepper) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen == i) {\n        return i;\n      }\n\n      var executionEndIdx;\n      var endTime = Date.now() + EXECUTION_TIME;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          var deps = argsArray[i];\n          for (var n = 0, nn = deps.length; n < nn; n++) {\n            var depObjId = deps[n];\n            var common = depObjId.substring(0, 2) == 'g_';\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!common && !objs.isResolved(depObjId)) {\n              objs.get(depObjId, continueCallback);\n              return i;\n            }\n            if (common && !commonObjs.isResolved(depObjId)) {\n              commonObjs.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i == argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time, schedule\n        // to continue exeution after a short delay.\n        // However, this is only possible if a 'continueCallback' is passed in.\n        if (continueCallback && Date.now() > endTime) {\n          setTimeout(continueCallback, 0);\n          return i;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      this.ctx.restore();\n      CachedCanvases.clear();\n\n      if (this.textLayer) {\n        this.textLayer.endLayout();\n      }\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if ('setLineDash' in ctx) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      } else {\n        ctx.mozDash = dashArray;\n        ctx.mozDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent: function CanvasGraphics_setRenderingIntent(intent) {\n      // Maybe if we one day fully support color spaces this will be important\n      // for now we can ignore.\n      // TODO set rendering intent?\n    },\n    setFlatness: function CanvasGraphics_setFlatness(flatness) {\n      // There's no way to control this with canvas, but we can safely ignore.\n      // TODO set flatness?\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case 'LW':\n            this.setLineWidth(value);\n            break;\n          case 'LC':\n            this.setLineCap(value);\n            break;\n          case 'LJ':\n            this.setLineJoin(value);\n            break;\n          case 'ML':\n            this.setMiterLimit(value);\n            break;\n          case 'D':\n            this.setDash(value[0], value[1]);\n            break;\n          case 'RI':\n            this.setRenderingIntent(value);\n            break;\n          case 'FL':\n            this.setFlatness(value);\n            break;\n          case 'Font':\n            this.setFont(value[0], value[1]);\n            break;\n          case 'CA':\n            this.current.strokeAlpha = state[1];\n            break;\n          case 'ca':\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case 'BM':\n            if (value && value.name && (value.name !== 'Normal')) {\n              var mode = value.name.replace(/([A-Z])/g,\n                function(c) {\n                  return '-' + c.toLowerCase();\n                }\n              ).substring(1);\n              this.ctx.globalCompositeOperation = mode;\n              if (this.ctx.globalCompositeOperation !== mode) {\n                warn('globalCompositeOperation \"' + mode +\n                     '\" is not supported');\n              }\n            } else {\n              this.ctx.globalCompositeOperation = 'source-over';\n            }\n            break;\n        }\n      }\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n    },\n    restore: function CanvasGraphics_restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.current = prev;\n        this.ctx.restore();\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n    },\n\n    // Path\n    moveTo: function CanvasGraphics_moveTo(x, y) {\n      this.ctx.moveTo(x, y);\n      this.current.setCurrentPoint(x, y);\n    },\n    lineTo: function CanvasGraphics_lineTo(x, y) {\n      this.ctx.lineTo(x, y);\n      this.current.setCurrentPoint(x, y);\n    },\n    curveTo: function CanvasGraphics_curveTo(x1, y1, x2, y2, x3, y3) {\n      this.ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n      this.current.setCurrentPoint(x3, y3);\n    },\n    curveTo2: function CanvasGraphics_curveTo2(x2, y2, x3, y3) {\n      var current = this.current;\n      this.ctx.bezierCurveTo(current.x, current.y, x2, y2, x3, y3);\n      current.setCurrentPoint(x3, y3);\n    },\n    curveTo3: function CanvasGraphics_curveTo3(x1, y1, x3, y3) {\n      this.curveTo(x1, y1, x3, y3, x3, y3);\n      this.current.setCurrentPoint(x3, y3);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    rectangle: function CanvasGraphics_rectangle(x, y, width, height) {\n      this.ctx.rect(x, y, width, height);\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      if (this.current.lineWidth === 0)\n        ctx.lineWidth = this.getSinglePixelWidth();\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (strokeColor && strokeColor.hasOwnProperty('type') &&\n          strokeColor.type === 'Pattern') {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        ctx.stroke();\n      }\n      if (consumePath)\n        this.consumePath();\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var needRestore = false;\n\n      if (fillColor && fillColor.hasOwnProperty('type') &&\n          fillColor.type === 'Pattern') {\n        ctx.save();\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        if ('mozFillRule' in this.ctx) {\n          this.ctx.mozFillRule = 'evenodd';\n          this.ctx.fill();\n          this.ctx.mozFillRule = 'nonzero';\n        } else {\n          try {\n            this.ctx.fill('evenodd');\n          } catch (ex) {\n            // shouldn't really happen, but browsers might think differently\n            this.ctx.fill();\n          }\n        }\n        this.pendingEOFill = false;\n      } else {\n        this.ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      if (!('pendingTextPaths' in this)) {\n        this.ctx.beginPath();\n        return;\n      }\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj)\n        error('Can\\'t find font for ' + fontRefName);\n\n      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix :\n                                                FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 ||\n          current.fontMatrix[3] === 0) {\n        warn('Invalid font matrix for font ' + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.coded)\n        return; // we don't need ctx.font for Type3 fonts\n\n      var name = fontObj.loadedName || 'sans-serif';\n      var bold = fontObj.black ? (fontObj.bold ? 'bolder' : 'bold') :\n                                 (fontObj.bold ? 'bold' : 'normal');\n\n      var italic = fontObj.italic ? 'italic' : 'normal';\n      var typeface = '\"' + name + '\", ' + fontObj.fallbackName;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      var browserFontSize = size >= MIN_FONT_SIZE ? size : MIN_FONT_SIZE;\n      this.current.fontSizeScale = browserFontSize != MIN_FONT_SIZE ? 1.0 :\n                                   size / MIN_FONT_SIZE;\n\n      var rule = italic + ' ' + bold + ' ' + browserFontSize + 'px ' + typeface;\n      this.ctx.font = rule;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n    applyTextTransforms: function CanvasGraphics_applyTextTransforms() {\n      var ctx = this.ctx;\n      var current = this.current;\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n      if (current.fontDirection > 0) {\n        ctx.scale(current.textHScale, -1);\n      } else {\n        ctx.scale(-current.textHScale, 1);\n      }\n    },\n    createTextGeometry: function CanvasGraphics_createTextGeometry() {\n      var geometry = {};\n      var ctx = this.ctx;\n      var font = this.current.font;\n      var ctxMatrix = ctx.mozCurrentTransform;\n      var a = ctxMatrix[0], b = ctxMatrix[1], c = ctxMatrix[2];\n      var d = ctxMatrix[3], e = ctxMatrix[4], f = ctxMatrix[5];\n      var sx = (a >= 0) ?\n          Math.sqrt((a * a) + (b * b)) : -Math.sqrt((a * a) + (b * b));\n      var sy = (d >= 0) ?\n          Math.sqrt((c * c) + (d * d)) : -Math.sqrt((c * c) + (d * d));\n      var angle = Math.atan2(b, a);\n      var x = e;\n      var y = f;\n      geometry.x = x;\n      geometry.y = y;\n      geometry.hScale = sx;\n      geometry.vScale = sy;\n      geometry.angle = angle;\n      geometry.spaceWidth = font.spaceWidth;\n      geometry.fontName = font.loadedName;\n      geometry.fontFamily = font.fallbackName;\n      geometry.fontSize = this.current.fontSize;\n      return geometry;\n    },\n\n    paintChar: function (character, x, y) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var textRenderingMode = current.textRenderingMode;\n      var fillStrokeMode = textRenderingMode &\n        TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(textRenderingMode &\n        TextRenderingMode.ADD_TO_PATH_FLAG);\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (fillStrokeMode === TextRenderingMode.FILL ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.fill();\n        }\n        if (fillStrokeMode === TextRenderingMode.STROKE ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (fillStrokeMode === TextRenderingMode.FILL ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.fillText(character, x, y);\n        }\n        if (fillStrokeMode === TextRenderingMode.STROKE ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x: x,\n          y: y,\n          fontSize: fontSize,\n          addToPath: addToPath\n        });\n      }\n    },\n\n    showText: function CanvasGraphics_showText(glyphs, skipTextSelection) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * current.fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var textLayer = this.textLayer;\n      var geom;\n      var textSelection = textLayer && !skipTextSelection ? true : false;\n      var canvasWidth = 0.0;\n      var vertical = font.vertical;\n      var defaultVMetrics = font.defaultVMetrics;\n\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      if (font.coded) {\n        ctx.save();\n        ctx.transform.apply(ctx, current.textMatrix);\n        ctx.translate(current.x, current.y);\n\n        ctx.scale(textHScale, 1);\n\n        if (textSelection) {\n          this.save();\n          ctx.scale(1, -1);\n          geom = this.createTextGeometry();\n          this.restore();\n        }\n        for (var i = 0; i < glyphsLength; ++i) {\n\n          var glyph = glyphs[i];\n          if (glyph === null) {\n            // word break\n            this.ctx.translate(wordSpacing, 0);\n            current.x += wordSpacing * textHScale;\n            continue;\n          }\n\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(glyph.operatorList);\n          this.restore();\n\n          var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n          var width = (transformed[0] * fontSize + charSpacing) *\n                      current.fontDirection;\n\n          ctx.translate(width, 0);\n          current.x += width * textHScale;\n\n          canvasWidth += width;\n        }\n        ctx.restore();\n        this.processingType3 = null;\n      } else {\n        ctx.save();\n        this.applyTextTransforms();\n\n        var lineWidth = current.lineWidth;\n        var a1 = current.textMatrix[0], b1 = current.textMatrix[1];\n        var scale = Math.sqrt(a1 * a1 + b1 * b1);\n        if (scale === 0 || lineWidth === 0)\n          lineWidth = this.getSinglePixelWidth();\n        else\n          lineWidth /= scale;\n\n        if (textSelection)\n          geom = this.createTextGeometry();\n\n        if (fontSizeScale != 1.0) {\n          ctx.scale(fontSizeScale, fontSizeScale);\n          lineWidth /= fontSizeScale;\n        }\n\n        ctx.lineWidth = lineWidth;\n\n        var x = 0;\n        for (var i = 0; i < glyphsLength; ++i) {\n          var glyph = glyphs[i];\n          if (glyph === null) {\n            // word break\n            x += current.fontDirection * wordSpacing;\n            continue;\n          }\n\n          var restoreNeeded = false;\n          var character = glyph.fontChar;\n          var vmetric = glyph.vmetric || defaultVMetrics;\n          if (vertical) {\n            var vx = glyph.vmetric ? vmetric[1] : glyph.width * 0.5;\n            vx = -vx * fontSize * current.fontMatrix[0];\n            var vy = vmetric[2] * fontSize * current.fontMatrix[0];\n          }\n          var width = vmetric ? -vmetric[0] : glyph.width;\n          var charWidth = width * fontSize * current.fontMatrix[0] +\n                          charSpacing * current.fontDirection;\n          var accent = glyph.accent;\n\n          var scaledX, scaledY, scaledAccentX, scaledAccentY;\n          if (!glyph.disabled) {\n            if (vertical) {\n              scaledX = vx / fontSizeScale;\n              scaledY = (x + vy) / fontSizeScale;\n            } else {\n              scaledX = x / fontSizeScale;\n              scaledY = 0;\n            }\n\n            if (font.remeasure && width > 0) {\n              // some standard fonts may not have the exact width, trying to\n              // rescale per character\n              var measuredWidth = ctx.measureText(character).width * 1000 /\n                current.fontSize * current.fontSizeScale;\n              var characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n              if (accent) {\n                scaledAccentX /= characterScaleX;\n              }\n            }\n\n            this.paintChar(character, scaledX, scaledY);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY);\n            }\n          }\n\n          x += charWidth;\n\n          canvasWidth += charWidth;\n\n          if (restoreNeeded) {\n            ctx.restore();\n          }\n        }\n        if (vertical) {\n          current.y -= x * textHScale;\n        } else {\n          current.x += x * textHScale;\n        }\n        ctx.restore();\n      }\n\n      if (textSelection) {\n        geom.canvasWidth = canvasWidth;\n        if (vertical) {\n          var VERTICAL_TEXT_ROTATION = Math.PI / 2;\n          geom.angle += VERTICAL_TEXT_ROTATION;\n        }\n        this.textLayer.appendText(geom);\n      }\n\n      return canvasWidth;\n    },\n    showSpacedText: function CanvasGraphics_showSpacedText(arr) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      // TJ array's number is independent from fontMatrix\n      var textHScale = current.textHScale * 0.001 * current.fontDirection;\n      var arrLength = arr.length;\n      var textLayer = this.textLayer;\n      var geom;\n      var canvasWidth = 0.0;\n      var textSelection = textLayer ? true : false;\n      var vertical = font.vertical;\n      var spacingAccumulator = 0;\n\n      if (textSelection) {\n        ctx.save();\n        this.applyTextTransforms();\n        geom = this.createTextGeometry();\n        ctx.restore();\n      }\n\n      for (var i = 0; i < arrLength; ++i) {\n        var e = arr[i];\n        if (isNum(e)) {\n          var spacingLength = -e * fontSize * textHScale;\n          if (vertical) {\n            current.y += spacingLength;\n          } else {\n            current.x += spacingLength;\n          }\n\n          if (textSelection)\n            spacingAccumulator += spacingLength;\n        } else {\n          var shownCanvasWidth = this.showText(e, true);\n\n          if (textSelection) {\n            canvasWidth += spacingAccumulator + shownCanvasWidth;\n            spacingAccumulator = 0;\n          }\n        }\n      }\n\n      if (textSelection) {\n        geom.canvasWidth = canvasWidth;\n        if (vertical) {\n          var VERTICAL_TEXT_ROTATION = Math.PI / 2;\n          geom.angle += VERTICAL_TEXT_ROTATION;\n        }\n        this.textLayer.appendText(geom);\n      }\n    },\n    nextLineShowText: function CanvasGraphics_nextLineShowText(text) {\n      this.nextLine();\n      this.showText(text);\n    },\n    nextLineSetSpacingShowText:\n      function CanvasGraphics_nextLineSetSpacingShowText(wordSpacing,\n                                                         charSpacing,\n                                                         text) {\n      this.setWordSpacing(wordSpacing);\n      this.setCharSpacing(charSpacing);\n      this.nextLineShowText(text);\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth,\n                                                                        yWidth,\n                                                                        llx,\n                                                                        lly,\n                                                                        urx,\n                                                                        ury) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.rectangle(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    setStrokeColorSpace: function CanvasGraphics_setStrokeColorSpace(raw) {\n      this.current.strokeColorSpace = ColorSpace.fromIR(raw);\n    },\n    setFillColorSpace: function CanvasGraphics_setFillColorSpace(raw) {\n      this.current.fillColorSpace = ColorSpace.fromIR(raw);\n    },\n    setStrokeColor: function CanvasGraphics_setStrokeColor(/*...*/) {\n      var cs = this.current.strokeColorSpace;\n      var rgbColor = cs.getRgb(arguments, 0);\n      var color = Util.makeCssRgb(rgbColor);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR, cs) {\n      if (IR[0] == 'TilingPattern') {\n        var args = IR[1];\n        var base = cs.base;\n        var color;\n        if (base) {\n          var baseComps = base.numComps;\n\n          color = base.getRgb(args, 0);\n        }\n        var pattern = new TilingPattern(IR, color, this.ctx, this.objs,\n                                        this.commonObjs, this.baseTransform);\n      } else if (IR[0] == 'RadialAxial' || IR[0] == 'Dummy') {\n        var pattern = Pattern.shadingFromIR(IR);\n      } else {\n        error('Unkown IR type ' + IR[0]);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN(/*...*/) {\n      var cs = this.current.strokeColorSpace;\n\n      if (cs.name == 'Pattern') {\n        this.current.strokeColor = this.getColorN_Pattern(arguments, cs);\n      } else {\n        this.setStrokeColor.apply(this, arguments);\n      }\n    },\n    setFillColor: function CanvasGraphics_setFillColor(/*...*/) {\n      var cs = this.current.fillColorSpace;\n      var rgbColor = cs.getRgb(arguments, 0);\n      var color = Util.makeCssRgb(rgbColor);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN(/*...*/) {\n      var cs = this.current.fillColorSpace;\n\n      if (cs.name == 'Pattern') {\n        this.current.fillColor = this.getColorN_Pattern(arguments, cs);\n      } else {\n        this.setFillColor.apply(this, arguments);\n      }\n    },\n    setStrokeGray: function CanvasGraphics_setStrokeGray(gray) {\n      this.current.strokeColorSpace = ColorSpace.singletons.gray;\n\n      var rgbColor = this.current.strokeColorSpace.getRgb(arguments, 0);\n      var color = Util.makeCssRgb(rgbColor);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillGray: function CanvasGraphics_setFillGray(gray) {\n      this.current.fillColorSpace = ColorSpace.singletons.gray;\n\n      var rgbColor = this.current.fillColorSpace.getRgb(arguments, 0);\n      var color = Util.makeCssRgb(rgbColor);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      this.current.strokeColorSpace = ColorSpace.singletons.rgb;\n\n      var rgbColor = this.current.strokeColorSpace.getRgb(arguments, 0);\n      var color = Util.makeCssRgb(rgbColor);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      this.current.fillColorSpace = ColorSpace.singletons.rgb;\n\n      var rgbColor = this.current.fillColorSpace.getRgb(arguments, 0);\n      var color = Util.makeCssRgb(rgbColor);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n    },\n    setStrokeCMYKColor: function CanvasGraphics_setStrokeCMYKColor(c, m, y, k) {\n      this.current.strokeColorSpace = ColorSpace.singletons.cmyk;\n\n      var color = Util.makeCssCmyk(arguments);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillCMYKColor: function CanvasGraphics_setFillCMYKColor(c, m, y, k) {\n      this.current.fillColorSpace = ColorSpace.singletons.cmyk;\n\n      var color = Util.makeCssCmyk(arguments);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = Pattern.shadingFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      error('Should not call beginInlineImage');\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      error('Should not call beginImageData');\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix,\n                                                                        bbox) {\n      this.save();\n      this.current.paintFormXObjectDepth++;\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (matrix && isArray(matrix) && 6 == matrix.length)\n        this.transform.apply(this, matrix);\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox && isArray(bbox) && 4 == bbox.length) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.rectangle(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      var depth = this.current.paintFormXObjectDepth;\n      do {\n        this.restore();\n        // some pdf don't close all restores inside object\n        // closing those for them\n      } while (this.current.paintFormXObjectDepth >= depth);\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implmenting:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info('TODO: Support non-isolated groups.');\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        TODO('Support knockout groups.');\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      assert(group.bbox, 'Bounding box is required.');\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n                    group.bbox,\n                    currentCtx.mozCurrentTransform);\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [0,\n                          0,\n                          currentCtx.canvas.width,\n                          currentCtx.canvas.height];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var drawnWidth = Math.max(Math.ceil(bounds[2] - bounds[0]), 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3] - bounds[1]), 1);\n\n      var scratchCanvas = CachedCanvases.getCanvas(\n        'groupAt' + this.groupLevel, drawnWidth, drawnHeight, true);\n      var groupCtx = scratchCanvas.context;\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      var offsetX = bounds[0];\n      var offsetY = bounds[1];\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      // Setup the current ctx so when the group is popped we draw it the right\n      // location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        ['SMask', 'None'],\n        ['BM', 'Normal'],\n        ['ca', 1],\n        ['CA', 1]\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if ('imageSmoothingEnabled' in this.ctx) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      this.current = new CanvasExtraState();\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform,\n                                                             matrix) {\n      this.save();\n\n      if (rect && isArray(rect) && 4 == rect.length) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.rectangle(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n      var domImage = this.objs.get(objId);\n      if (!domImage) {\n        error('Dependent image isn\\'t ready yet');\n      }\n\n      this.save();\n\n      var ctx = this.ctx;\n      // scale the image to the unit square\n      ctx.scale(1 / w, -1 / h);\n\n      ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height,\n                    0, -h, w, h);\n      if (this.imageLayer) {\n        var currentTransform = ctx.mozCurrentTransformInverse;\n        var position = this.getCanvasPosition(0, 0);\n        this.imageLayer.appendImage({\n          objId: objId,\n          left: position[0],\n          top: position[1],\n          width: w / currentTransform[0],\n          height: h / currentTransform[3]\n        });\n      }\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width, height = img.height;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && !('compiled' in glyph)) {\n        var MAX_SIZE_TO_COMPILE = 1000;\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled =\n            compileType3Glyph({data: img.data, width: width, height: height});\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = CachedCanvases.getCanvas('maskCanvas', width, height);\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageData(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = 'source-in';\n\n      var fillColor = this.current.fillColor;\n      maskCtx.fillStyle = (fillColor && fillColor.hasOwnProperty('type') &&\n                          fillColor.type === 'Pattern') ?\n                          fillColor.getPattern(maskCtx, this) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectGroup:\n      function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n      var ctx = this.ctx;\n\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width, height = image.height;\n\n        var maskCanvas = CachedCanvases.getCanvas('maskCanvas', width, height);\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageData(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = 'source-in';\n\n        var fillColor = this.current.fillColor;\n        maskCtx.fillStyle = (fillColor && fillColor.hasOwnProperty('type') &&\n                            fillColor.type === 'Pattern') ?\n                            fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height,\n                      0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      var imgData = this.objs.get(objId);\n      if (!imgData)\n        error('Dependent image isn\\'t ready yet');\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintInlineImageXObject:\n      function CanvasGraphics_paintInlineImageXObject(imgData) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0], b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2], d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint;\n      // instanceof HTMLElement does not work in jsdom node.js module\n      if (imgData instanceof HTMLElement || !imgData.data) {\n        imgToPaint = imgData;\n      } else {\n        var tmpCanvas = CachedCanvases.getCanvas('inlineImage', width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width, paintHeight = height;\n      var tmpCanvasId = 'prescale1';\n      // Vertial or horizontal scaling shall not be more than 2 to not loose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size\n      while ((widthScale > 2 && paintWidth > 1) ||\n             (heightScale > 2 && paintHeight > 1)) {\n        var newWidth = paintWidth, newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        var tmpCanvas = CachedCanvases.getCanvas(tmpCanvasId,\n                                                 newWidth, newHeight);\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight,\n                                     0, 0, newWidth, newHeight);\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === 'prescale1' ? 'prescale2' : 'prescale1';\n      }\n      ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight,\n                                0, -height, width, height);\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData: imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3]\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup:\n      function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = CachedCanvases.getCanvas('inlineImage', w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h,\n                      0, -1, 1, 1);\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData: imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n                                        tag, properties) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      if (this.pendingClip) {\n        if (this.pendingClip == EO_CLIP) {\n          if ('mozFillRule' in this.ctx) {\n            this.ctx.mozFillRule = 'evenodd';\n            this.ctx.clip();\n            this.ctx.mozFillRule = 'nonzero';\n          } else {\n            try {\n              this.ctx.clip('evenodd');\n            } catch (ex) {\n              // shouldn't really happen, but browsers might think differently\n              this.ctx.clip();\n            }\n          }\n        } else {\n          this.ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      this.ctx.beginPath();\n    },\n    getSinglePixelWidth: function CanvasGraphics_getSinglePixelWidth(scale) {\n      var inverse = this.ctx.mozCurrentTransformInverse;\n      // max of the current horizontal and vertical scale\n      return Math.sqrt(Math.max(\n        (inverse[0] * inverse[0] + inverse[1] * inverse[1]),\n        (inverse[2] * inverse[2] + inverse[3] * inverse[3])));\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n        var transform = this.ctx.mozCurrentTransform;\n        return [\n          transform[0] * x + transform[2] * y + transform[4],\n          transform[1] * x + transform[3] * y + transform[5]\n        ];\n    }\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\n\n\nPDFJS.disableFontFace = false;\n\nvar FontLoader = {\n  insertRule: function fontLoaderInsertRule(rule) {\n    var styleElement = document.getElementById('PDFJS_FONT_STYLE_TAG');\n    if (!styleElement) {\n        styleElement = document.createElement('style');\n        styleElement.id = 'PDFJS_FONT_STYLE_TAG';\n        document.documentElement.getElementsByTagName('head')[0].appendChild(\n          styleElement);\n    }\n\n    var styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  },\n  clear: function fontLoaderClear() {\n    var styleElement = document.getElementById('PDFJS_FONT_STYLE_TAG');\n    if (styleElement) {\n      styleElement.parentNode.removeChild(styleElement);\n    }\n  },\n  get loadTestFont() {\n    // This is a CFF font with 1 glyph for '.' that fills its entire width and\n    // height.\n    return shadow(this, 'loadTestFont', atob(\n      'T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQ' +\n      'AABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwA' +\n      'AAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbm' +\n      'FtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAA' +\n      'AADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6A' +\n      'ABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAA' +\n      'MQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAA' +\n      'AAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAA' +\n      'AAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQ' +\n      'AAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMA' +\n      'AQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAA' +\n      'EAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAA' +\n      'AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAA' +\n      'AAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgc' +\n      'A/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF' +\n      'hYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQA' +\n      'AAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAg' +\n      'ABAAAAAAAAAAAD6AAAAAAAAA=='\n    ));\n  },\n\n  loadTestFontId: 0,\n\n  loadingContext: {\n    requests: [],\n    nextRequestId: 0\n  },\n\n  isSyncFontLoadingSupported: (function detectSyncFontLoadingSupport() {\n    if (isWorker)\n      return false;\n\n    // User agent string sniffing is bad, but there is no reliable way to tell\n    // if font is fully loaded and ready to be used with canvas.\n    var userAgent = window.navigator.userAgent;\n    var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(userAgent);\n    if (m && m[1] >= 14)\n      return true;\n    // TODO other browsers\n    return false;\n  })(),\n\n  bind: function fontLoaderBind(fonts, callback) {\n    assert(!isWorker, 'bind() shall be called from main thread');\n\n    var rules = [], fontsToLoad = [];\n    for (var i = 0, ii = fonts.length; i < ii; i++) {\n      var font = fonts[i];\n\n      // Add the font to the DOM only once or skip if the font\n      // is already loaded.\n      if (font.attached || font.loading === false) {\n        continue;\n      }\n      font.attached = true;\n\n      var rule = font.bindDOM();\n      if (rule) {\n        rules.push(rule);\n        fontsToLoad.push(font);\n      }\n    }\n\n    var request = FontLoader.queueLoadingCallback(callback);\n    if (rules.length > 0 && !this.isSyncFontLoadingSupported) {\n      FontLoader.prepareFontLoadEvent(rules, fontsToLoad, request);\n    } else {\n      request.complete();\n    }\n  },\n\n  queueLoadingCallback: function FontLoader_queueLoadingCallback(callback) {\n    function LoadLoader_completeRequest() {\n      assert(!request.end, 'completeRequest() cannot be called twice');\n      request.end = Date.now();\n\n      // sending all completed requests in order how they were queued\n      while (context.requests.length > 0 && context.requests[0].end) {\n        var otherRequest = context.requests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n\n    var context = FontLoader.loadingContext;\n    var requestId = 'pdfjs-font-loading-' + (context.nextRequestId++);\n    var request = {\n      id: requestId,\n      complete: LoadLoader_completeRequest,\n      callback: callback,\n      started: Date.now()\n    };\n    context.requests.push(request);\n    return request;\n  },\n\n  prepareFontLoadEvent: function fontLoaderPrepareFontLoadEvent(rules,\n                                                                fonts,\n                                                                request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is\n      // ready. It's assumed fonts are loaded in order, so add a known test\n      // font after the desired fonts and then test for the loading of that\n      // test font.\n\n      function int32(data, offset) {\n        return (data.charCodeAt(offset) << 24) |\n               (data.charCodeAt(offset + 1) << 16) |\n               (data.charCodeAt(offset + 2) << 8) |\n               (data.charCodeAt(offset + 3) & 0xff);\n      }\n\n      function string32(value) {\n        return String.fromCharCode((value >> 24) & 0xff) +\n               String.fromCharCode((value >> 16) & 0xff) +\n               String.fromCharCode((value >> 8) & 0xff) +\n               String.fromCharCode(value & 0xff);\n      }\n\n      function spliceString(s, offset, remove, insert) {\n        var chunk1 = data.substr(0, offset);\n        var chunk2 = data.substr(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n\n      var i, ii;\n\n      var canvas = document.createElement('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n\n      var called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if(called > 30) {\n          warn('Load test font never loaded.');\n          callback();\n          return;\n        }\n        ctx.font = '30px ' + name;\n        ctx.fillText('.', 0, 20);\n        var imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      var loadTestFontId = 'lt' + Date.now() + this.loadTestFontId++;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      var data = this.loadTestFont;\n      var COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length,\n                          loadTestFontId);\n      // CFF checksum is important for IE, adjusting it\n      var CFF_CHECKSUM_OFFSET = 16;\n      var XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) { // align to 4 bytes boundary\n        checksum = (checksum - XXXX_VALUE +\n                    int32(loadTestFontId + 'XXX', i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      var url = 'url(data:font/opentype;base64,' + btoa(data) + ');';\n      var rule = '@font-face { font-family:\"' + loadTestFontId + '\";src:' +\n                 url + '}';\n      FontLoader.insertRule(rule);\n\n      var names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      var div = document.createElement('div');\n      div.setAttribute('style',\n                       'visibility: hidden;' +\n                       'width: 10px; height: 10px;' +\n                       'position: absolute; top: 0px; left: 0px;');\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        var span = document.createElement('span');\n        span.textContent = 'Hi';\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function() {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n  }\n};\n\nvar FontFace = (function FontFaceClosure() {\n  function FontFace(name, file, properties) {\n    this.compiledGlyphs = {};\n    if (arguments.length === 1) {\n      // importing translated data\n      var data = arguments[0];\n      for (var i in data) {\n        this[i] = data[i];\n      }\n      return;\n    }\n  }\n  FontFace.prototype = {\n    bindDOM: function FontFace_bindDOM() {\n      if (!this.data)\n        return null;\n\n      if (PDFJS.disableFontFace) {\n        this.disableFontFace = true;\n        return null;\n      }\n\n      var data = bytesToString(this.data);\n      var fontName = this.loadedName;\n\n      // Add the font-face rule to the document\n      var url = ('url(data:' + this.mimetype + ';base64,' +\n                 window.btoa(data) + ');');\n      var rule = '@font-face { font-family:\"' + fontName + '\";src:' + url + '}';\n\n      FontLoader.insertRule(rule);\n\n      if (PDFJS.pdfBug && 'FontInspector' in globalScope &&\n          globalScope['FontInspector'].enabled)\n        globalScope['FontInspector'].fontAdded(this, url);\n\n      return rule;\n    },\n    getPathGenerator: function (objs, character) {\n      if (!(character in this.compiledGlyphs)) {\n        var js = objs.get(this.loadedName + '_path_' + character);\n        /*jshint -W054 */\n        this.compiledGlyphs[character] = new Function('c', 'size', js);\n      }\n      return this.compiledGlyphs[character];\n    }\n  };\n  return FontFace;\n})();\n\n\n}).call((typeof window === 'undefined') ? this : window);\n\nif (!PDFJS.workerSrc && typeof document !== 'undefined') {\n  // workerSrc is not set -- using last script url to define default location\n  PDFJS.workerSrc = (function () {\n    'use strict';\n    var scriptTagContainer = document.body ||\n                             document.getElementsByTagName('head')[0];\n    var pdfjsSrc = scriptTagContainer.lastChild.src;\n    return pdfjsSrc && pdfjsSrc.replace(/\\.js$/i, '.worker.js');\n  })();\n}\n\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals VBArray, PDFJS */\n\n'use strict';\n\n// Initializing PDFJS global object here, it case if we need to change/disable\n// some PDF.js features, e.g. range requests\nif (typeof PDFJS === 'undefined') {\n  (typeof window !== 'undefined' ? window : this).PDFJS = {};\n}\n\n// Checking if the typed arrays are supported\n// Support: iOS<6.0 (subarray), IE<10, Android<4.0\n(function checkTypedArrayCompatibility() {\n  if (typeof Uint8Array !== 'undefined') {\n    // Support: iOS<6.0\n    if (typeof Uint8Array.prototype.subarray === 'undefined') {\n        Uint8Array.prototype.subarray = function subarray(start, end) {\n          return new Uint8Array(this.slice(start, end));\n        };\n        Float32Array.prototype.subarray = function subarray(start, end) {\n          return new Float32Array(this.slice(start, end));\n        };\n    }\n\n    // Support: Android<4.1\n    if (typeof Float64Array === 'undefined') {\n      window.Float64Array = Float32Array;\n    }\n    return;\n  }\n\n  function subarray(start, end) {\n    return new TypedArray(this.slice(start, end));\n  }\n\n  function setArrayOffset(array, offset) {\n    if (arguments.length < 2) {\n      offset = 0;\n    }\n    for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n      this[offset] = array[i] & 0xFF;\n    }\n  }\n\n  function TypedArray(arg1) {\n    var result, i, n;\n    if (typeof arg1 === 'number') {\n      result = [];\n      for (i = 0; i < arg1; ++i) {\n        result[i] = 0;\n      }\n    } else if ('slice' in arg1) {\n      result = arg1.slice(0);\n    } else {\n      result = [];\n      for (i = 0, n = arg1.length; i < n; ++i) {\n        result[i] = arg1[i];\n      }\n    }\n\n    result.subarray = subarray;\n    result.buffer = result;\n    result.byteLength = result.length;\n    result.set = setArrayOffset;\n\n    if (typeof arg1 === 'object' && arg1.buffer) {\n      result.buffer = arg1.buffer;\n    }\n    return result;\n  }\n\n  window.Uint8Array = TypedArray;\n  window.Int8Array = TypedArray;\n\n  // we don't need support for set, byteLength for 32-bit array\n  // so we can use the TypedArray as well\n  window.Uint32Array = TypedArray;\n  window.Int32Array = TypedArray;\n  window.Uint16Array = TypedArray;\n  window.Float32Array = TypedArray;\n  window.Float64Array = TypedArray;\n})();\n\n// URL = URL || webkitURL\n// Support: Safari<7, Android 4.2+\n(function normalizeURLObject() {\n  if (!window.URL) {\n    window.URL = window.webkitURL;\n  }\n})();\n\n// Object.defineProperty()?\n// Support: Android<4.0, Safari<5.1\n(function checkObjectDefinePropertyCompatibility() {\n  if (typeof Object.defineProperty !== 'undefined') {\n    var definePropertyPossible = true;\n    try {\n      // some browsers (e.g. safari) cannot use defineProperty() on DOM objects\n      // and thus the native version is not sufficient\n      Object.defineProperty(new Image(), 'id', { value: 'test' });\n      // ... another test for android gb browser for non-DOM objects\n      var Test = function Test() {};\n      Test.prototype = { get id() { } };\n      Object.defineProperty(new Test(), 'id',\n        { value: '', configurable: true, enumerable: true, writable: false });\n    } catch (e) {\n      definePropertyPossible = false;\n    }\n    if (definePropertyPossible) {\n      return;\n    }\n  }\n\n  Object.defineProperty = function objectDefineProperty(obj, name, def) {\n    delete obj[name];\n    if ('get' in def) {\n      obj.__defineGetter__(name, def['get']);\n    }\n    if ('set' in def) {\n      obj.__defineSetter__(name, def['set']);\n    }\n    if ('value' in def) {\n      obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n        this.__defineGetter__(name, function objectDefinePropertyGetter() {\n          return value;\n        });\n        return value;\n      });\n      obj[name] = def.value;\n    }\n  };\n})();\n\n\n// No XMLHttpRequest#response?\n// Support: IE<11, Android <4.0\n(function checkXMLHttpRequestResponseCompatibility() {\n  var xhrPrototype = XMLHttpRequest.prototype;\n  var xhr = new XMLHttpRequest();\n  if (!('overrideMimeType' in xhr)) {\n    // IE10 might have response, but not overrideMimeType\n    // Support: IE10\n    Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n      value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n    });\n  }\n  if ('responseType' in xhr) {\n    return;\n  }\n\n  // The worker will be using XHR, so we can save time and disable worker.\n  PDFJS.disableWorker = true;\n\n  Object.defineProperty(xhrPrototype, 'responseType', {\n    get: function xmlHttpRequestGetResponseType() {\n      return this._responseType || 'text';\n    },\n    set: function xmlHttpRequestSetResponseType(value) {\n      if (value === 'text' || value === 'arraybuffer') {\n        this._responseType = value;\n        if (value === 'arraybuffer' &&\n            typeof this.overrideMimeType === 'function') {\n          this.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n      }\n    }\n  });\n\n  // Support: IE9\n  if (typeof VBArray !== 'undefined') {\n    Object.defineProperty(xhrPrototype, 'response', {\n      get: function xmlHttpRequestResponseGet() {\n        if (this.responseType === 'arraybuffer') {\n          return new Uint8Array(new VBArray(this.responseBody).toArray());\n        } else {\n          return this.responseText;\n        }\n      }\n    });\n    return;\n  }\n\n  Object.defineProperty(xhrPrototype, 'response', {\n    get: function xmlHttpRequestResponseGet() {\n      if (this.responseType !== 'arraybuffer') {\n        return this.responseText;\n      }\n      var text = this.responseText;\n      var i, n = text.length;\n      var result = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        result[i] = text.charCodeAt(i) & 0xFF;\n      }\n      return result.buffer;\n    }\n  });\n})();\n\n// window.btoa (base64 encode function) ?\n// Support: IE<10\n(function checkWindowBtoaCompatibility() {\n  if ('btoa' in window) {\n    return;\n  }\n\n  var digits =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  window.btoa = function windowBtoa(chars) {\n    var buffer = '';\n    var i, n;\n    for (i = 0, n = chars.length; i < n; i += 3) {\n      var b1 = chars.charCodeAt(i) & 0xFF;\n      var b2 = chars.charCodeAt(i + 1) & 0xFF;\n      var b3 = chars.charCodeAt(i + 2) & 0xFF;\n      var d1 = b1 >> 2, d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      var d3 = i + 1 < n ? ((b2 & 0xF) << 2) | (b3 >> 6) : 64;\n      var d4 = i + 2 < n ? (b3 & 0x3F) : 64;\n      buffer += (digits.charAt(d1) + digits.charAt(d2) +\n                 digits.charAt(d3) + digits.charAt(d4));\n    }\n    return buffer;\n  };\n})();\n\n// window.atob (base64 encode function)?\n// Support: IE<10\n(function checkWindowAtobCompatibility() {\n  if ('atob' in window) {\n    return;\n  }\n\n  // https://github.com/davidchambers/Base64.js\n  var digits =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  window.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 === 1) {\n      throw new Error('bad atob input');\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table?\n      // initialize bit storage and add its ascii value\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = digits.indexOf(buffer);\n    }\n    return output;\n  };\n})();\n\n// Function.prototype.bind?\n// Support: Android<4.0, iOS<6.0\n(function checkFunctionPrototypeBindCompatibility() {\n  if (typeof Function.prototype.bind !== 'undefined') {\n    return;\n  }\n\n  Function.prototype.bind = function functionPrototypeBind(obj) {\n    var fn = this, headArgs = Array.prototype.slice.call(arguments, 1);\n    var bound = function functionPrototypeBindBound() {\n      var args = headArgs.concat(Array.prototype.slice.call(arguments));\n      return fn.apply(obj, args);\n    };\n    return bound;\n  };\n})();\n\n// HTMLElement dataset property\n// Support: IE<11, Safari<5.1, Android<4.0\n(function checkDatasetProperty() {\n  var div = document.createElement('div');\n  if ('dataset' in div) {\n    return; // dataset property exists\n  }\n\n  Object.defineProperty(HTMLElement.prototype, 'dataset', {\n    get: function() {\n      if (this._dataset) {\n        return this._dataset;\n      }\n\n      var dataset = {};\n      for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n        var attribute = this.attributes[j];\n        if (attribute.name.substring(0, 5) !== 'data-') {\n          continue;\n        }\n        var key = attribute.name.substring(5).replace(/\\-([a-z])/g,\n          function(all, ch) {\n            return ch.toUpperCase();\n          });\n        dataset[key] = attribute.value;\n      }\n\n      Object.defineProperty(this, '_dataset', {\n        value: dataset,\n        writable: false,\n        enumerable: false\n      });\n      return dataset;\n    },\n    enumerable: true\n  });\n})();\n\n// HTMLElement classList property\n// Support: IE<10, Android<4.0, iOS<5.0\n(function checkClassListProperty() {\n  var div = document.createElement('div');\n  if ('classList' in div) {\n    return; // classList property exists\n  }\n\n  function changeList(element, itemName, add, remove) {\n    var s = element.className || '';\n    var list = s.split(/\\s+/g);\n    if (list[0] === '') {\n      list.shift();\n    }\n    var index = list.indexOf(itemName);\n    if (index < 0 && add) {\n      list.push(itemName);\n    }\n    if (index >= 0 && remove) {\n      list.splice(index, 1);\n    }\n    element.className = list.join(' ');\n    return (index >= 0);\n  }\n\n  var classListPrototype = {\n    add: function(name) {\n      changeList(this.element, name, true, false);\n    },\n    contains: function(name) {\n      return changeList(this.element, name, false, false);\n    },\n    remove: function(name) {\n      changeList(this.element, name, false, true);\n    },\n    toggle: function(name) {\n      changeList(this.element, name, true, true);\n    }\n  };\n\n  Object.defineProperty(HTMLElement.prototype, 'classList', {\n    get: function() {\n      if (this._classList) {\n        return this._classList;\n      }\n\n      var classList = Object.create(classListPrototype, {\n        element: {\n          value: this,\n          writable: false,\n          enumerable: true\n        }\n      });\n      Object.defineProperty(this, '_classList', {\n        value: classList,\n        writable: false,\n        enumerable: false\n      });\n      return classList;\n    },\n    enumerable: true\n  });\n})();\n\n// Check console compatibility\n// In older IE versions the console object is not available\n// unless console is open.\n// Support: IE<10\n(function checkConsoleCompatibility() {\n  if (!('console' in window)) {\n    window.console = {\n      log: function() {},\n      error: function() {},\n      warn: function() {}\n    };\n  } else if (!('bind' in console.log)) {\n    // native functions in IE9 might not have bind\n    console.log = (function(fn) {\n      return function(msg) { return fn(msg); };\n    })(console.log);\n    console.error = (function(fn) {\n      return function(msg) { return fn(msg); };\n    })(console.error);\n    console.warn = (function(fn) {\n      return function(msg) { return fn(msg); };\n    })(console.warn);\n  }\n})();\n\n// Check onclick compatibility in Opera\n// Support: Opera<15\n(function checkOnClickCompatibility() {\n  // workaround for reported Opera bug DSK-354448:\n  // onclick fires on disabled buttons with opaque content\n  function ignoreIfTargetDisabled(event) {\n    if (isDisabled(event.target)) {\n      event.stopPropagation();\n    }\n  }\n  function isDisabled(node) {\n    return node.disabled || (node.parentNode && isDisabled(node.parentNode));\n  }\n  if (navigator.userAgent.indexOf('Opera') !== -1) {\n    // use browser detection since we cannot feature-check this bug\n    document.addEventListener('click', ignoreIfTargetDisabled, true);\n  }\n})();\n\n// Checks if possible to use URL.createObjectURL()\n// Support: IE\n(function checkOnBlobSupport() {\n  // sometimes IE loosing the data created with createObjectURL(), see #3977\n  if (navigator.userAgent.indexOf('Trident') >= 0) {\n    PDFJS.disableCreateObjectURL = true;\n  }\n})();\n\n// Checks if navigator.language is supported\n(function checkNavigatorLanguage() {\n  if ('language' in navigator) {\n    return;\n  }\n  PDFJS.locale = navigator.userLanguage || 'en-US';\n})();\n\n(function checkRangeRequests() {\n  // Safari has issues with cached range requests see:\n  // https://github.com/mozilla/pdf.js/issues/3260\n  // Last tested with version 6.0.4.\n  // Support: Safari 6.0+\n  var isSafari = Object.prototype.toString.call(\n                  window.HTMLElement).indexOf('Constructor') > 0;\n\n  // Older versions of Android (pre 3.0) has issues with range requests, see:\n  // https://github.com/mozilla/pdf.js/issues/3381.\n  // Make sure that we only match webkit-based Android browsers,\n  // since Firefox/Fennec works as expected.\n  // Support: Android<3.0\n  var regex = /Android\\s[0-2][^\\d]/;\n  var isOldAndroid = regex.test(navigator.userAgent);\n\n  // Range requests are broken in Chrome 39 and 40, https://crbug.com/442318\n  var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(navigator.userAgent);\n\n  if (isSafari || isOldAndroid || isChromeWithRangeBug) {\n    PDFJS.disableRange = true;\n    PDFJS.disableStream = true;\n  }\n})();\n\n// Check if the browser supports manipulation of the history.\n// Support: IE<10, Android<4.2\n(function checkHistoryManipulation() {\n  // Android 2.x has so buggy pushState support that it was removed in\n  // Android 3.0 and restored as late as in Android 4.2.\n  // Support: Android 2.x\n  if (!history.pushState || navigator.userAgent.indexOf('Android 2.') >= 0) {\n    PDFJS.disableHistory = true;\n  }\n})();\n\n// Support: IE<11, Chrome<21, Android<4.4, Safari<6\n(function checkSetPresenceInImageData() {\n  // IE < 11 will use window.CanvasPixelArray which lacks set function.\n  if (window.CanvasPixelArray) {\n    if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n      window.CanvasPixelArray.prototype.set = function(arr) {\n        for (var i = 0, ii = this.length; i < ii; i++) {\n          this[i] = arr[i];\n        }\n      };\n    }\n  } else {\n    // Old Chrome and Android use an inaccessible CanvasPixelArray prototype.\n    // Because we cannot feature detect it, we rely on user agent parsing.\n    var polyfill = false, versionMatch;\n    if (navigator.userAgent.indexOf('Chrom') >= 0) {\n      versionMatch = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n      // Chrome < 21 lacks the set function.\n      polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n    } else if (navigator.userAgent.indexOf('Android') >= 0) {\n      // Android < 4.4 lacks the set function.\n      // Android >= 4.4 will contain Chrome in the user agent,\n      // thus pass the Chrome check above and not reach this block.\n      polyfill = /Android\\s[0-4][^\\d]/g.test(navigator.userAgent);\n    } else if (navigator.userAgent.indexOf('Safari') >= 0) {\n      versionMatch = navigator.userAgent.\n        match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n      // Safari < 6 lacks the set function.\n      polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n    }\n\n    if (polyfill) {\n      var contextPrototype = window.CanvasRenderingContext2D.prototype;\n      var createImageData = contextPrototype.createImageData;\n      contextPrototype.createImageData = function(w, h) {\n        var imageData = createImageData.call(this, w, h);\n        imageData.data.set = function(arr) {\n          for (var i = 0, ii = this.length; i < ii; i++) {\n            this[i] = arr[i];\n          }\n        };\n        return imageData;\n      };\n      // this closure will be kept referenced, so clear its vars\n      contextPrototype = null;\n    }\n  }\n})();\n\n// Support: IE<10, Android<4.0, iOS\n(function checkRequestAnimationFrame() {\n  function fakeRequestAnimationFrame(callback) {\n    window.setTimeout(callback, 20);\n  }\n\n  var isIOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  if (isIOS) {\n    // requestAnimationFrame on iOS is broken, replacing with fake one.\n    window.requestAnimationFrame = fakeRequestAnimationFrame;\n    return;\n  }\n  if ('requestAnimationFrame' in window) {\n    return;\n  }\n  window.requestAnimationFrame =\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    fakeRequestAnimationFrame;\n})();\n\n(function checkCanvasSizeLimitation() {\n  var isIOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  var isAndroid = /Android/g.test(navigator.userAgent);\n  if (isIOS || isAndroid) {\n    // 5MP\n    PDFJS.maxCanvasPixels = 5242880;\n  }\n})();\n\n// Disable fullscreen support for certain problematic configurations.\n// Support: IE11+ (when embedded).\n(function checkFullscreenSupport() {\n  var isEmbeddedIE = (navigator.userAgent.indexOf('Trident') >= 0 &&\n                      window.parent !== window);\n  if (isEmbeddedIE) {\n    PDFJS.disableFullscreen = true;\n  }\n})();\n\n// Provides document.currentScript support\n// Support: IE, Chrome<29.\n(function checkCurrentScript() {\n  if ('currentScript' in document) {\n    return;\n  }\n  Object.defineProperty(document, 'currentScript', {\n    get: function () {\n      var scripts = document.getElementsByTagName('script');\n      return scripts[scripts.length - 1];\n    },\n    enumerable: true,\n    configurable: true\n  });\n})();","/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"pdfMake\"] = __webpack_require__(1);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/* jslint node: true */\n\t/* jslint browser: true */\n\t/* global BlobBuilder */\n\t'use strict';\n\n\tvar PdfPrinter = __webpack_require__(2);\n\tvar saveAs = __webpack_require__(3);\n\n\tvar defaultClientFonts = {\n\t\tRoboto: {\n\t\t\tnormal: 'Roboto-Regular.ttf',\n\t\t\tbold: 'Roboto-Medium.ttf',\n\t\t\titalics: 'Roboto-Italic.ttf',\n\t\t\tbolditalics: 'Roboto-Italic.ttf'\n\t\t}\n\t};\n\n\tfunction Document(docDefinition, fonts, vfs) {\n\t\tthis.docDefinition = docDefinition;\n\t\tthis.fonts = fonts || defaultClientFonts;\n\t\tthis.vfs = vfs;\n\t}\n\n\tDocument.prototype._createDoc = function(options, callback) {\n\t\tvar printer = new PdfPrinter(this.fonts);\n\t\tprinter.fs.bindFS(this.vfs);\n\n\t\tvar doc = printer.createPdfKitDocument(this.docDefinition, options);\n\t\tvar chunks = [];\n\t\tvar result;\n\n\t\tdoc.on('data', function(chunk) {\n\t\t\tchunks.push(chunk);\n\t\t});\n\t\tdoc.on('end', function() {\n\t\t\tresult = Buffer.concat(chunks);\n\t\t\tcallback(result, doc._pdfMakePages);\n\t\t});\n\t\tdoc.end();\n\t};\n\n\tDocument.prototype._getPages = function(options, cb){\n\t  if (!cb) throw 'getBuffer is an async method and needs a callback argument';\n\t  this._createDoc(options, function(ignoreBuffer, pages){\n\t    cb(pages);\n\t  });\n\t};\n\n\tDocument.prototype.open = function(message) {\n\t\t// we have to open the window immediately and store the reference\n\t\t// otherwise popup blockers will stop us\n\t\tvar win = window.open('', '_blank');\n\n\t\ttry {\n\t\t\tthis.getDataUrl(function(result) {\n\t\t\t\twin.location.href = result;\n\t\t\t});\n\t\t} catch(e) {\n\t\t\twin.close();\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\n\tDocument.prototype.print = function() {\n\t  this.getDataUrl(function(dataUrl) {\n\t    var iFrame = document.createElement('iframe');\n\t    iFrame.style.position = 'absolute';\n\t    iFrame.style.left = '-99999px';\n\t    iFrame.src = dataUrl;\n\t    iFrame.onload = function() {\n\t      function removeIFrame(){\n\t        document.body.removeChild(iFrame);\n\t        document.removeEventListener('click', removeIFrame);\n\t      }\n\t      document.addEventListener('click', removeIFrame, false);\n\t    };\n\n\t    document.body.appendChild(iFrame);\n\t  }, { autoPrint: true });\n\t};\n\n\tDocument.prototype.download = function(defaultFileName, cb) {\n\t   if(typeof defaultFileName === \"function\") {\n\t      cb = defaultFileName;\n\t      defaultFileName = null;\n\t   }\n\n\t   defaultFileName = defaultFileName || 'file.pdf';\n\t   this.getBuffer(function(result) {\n\t       saveAs(new Blob([result], {type: 'application/pdf'}), defaultFileName);\n\t       if (typeof cb === \"function\") {\n\t           cb();\n\t       }\n\t   });\n\t};\n\n\tDocument.prototype.getBase64 = function(cb, options) {\n\t\tif (!cb) throw 'getBase64 is an async method and needs a callback argument';\n\t\tthis._createDoc(options, function(buffer) {\n\t\t\tcb(buffer.toString('base64'));\n\t\t});\n\t};\n\n\tDocument.prototype.getDataUrl = function(cb, options) {\n\t\tif (!cb) throw 'getDataUrl is an async method and needs a callback argument';\n\t\tthis._createDoc(options, function(buffer) {\n\t\t\tcb('data:application/pdf;base64,' + buffer.toString('base64'));\n\t\t});\n\t};\n\n\tDocument.prototype.getBuffer = function(cb, options) {\n\t\tif (!cb) throw 'getBuffer is an async method and needs a callback argument';\n\t\tthis._createDoc(options, function(buffer){\n\t    cb(buffer);\n\t  });\n\t};\n\n\tmodule.exports = {\n\t\tcreatePdf: function(docDefinition) {\n\t\t\treturn new Document(docDefinition, window.pdfMake.fonts, window.pdfMake.vfs);\n\t\t}\n\t};\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t/* global window */\n\t'use strict';\n\n\tvar _ = __webpack_require__(11);\n\tvar FontProvider = __webpack_require__(5);\n\tvar LayoutBuilder = __webpack_require__(6);\n\tvar PdfKit = __webpack_require__(28);\n\tvar PDFReference = __webpack_require__(12);\n\tvar sizes = __webpack_require__(7);\n\tvar ImageMeasure = __webpack_require__(8);\n\tvar textDecorator = __webpack_require__(9);\n\tvar FontProvider = __webpack_require__(5);\n\n\t////////////////////////////////////////\n\t// PdfPrinter\n\n\t/**\n\t * @class Creates an instance of a PdfPrinter which turns document definition into a pdf\n\t *\n\t * @param {Object} fontDescriptors font definition dictionary\n\t *\n\t * @example\n\t * var fontDescriptors = {\n\t *\tRoboto: {\n\t *\t\tnormal: 'fonts/Roboto-Regular.ttf',\n\t *\t\tbold: 'fonts/Roboto-Medium.ttf',\n\t *\t\titalics: 'fonts/Roboto-Italic.ttf',\n\t *\t\tbolditalics: 'fonts/Roboto-Italic.ttf'\n\t *\t}\n\t * };\n\t *\n\t * var printer = new PdfPrinter(fontDescriptors);\n\t */\n\tfunction PdfPrinter(fontDescriptors) {\n\t\tthis.fontDescriptors = fontDescriptors;\n\t}\n\n\t/**\n\t * Executes layout engine for the specified document and renders it into a pdfkit document\n\t * ready to be saved.\n\t *\n\t * @param {Object} docDefinition document definition\n\t * @param {Object} docDefinition.content an array describing the pdf structure (for more information take a look at the examples in the /examples folder)\n\t * @param {Object} [docDefinition.defaultStyle] default (implicit) style definition\n\t * @param {Object} [docDefinition.styles] dictionary defining all styles which can be used in the document\n\t * @param {Object} [docDefinition.pageSize] page size (pdfkit units, A4 dimensions by default)\n\t * @param {Number} docDefinition.pageSize.width width\n\t * @param {Number} docDefinition.pageSize.height height\n\t * @param {Object} [docDefinition.pageMargins] page margins (pdfkit units)\n\t *\n\t * @example\n\t *\n\t * var docDefinition = {\n\t *\tcontent: [\n\t *\t\t'First paragraph',\n\t *\t\t'Second paragraph, this time a little bit longer',\n\t *\t\t{ text: 'Third paragraph, slightly bigger font size', fontSize: 20 },\n\t *\t\t{ text: 'Another paragraph using a named style', style: 'header' },\n\t *\t\t{ text: ['playing with ', 'inlines' ] },\n\t *\t\t{ text: ['and ', { text: 'restyling ', bold: true }, 'them'] },\n\t *\t],\n\t *\tstyles: {\n\t *\t\theader: { fontSize: 30, bold: true }\n\t *\t}\n\t * }\n\t *\n\t * var pdfDoc = printer.createPdfKitDocument(docDefinition);\n\t *\n\t * pdfDoc.pipe(fs.createWriteStream('sample.pdf'));\n\t * pdfDoc.end();\n\t *\n\t * @return {Object} a pdfKit document object which can be saved or encode to data-url\n\t */\n\tPdfPrinter.prototype.createPdfKitDocument = function(docDefinition, options) {\n\t\toptions = options || {};\n\n\t\tvar pageSize = pageSize2widthAndHeight(docDefinition.pageSize || 'a4');\n\n\t  if(docDefinition.pageOrientation === 'landscape') {\n\t    pageSize = { width: pageSize.height, height: pageSize.width};\n\t  }\n\t\tpageSize.orientation = docDefinition.pageOrientation === 'landscape' ? docDefinition.pageOrientation : 'portrait';\n\n\t\tthis.pdfKitDoc = new PdfKit({ size: [ pageSize.width, pageSize.height ], compress: false});\n\t\tthis.pdfKitDoc.info.Producer = 'pdfmake';\n\t\tthis.pdfKitDoc.info.Creator = 'pdfmake';\n\t\tthis.fontProvider = new FontProvider(this.fontDescriptors, this.pdfKitDoc);\n\n\t  docDefinition.images = docDefinition.images || {};\n\n\t\tvar builder = new LayoutBuilder(\n\t\t\tpageSize,\n\t\t\tfixPageMargins(docDefinition.pageMargins || 40),\n\t        new ImageMeasure(this.pdfKitDoc, docDefinition.images));\n\n\t  registerDefaultTableLayouts(builder);\n\t  if (options.tableLayouts) {\n\t    builder.registerTableLayouts(options.tableLayouts);\n\t  }\n\n\t\tvar pages = builder.layoutDocument(docDefinition.content, this.fontProvider, docDefinition.styles || {}, docDefinition.defaultStyle || { fontSize: 12, font: 'Roboto' }, docDefinition.background, docDefinition.header, docDefinition.footer, docDefinition.images, docDefinition.watermark, docDefinition.pageBreakBefore);\n\n\t\trenderPages(pages, this.fontProvider, this.pdfKitDoc);\n\n\t\tif(options.autoPrint){\n\t        var jsRef = this.pdfKitDoc.ref({\n\t\t\t\tS: 'JavaScript',\n\t\t\t\tJS: new StringObject('this.print\\\\(true\\\\);')\n\t\t\t});\n\t\t\tvar namesRef = this.pdfKitDoc.ref({\n\t\t\t\tNames: [new StringObject('EmbeddedJS'), new PDFReference(this.pdfKitDoc, jsRef.id)],\n\t\t\t});\n\n\t\t\tjsRef.end();\n\t\t\tnamesRef.end();\n\n\t\t\tthis.pdfKitDoc._root.data.Names = {\n\t\t\t\tJavaScript: new PDFReference(this.pdfKitDoc, namesRef.id)\n\t\t\t};\n\t\t}\n\t\treturn this.pdfKitDoc;\n\t};\n\n\tfunction fixPageMargins(margin) {\n\t    if (!margin) return null;\n\n\t    if (typeof margin === 'number' || margin instanceof Number) {\n\t        margin = { left: margin, right: margin, top: margin, bottom: margin };\n\t    } else if (margin instanceof Array) {\n\t        if (margin.length === 2) {\n\t            margin = { left: margin[0], top: margin[1], right: margin[0], bottom: margin[1] };\n\t        } else if (margin.length === 4) {\n\t            margin = { left: margin[0], top: margin[1], right: margin[2], bottom: margin[3] };\n\t        } else throw 'Invalid pageMargins definition';\n\t    }\n\n\t    return margin;\n\t}\n\n\tfunction registerDefaultTableLayouts(layoutBuilder) {\n\t  layoutBuilder.registerTableLayouts({\n\t    noBorders: {\n\t      hLineWidth: function(i) { return 0; },\n\t      vLineWidth: function(i) { return 0; },\n\t      paddingLeft: function(i) { return i && 4 || 0; },\n\t      paddingRight: function(i, node) { return (i < node.table.widths.length - 1) ? 4 : 0; },\n\t    },\n\t    headerLineOnly: {\n\t      hLineWidth: function(i, node) {\n\t        if (i === 0 || i === node.table.body.length) return 0;\n\t        return (i === node.table.headerRows) ? 2 : 0;\n\t      },\n\t      vLineWidth: function(i) { return 0; },\n\t      paddingLeft: function(i) {\n\t        return i === 0 ? 0 : 8;\n\t      },\n\t      paddingRight: function(i, node) {\n\t        return (i === node.table.widths.length - 1) ? 0 : 8;\n\t      }\n\t    },\n\t    lightHorizontalLines: {\n\t      hLineWidth: function(i, node) {\n\t        if (i === 0 || i === node.table.body.length) return 0;\n\t        return (i === node.table.headerRows) ? 2 : 1;\n\t      },\n\t      vLineWidth: function(i) { return 0; },\n\t      hLineColor: function(i) { return i === 1 ? 'black' : '#aaa'; },\n\t      paddingLeft: function(i) {\n\t        return i === 0 ? 0 : 8;\n\t      },\n\t      paddingRight: function(i, node) {\n\t        return (i === node.table.widths.length - 1) ? 0 : 8;\n\t      }\n\t    }\n\t  });\n\t}\n\n\tvar defaultLayout = {\n\t  hLineWidth: function(i, node) { return 1; }, //return node.table.headerRows && i === node.table.headerRows && 3 || 0; },\n\t  vLineWidth: function(i, node) { return 1; },\n\t  hLineColor: function(i, node) { return 'black'; },\n\t  vLineColor: function(i, node) { return 'black'; },\n\t  paddingLeft: function(i, node) { return 4; }, //i && 4 || 0; },\n\t  paddingRight: function(i, node) { return 4; }, //(i < node.table.widths.length - 1) ? 4 : 0; },\n\t  paddingTop: function(i, node) { return 2; },\n\t  paddingBottom: function(i, node) { return 2; }\n\t};\n\n\tfunction pageSize2widthAndHeight(pageSize) {\n\t    if (typeof pageSize == 'string' || pageSize instanceof String) {\n\t        var size = sizes[pageSize.toUpperCase()];\n\t        if (!size) throw ('Page size ' + pageSize + ' not recognized');\n\t        return { width: size[0], height: size[1] };\n\t    }\n\n\t    return pageSize;\n\t}\n\n\tfunction StringObject(str){\n\t\tthis.isString = true;\n\t\tthis.toString = function(){\n\t\t\treturn str;\n\t\t};\n\t}\n\n\tfunction updatePageOrientationInOptions(currentPage, pdfKitDoc) {\n\t\tvar previousPageOrientation = pdfKitDoc.options.size[0] > pdfKitDoc.options.size[1] ? 'landscape' : 'portrait';\n\n\t\tif(currentPage.pageSize.orientation !== previousPageOrientation) {\n\t\t\tvar width = pdfKitDoc.options.size[0];\n\t\t\tvar height = pdfKitDoc.options.size[1];\n\t\t\tpdfKitDoc.options.size = [height, width];\n\t\t}\n\t}\n\n\tfunction renderPages(pages, fontProvider, pdfKitDoc) {\n\t  pdfKitDoc._pdfMakePages = pages;\n\t\tfor (var i = 0; i < pages.length; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\tupdatePageOrientationInOptions(pages[i], pdfKitDoc);\n\t\t\t\tpdfKitDoc.addPage(pdfKitDoc.options);\n\t\t\t}\n\n\t\t\tvar page = pages[i];\n\t    for(var ii = 0, il = page.items.length; ii < il; ii++) {\n\t        var item = page.items[ii];\n\t        switch(item.type) {\n\t          case 'vector':\n\t              renderVector(item.item, pdfKitDoc);\n\t              break;\n\t          case 'line':\n\t              renderLine(item.item, item.item.x, item.item.y, pdfKitDoc);\n\t              break;\n\t          case 'image':\n\t              renderImage(item.item, item.item.x, item.item.y, pdfKitDoc);\n\t              break;\n\t\t\t\t\t}\n\t    }\n\t    if(page.watermark){\n\t      renderWatermark(page, pdfKitDoc);\n\t\t}\n\n\t    fontProvider.setFontRefsToPdfDoc();\n\t  }\n\t}\n\n\tfunction renderLine(line, x, y, pdfKitDoc) {\n\t\tx = x || 0;\n\t\ty = y || 0;\n\n\t\tvar ascenderHeight = line.getAscenderHeight();\n\n\t\ttextDecorator.drawBackground(line, x, y, pdfKitDoc);\n\n\t\t//TODO: line.optimizeInlines();\n\t\tfor(var i = 0, l = line.inlines.length; i < l; i++) {\n\t\t\tvar inline = line.inlines[i];\n\n\t\t\tpdfKitDoc.fill(inline.color || 'black');\n\n\t\t\tpdfKitDoc.save();\n\t\t\tpdfKitDoc.transform(1, 0, 0, -1, 0, pdfKitDoc.page.height);\n\n\n\t    var encoded = inline.font.encode(inline.text);\n\t\t\tpdfKitDoc.addContent('BT');\n\n\t\t\tpdfKitDoc.addContent('' + (x + inline.x) + ' ' + (pdfKitDoc.page.height - y - ascenderHeight) + ' Td');\n\t\t\tpdfKitDoc.addContent('/' + encoded.fontId + ' ' + inline.fontSize + ' Tf');\n\n\t        pdfKitDoc.addContent('<' + encoded.encodedText + '> Tj');\n\n\t\t\tpdfKitDoc.addContent('ET');\n\t\t\tpdfKitDoc.restore();\n\t\t}\n\n\t\ttextDecorator.drawDecorations(line, x, y, pdfKitDoc);\n\n\t}\n\n\tfunction renderWatermark(page, pdfKitDoc){\n\t\tvar watermark = page.watermark;\n\n\t\tpdfKitDoc.fill('black');\n\t\tpdfKitDoc.opacity(0.6);\n\n\t\tpdfKitDoc.save();\n\t\tpdfKitDoc.transform(1, 0, 0, -1, 0, pdfKitDoc.page.height);\n\n\t\tvar angle = Math.atan2(pdfKitDoc.page.height, pdfKitDoc.page.width) * 180/Math.PI;\n\t\tpdfKitDoc.rotate(angle, {origin: [pdfKitDoc.page.width/2, pdfKitDoc.page.height/2]});\n\n\t  var encoded = watermark.font.encode(watermark.text);\n\t\tpdfKitDoc.addContent('BT');\n\t\tpdfKitDoc.addContent('' + (pdfKitDoc.page.width/2 - watermark.size.size.width/2) + ' ' + (pdfKitDoc.page.height/2 - watermark.size.size.height/4) + ' Td');\n\t\tpdfKitDoc.addContent('/' + encoded.fontId + ' ' + watermark.size.fontSize + ' Tf');\n\t\tpdfKitDoc.addContent('<' + encoded.encodedText + '> Tj');\n\t\tpdfKitDoc.addContent('ET');\n\t\tpdfKitDoc.restore();\n\t}\n\n\tfunction renderVector(vector, pdfDoc) {\n\t\t//TODO: pdf optimization (there's no need to write all properties everytime)\n\t\tpdfDoc.lineWidth(vector.lineWidth || 1);\n\t\tif (vector.dash) {\n\t\t\tpdfDoc.dash(vector.dash.length, { space: vector.dash.space || vector.dash.length });\n\t\t} else {\n\t\t\tpdfDoc.undash();\n\t\t}\n\t\tpdfDoc.fillOpacity(vector.fillOpacity || 1);\n\t\tpdfDoc.strokeOpacity(vector.strokeOpacity || 1);\n\t\tpdfDoc.lineJoin(vector.lineJoin || 'miter');\n\n\t\t//TODO: clipping\n\n\t\tswitch(vector.type) {\n\t\t\tcase 'ellipse':\n\t\t\t\tpdfDoc.ellipse(vector.x, vector.y, vector.r1, vector.r2);\n\t\t\t\tbreak;\n\t\t\tcase 'rect':\n\t\t\t\tif (vector.r) {\n\t\t\t\t\tpdfDoc.roundedRect(vector.x, vector.y, vector.w, vector.h, vector.r);\n\t\t\t\t} else {\n\t\t\t\t\tpdfDoc.rect(vector.x, vector.y, vector.w, vector.h);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'line':\n\t\t\t\tpdfDoc.moveTo(vector.x1, vector.y1);\n\t\t\t\tpdfDoc.lineTo(vector.x2, vector.y2);\n\t\t\t\tbreak;\n\t\t\tcase 'polyline':\n\t\t\t\tif (vector.points.length === 0) break;\n\n\t\t\t\tpdfDoc.moveTo(vector.points[0].x, vector.points[0].y);\n\t\t\t\tfor(var i = 1, l = vector.points.length; i < l; i++) {\n\t\t\t\t\tpdfDoc.lineTo(vector.points[i].x, vector.points[i].y);\n\t\t\t\t}\n\n\t\t\t\tif (vector.points.length > 1) {\n\t\t\t\t\tvar p1 = vector.points[0];\n\t\t\t\t\tvar pn = vector.points[vector.points.length - 1];\n\n\t\t\t\t\tif (vector.closePath || p1.x === pn.x && p1.y === pn.y) {\n\t\t\t\t\t\tpdfDoc.closePath();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (vector.color && vector.lineColor) {\n\t\t\tpdfDoc.fillAndStroke(vector.color, vector.lineColor);\n\t\t} else if (vector.color) {\n\t\t\tpdfDoc.fill(vector.color);\n\t\t} else {\n\t\t\tpdfDoc.stroke(vector.lineColor || 'black');\n\t\t}\n\t}\n\n\tfunction renderImage(image, x, y, pdfKitDoc) {\n\t    pdfKitDoc.image(image.image, image.x, image.y, { width: image._width, height: image._height });\n\t}\n\n\tmodule.exports = PdfPrinter;\n\n\n\t/* temporary browser extension */\n\tPdfPrinter.prototype.fs = __webpack_require__(10);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {/* FileSaver.js\n\t * A saveAs() FileSaver implementation.\n\t * 2014-08-29\n\t *\n\t * By Eli Grey, http://eligrey.com\n\t * License: X11/MIT\n\t *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n\t */\n\n\t/*global self */\n\t/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n\t/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\n\tvar saveAs = saveAs\n\t  // IE 10+ (native saveAs)\n\t  || (typeof navigator !== \"undefined\" &&\n\t      navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))\n\t  // Everyone else\n\t  || (function(view) {\n\t\t\"use strict\";\n\t\t// IE <10 is explicitly unsupported\n\t\tif (typeof navigator !== \"undefined\" &&\n\t\t    /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\t\treturn;\n\t\t}\n\t\tvar\n\t\t\t  doc = view.document\n\t\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t\t, get_URL = function() {\n\t\t\t\treturn view.URL || view.webkitURL || view;\n\t\t\t}\n\t\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t\t, can_use_save_link = \"download\" in save_link\n\t\t\t, click = function(node) {\n\t\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\t\tevent.initMouseEvent(\n\t\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t\t, false, false, false, false, 0, null\n\t\t\t\t);\n\t\t\t\tnode.dispatchEvent(event);\n\t\t\t}\n\t\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t\t, throw_outside = function(ex) {\n\t\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\t\tthrow ex;\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t\t, fs_min_size = 0\n\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 for\n\t\t\t// the reasoning behind the timeout and revocation flow\n\t\t\t, arbitrary_revoke_timeout = 10\n\t\t\t, revoke = function(file) {\n\t\t\t\tvar revoker = function() {\n\t\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t\t} else { // file is a File\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (view.chrome) {\n\t\t\t\t\trevoker();\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t\t\t}\n\t\t\t}\n\t\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\t\tevent_types = [].concat(event_types);\n\t\t\t\tvar i = event_types.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t, FileSaver = function(blob, name) {\n\t\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\t\tvar\n\t\t\t\t\t  filesaver = this\n\t\t\t\t\t, type = blob.type\n\t\t\t\t\t, blob_changed = false\n\t\t\t\t\t, object_url\n\t\t\t\t\t, target_view\n\t\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t\t}\n\t\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t\t, fs_error = function() {\n\t\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\t\tif (new_tab == undefined && typeof safari !== \"undefined\") {\n\t\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\trevoke(object_url);\n\t\t\t\t\t}\n\t\t\t\t\t, abortable = function(func) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t\t, slice\n\t\t\t\t;\n\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = \"download\";\n\t\t\t\t}\n\t\t\t\tif (can_use_save_link) {\n\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\t\tblob_changed = true;\n\t\t\t\t}\n\t\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\t\tname += \".download\";\n\t\t\t\t}\n\t\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\t\ttarget_view = view;\n\t\t\t\t}\n\t\t\t\tif (!req_fs) {\n\t\t\t\t\tfs_error();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfs_min_size += blob.size;\n\t\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}), fs_error);\n\t\t\t\t}), fs_error);\n\t\t\t}\n\t\t\t, FS_proto = FileSaver.prototype\n\t\t\t, saveAs = function(blob, name) {\n\t\t\t\treturn new FileSaver(blob, name);\n\t\t\t}\n\t\t;\n\t\tFS_proto.abort = function() {\n\t\t\tvar filesaver = this;\n\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\tdispatch(filesaver, \"abort\");\n\t\t};\n\t\tFS_proto.readyState = FS_proto.INIT = 0;\n\t\tFS_proto.WRITING = 1;\n\t\tFS_proto.DONE = 2;\n\n\t\tFS_proto.error =\n\t\tFS_proto.onwritestart =\n\t\tFS_proto.onprogress =\n\t\tFS_proto.onwrite =\n\t\tFS_proto.onabort =\n\t\tFS_proto.onerror =\n\t\tFS_proto.onwriteend =\n\t\t\tnull;\n\n\t\treturn saveAs;\n\t}(\n\t\t   typeof self !== \"undefined\" && self\n\t\t|| typeof window !== \"undefined\" && window\n\t\t|| this.content\n\t));\n\t// `self` is undefined in Firefox for Android content script context\n\t// while `this` is nsIContentFrameMessageManager\n\t// with an attribute `content` that corresponds to the window\n\n\tif (typeof module !== \"undefined\" && module !== null) {\n\t  module.exports = saveAs;\n\t} else if ((\"function\" !== \"undefined\" && __webpack_require__(13) !== null) && (__webpack_require__(14) != null)) {\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return saveAs;\n\t  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)(module)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\n\tvar base64 = __webpack_require__(31)\n\tvar ieee754 = __webpack_require__(29)\n\tvar isArray = __webpack_require__(30)\n\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\tBuffer.poolSize = 8192 // not used by this implementation\n\n\tvar kMaxLength = 0x3fffffff\n\tvar rootParent = {}\n\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Note:\n\t *\n\t * - Implementation must support adding new properties to `Uint8Array` instances.\n\t *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n\t *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *    incorrect length in some situations.\n\t *\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n\t * get the Object implementation, which is slower but will work correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = (function () {\n\t  try {\n\t    var buf = new ArrayBuffer(0)\n\t    var arr = new Uint8Array(buf)\n\t    arr.foo = function () { return 42 }\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t})()\n\n\t/**\n\t * Class: Buffer\n\t * =============\n\t *\n\t * The Buffer constructor returns instances of `Uint8Array` that are augmented\n\t * with function properties for all the node `Buffer` API functions. We use\n\t * `Uint8Array` so that square bracket notation works as expected -- it returns\n\t * a single octet.\n\t *\n\t * By augmenting the instances, we can avoid modifying the `Uint8Array`\n\t * prototype.\n\t */\n\tfunction Buffer (arg) {\n\t  if (!(this instanceof Buffer)) {\n\t    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n\t    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n\t    return new Buffer(arg)\n\t  }\n\n\t  this.length = 0\n\t  this.parent = undefined\n\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    return fromNumber(this, arg)\n\t  }\n\n\t  // Slightly less common case.\n\t  if (typeof arg === 'string') {\n\t    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n\t  }\n\n\t  // Unusual.\n\t  return fromObject(this, arg)\n\t}\n\n\tfunction fromNumber (that, length) {\n\t  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < length; i++) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n\t  // Assumption: byteLength() return value is always < kMaxLength.\n\t  var length = byteLength(string, encoding) | 0\n\t  that = allocate(that, length)\n\n\t  that.write(string, encoding)\n\t  return that\n\t}\n\n\tfunction fromObject (that, object) {\n\t  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n\t  if (isArray(object)) return fromArray(that, object)\n\n\t  if (object == null) {\n\t    throw new TypeError('must start with number, buffer, array or string')\n\t  }\n\n\t  if (typeof ArrayBuffer !== 'undefined' && object.buffer instanceof ArrayBuffer) {\n\t    return fromTypedArray(that, object)\n\t  }\n\n\t  if (object.length) return fromArrayLike(that, object)\n\n\t  return fromJsonObject(that, object)\n\t}\n\n\tfunction fromBuffer (that, buffer) {\n\t  var length = checked(buffer.length) | 0\n\t  that = allocate(that, length)\n\t  buffer.copy(that, 0, 0, length)\n\t  return that\n\t}\n\n\tfunction fromArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\t// Duplicate of fromArray() to keep fromArray() monomorphic.\n\tfunction fromTypedArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  // Truncating the elements is probably not what people expect from typed\n\t  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n\t  // of the old Buffer constructor.\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\tfunction fromArrayLike (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\t// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n\t// Returns a zero-length buffer for inputs that don't conform to the spec.\n\tfunction fromJsonObject (that, object) {\n\t  var array\n\t  var length = 0\n\n\t  if (object.type === 'Buffer' && isArray(object.data)) {\n\t    array = object.data\n\t    length = checked(array.length) | 0\n\t  }\n\t  that = allocate(that, length)\n\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\tfunction allocate (that, length) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = Buffer._augment(new Uint8Array(length))\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that.length = length\n\t    that._isBuffer = true\n\t  }\n\n\t  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n\t  if (fromPool) that.parent = rootParent\n\n\t  return that\n\t}\n\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\n\tfunction SlowBuffer (subject, encoding) {\n\t  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n\t  var buf = new Buffer(subject, encoding)\n\t  delete buf.parent\n\t  return buf\n\t}\n\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\n\t  if (a === b) return 0\n\n\t  var x = a.length\n\t  var y = b.length\n\n\t  var i = 0\n\t  var len = Math.min(x, y)\n\t  while (i < len) {\n\t    if (a[i] !== b[i]) break\n\n\t    ++i\n\t  }\n\n\t  if (i !== len) {\n\t    x = a[i]\n\t    y = b[i]\n\t  }\n\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'raw':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n\t  if (list.length === 0) {\n\t    return new Buffer(0)\n\t  } else if (list.length === 1) {\n\t    return list[0]\n\t  }\n\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; i++) {\n\t      length += list[i].length\n\t    }\n\t  }\n\n\t  var buf = new Buffer(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; i++) {\n\t    var item = list[i]\n\t    item.copy(buf, pos)\n\t    pos += item.length\n\t  }\n\t  return buf\n\t}\n\n\tfunction byteLength (string, encoding) {\n\t  if (typeof string !== 'string') string = String(string)\n\n\t  if (string.length === 0) return 0\n\n\t  switch (encoding || 'utf8') {\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'raw':\n\t      return string.length\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return string.length * 2\n\t    case 'hex':\n\t      return string.length >>> 1\n\t    case 'utf8':\n\t    case 'utf-8':\n\t      return utf8ToBytes(string).length\n\t    case 'base64':\n\t      return base64ToBytes(string).length\n\t    default:\n\t      return string.length\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\n\t// pre-set for values that may exist in the future\n\tBuffer.prototype.length = undefined\n\tBuffer.prototype.parent = undefined\n\n\t// toString(encoding, start=0, end=buffer.length)\n\tBuffer.prototype.toString = function toString (encoding, start, end) {\n\t  var loweredCase = false\n\n\t  start = start | 0\n\t  end = end === undefined || end === Infinity ? this.length : end | 0\n\n\t  if (!encoding) encoding = 'utf8'\n\t  if (start < 0) start = 0\n\t  if (end > this.length) end = this.length\n\t  if (end <= start) return ''\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\n\t      case 'binary':\n\t        return binarySlice(this, start, end)\n\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\n\tBuffer.prototype.compare = function compare (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return 0\n\t  return Buffer.compare(this, b)\n\t}\n\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n\t  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n\t  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n\t  byteOffset >>= 0\n\n\t  if (this.length === 0) return -1\n\t  if (byteOffset >= this.length) return -1\n\n\t  // Negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n\t  if (typeof val === 'string') {\n\t    if (val.length === 0) return -1 // special case: looking for empty string always fails\n\t    return String.prototype.indexOf.call(this, val, byteOffset)\n\t  }\n\t  if (Buffer.isBuffer(val)) {\n\t    return arrayIndexOf(this, val, byteOffset)\n\t  }\n\t  if (typeof val === 'number') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n\t      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n\t    }\n\t    return arrayIndexOf(this, [ val ], byteOffset)\n\t  }\n\n\t  function arrayIndexOf (arr, val, byteOffset) {\n\t    var foundIndex = -1\n\t    for (var i = 0; byteOffset + i < arr.length; i++) {\n\t      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n\t      } else {\n\t        foundIndex = -1\n\t      }\n\t    }\n\t    return -1\n\t  }\n\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\n\t// `get` will be removed in Node 0.13+\n\tBuffer.prototype.get = function get (offset) {\n\t  console.log('.get() is deprecated. Access using array indexes instead.')\n\t  return this.readUInt8(offset)\n\t}\n\n\t// `set` will be removed in Node 0.13+\n\tBuffer.prototype.set = function set (v, offset) {\n\t  console.log('.set() is deprecated. Access using array indexes instead.')\n\t  return this.writeUInt8(v, offset)\n\t}\n\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; i++) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) throw new Error('Invalid hex string')\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\n\tfunction binaryWrite (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    var swap = encoding\n\t    encoding = offset\n\t    offset = length | 0\n\t    length = swap\n\t  }\n\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('attempt to write outside buffer bounds')\n\t  }\n\n\t  if (!encoding) encoding = 'utf8'\n\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\n\t      case 'binary':\n\t        return binaryWrite(this, string, offset, length)\n\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\n\tfunction utf8Slice (buf, start, end) {\n\t  var res = ''\n\t  var tmp = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    if (buf[i] <= 0x7F) {\n\t      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n\t      tmp = ''\n\t    } else {\n\t      tmp += '%' + buf[i].toString(16)\n\t    }\n\t  }\n\n\t  return res + decodeUtf8Char(tmp)\n\t}\n\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\n\tfunction binarySlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\n\t  var out = ''\n\t  for (var i = start; i < end; i++) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\n\t  if (end < start) end = start\n\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = Buffer._augment(this.subarray(start, end))\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; i++) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\n\t  if (newBuf.length) newBuf.parent = this.parent || this\n\n\t  return newBuf\n\t}\n\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t}\n\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = value\n\t  return offset + 1\n\t}\n\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = value\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = value\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = value\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = value\n\t  return offset + 1\n\t}\n\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = value\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = value\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t  if (offset < 0) throw new RangeError('index out of range')\n\t}\n\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\n\t  var len = end - start\n\n\t  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < len; i++) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    target._set(this.subarray(start, start + len), targetStart)\n\t  }\n\n\t  return len\n\t}\n\n\t// fill(value, start=0, end=buffer.length)\n\tBuffer.prototype.fill = function fill (value, start, end) {\n\t  if (!value) value = 0\n\t  if (!start) start = 0\n\t  if (!end) end = this.length\n\n\t  if (end < start) throw new RangeError('end < start')\n\n\t  // Fill 0 bytes; we're done\n\t  if (end === start) return\n\t  if (this.length === 0) return\n\n\t  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n\t  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n\t  var i\n\t  if (typeof value === 'number') {\n\t    for (i = start; i < end; i++) {\n\t      this[i] = value\n\t    }\n\t  } else {\n\t    var bytes = utf8ToBytes(value.toString())\n\t    var len = bytes.length\n\t    for (i = start; i < end; i++) {\n\t      this[i] = bytes[i % len]\n\t    }\n\t  }\n\n\t  return this\n\t}\n\n\t/**\n\t * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n\t * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n\t */\n\tBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n\t  if (typeof Uint8Array !== 'undefined') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t      return (new Buffer(this)).buffer\n\t    } else {\n\t      var buf = new Uint8Array(this.length)\n\t      for (var i = 0, len = buf.length; i < len; i += 1) {\n\t        buf[i] = this[i]\n\t      }\n\t      return buf.buffer\n\t    }\n\t  } else {\n\t    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n\t  }\n\t}\n\n\t// HELPER FUNCTIONS\n\t// ================\n\n\tvar BP = Buffer.prototype\n\n\t/**\n\t * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n\t */\n\tBuffer._augment = function _augment (arr) {\n\t  arr.constructor = Buffer\n\t  arr._isBuffer = true\n\n\t  // save reference to original Uint8Array set method before overwriting\n\t  arr._set = arr.set\n\n\t  // deprecated, will be removed in node 0.13+\n\t  arr.get = BP.get\n\t  arr.set = BP.set\n\n\t  arr.write = BP.write\n\t  arr.toString = BP.toString\n\t  arr.toLocaleString = BP.toString\n\t  arr.toJSON = BP.toJSON\n\t  arr.equals = BP.equals\n\t  arr.compare = BP.compare\n\t  arr.indexOf = BP.indexOf\n\t  arr.copy = BP.copy\n\t  arr.slice = BP.slice\n\t  arr.readUIntLE = BP.readUIntLE\n\t  arr.readUIntBE = BP.readUIntBE\n\t  arr.readUInt8 = BP.readUInt8\n\t  arr.readUInt16LE = BP.readUInt16LE\n\t  arr.readUInt16BE = BP.readUInt16BE\n\t  arr.readUInt32LE = BP.readUInt32LE\n\t  arr.readUInt32BE = BP.readUInt32BE\n\t  arr.readIntLE = BP.readIntLE\n\t  arr.readIntBE = BP.readIntBE\n\t  arr.readInt8 = BP.readInt8\n\t  arr.readInt16LE = BP.readInt16LE\n\t  arr.readInt16BE = BP.readInt16BE\n\t  arr.readInt32LE = BP.readInt32LE\n\t  arr.readInt32BE = BP.readInt32BE\n\t  arr.readFloatLE = BP.readFloatLE\n\t  arr.readFloatBE = BP.readFloatBE\n\t  arr.readDoubleLE = BP.readDoubleLE\n\t  arr.readDoubleBE = BP.readDoubleBE\n\t  arr.writeUInt8 = BP.writeUInt8\n\t  arr.writeUIntLE = BP.writeUIntLE\n\t  arr.writeUIntBE = BP.writeUIntBE\n\t  arr.writeUInt16LE = BP.writeUInt16LE\n\t  arr.writeUInt16BE = BP.writeUInt16BE\n\t  arr.writeUInt32LE = BP.writeUInt32LE\n\t  arr.writeUInt32BE = BP.writeUInt32BE\n\t  arr.writeIntLE = BP.writeIntLE\n\t  arr.writeIntBE = BP.writeIntBE\n\t  arr.writeInt8 = BP.writeInt8\n\t  arr.writeInt16LE = BP.writeInt16LE\n\t  arr.writeInt16BE = BP.writeInt16BE\n\t  arr.writeInt32LE = BP.writeInt32LE\n\t  arr.writeInt32BE = BP.writeInt32BE\n\t  arr.writeFloatLE = BP.writeFloatLE\n\t  arr.writeFloatBE = BP.writeFloatBE\n\t  arr.writeDoubleLE = BP.writeDoubleLE\n\t  arr.writeDoubleBE = BP.writeDoubleBE\n\t  arr.fill = BP.fill\n\t  arr.inspect = BP.inspect\n\t  arr.toArrayBuffer = BP.toArrayBuffer\n\n\t  return arr\n\t}\n\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t  var i = 0\n\n\t  for (; i < length; i++) {\n\t    codePoint = string.charCodeAt(i)\n\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (leadSurrogate) {\n\t        // 2 leads in a row\n\t        if (codePoint < 0xDC00) {\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          leadSurrogate = codePoint\n\t          continue\n\t        } else {\n\t          // valid surrogate pair\n\t          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n\t          leadSurrogate = null\n\t        }\n\t      } else {\n\t        // no lead yet\n\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else {\n\t          // valid lead\n\t          leadSurrogate = codePoint\n\t          continue\n\t        }\n\t      }\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t      leadSurrogate = null\n\t    }\n\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x200000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\n\t  return bytes\n\t}\n\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    if ((units -= 2) < 0) break\n\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\n\t  return byteArray\n\t}\n\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; i++) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\n\tfunction decodeUtf8Char (str) {\n\t  try {\n\t    return decodeURIComponent(str)\n\t  } catch (err) {\n\t    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n\t  }\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar _ = __webpack_require__(11);\n\tvar FontWrapper = __webpack_require__(16);\n\n\tfunction typeName(bold, italics){\n\t\tvar type = 'normal';\n\t\tif (bold && italics) type = 'bolditalics';\n\t\telse if (bold) type = 'bold';\n\t\telse if (italics) type = 'italics';\n\t\treturn type;\n\t}\n\n\tfunction FontProvider(fontDescriptors, pdfDoc) {\n\t\tthis.fonts = {};\n\t\tthis.pdfDoc = pdfDoc;\n\t\tthis.fontWrappers = {};\n\n\t\tfor(var font in fontDescriptors) {\n\t\t\tif (fontDescriptors.hasOwnProperty(font)) {\n\t\t\t\tvar fontDef = fontDescriptors[font];\n\n\t\t\t\tthis.fonts[font] = {\n\t\t\t\t\tnormal: fontDef.normal,\n\t\t\t\t\tbold: fontDef.bold,\n\t\t\t\t\titalics: fontDef.italics,\n\t\t\t\t\tbolditalics: fontDef.bolditalics\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tFontProvider.prototype.provideFont = function(familyName, bold, italics) {\n\t  if (!this.fonts[familyName]) return this.pdfDoc._font;\n\t\tvar type = typeName(bold, italics);\n\n\t  this.fontWrappers[familyName] = this.fontWrappers[familyName] || {};\n\n\t  if (!this.fontWrappers[familyName][type]) {\n\t\t\tthis.fontWrappers[familyName][type] = new FontWrapper(this.pdfDoc, this.fonts[familyName][type], familyName + '(' + type + ')');\n\t\t}\n\n\t  return this.fontWrappers[familyName][type];\n\t};\n\n\tFontProvider.prototype.setFontRefsToPdfDoc = function(){\n\t  var self = this;\n\n\t  _.each(self.fontWrappers, function(fontFamily) {\n\t    _.each(fontFamily, function(fontWrapper){\n\t      _.each(fontWrapper.pdfFonts, function(font){\n\t        if (!self.pdfDoc.page.fonts[font.id]) {\n\t          self.pdfDoc.page.fonts[font.id] = font.ref();\n\t        }\n\t      });\n\t    });\n\t  });\n\t};\n\n\tmodule.exports = FontProvider;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar _ = __webpack_require__(11);\n\tvar TraversalTracker = __webpack_require__(18);\n\tvar DocMeasure = __webpack_require__(19);\n\tvar DocumentContext = __webpack_require__(20);\n\tvar PageElementWriter = __webpack_require__(21);\n\tvar ColumnCalculator = __webpack_require__(22);\n\tvar TableProcessor = __webpack_require__(23);\n\tvar Line = __webpack_require__(24);\n\tvar pack = __webpack_require__(25).pack;\n\tvar offsetVector = __webpack_require__(25).offsetVector;\n\tvar fontStringify = __webpack_require__(25).fontStringify;\n\tvar isFunction = __webpack_require__(25).isFunction;\n\tvar TextTools = __webpack_require__(26);\n\tvar StyleContextStack = __webpack_require__(27);\n\n\tfunction addAll(target, otherArray){\n\t  _.each(otherArray, function(item){\n\t    target.push(item);\n\t  });\n\t}\n\n\t/**\n\t * Creates an instance of LayoutBuilder - layout engine which turns document-definition-object\n\t * into a set of pages, lines, inlines and vectors ready to be rendered into a PDF\n\t *\n\t * @param {Object} pageSize - an object defining page width and height\n\t * @param {Object} pageMargins - an object defining top, left, right and bottom margins\n\t */\n\tfunction LayoutBuilder(pageSize, pageMargins, imageMeasure) {\n\t\tthis.pageSize = pageSize;\n\t\tthis.pageMargins = pageMargins;\n\t\tthis.tracker = new TraversalTracker();\n\t    this.imageMeasure = imageMeasure;\n\t    this.tableLayouts = {};\n\t}\n\n\tLayoutBuilder.prototype.registerTableLayouts = function (tableLayouts) {\n\t  this.tableLayouts = pack(this.tableLayouts, tableLayouts);\n\t};\n\n\t/**\n\t * Executes layout engine on document-definition-object and creates an array of pages\n\t * containing positioned Blocks, Lines and inlines\n\t *\n\t * @param {Object} docStructure document-definition-object\n\t * @param {Object} fontProvider font provider\n\t * @param {Object} styleDictionary dictionary with style definitions\n\t * @param {Object} defaultStyle default style definition\n\t * @return {Array} an array of pages\n\t */\n\tLayoutBuilder.prototype.layoutDocument = function (docStructure, fontProvider, styleDictionary, defaultStyle, background, header, footer, images, watermark, pageBreakBeforeFct) {\n\n\t  function addPageBreaksIfNecessary(linearNodeList, pages) {\n\t    linearNodeList = _.reject(linearNodeList, function(node){\n\t      return _.isEmpty(node.positions);\n\t    });\n\n\t    _.each(linearNodeList, function(node) {\n\t      var nodeInfo = _.pick(node, [\n\t        'id', 'text', 'ul', 'ol', 'table', 'image', 'qr', 'canvas', 'columns',\n\t        'headlineLevel', 'style', 'pageBreak', 'pageOrientation',\n\t        'width', 'height'\n\t      ]);\n\t      nodeInfo.startPosition = _.first(node.positions);\n\t      nodeInfo.pageNumbers = _.chain(node.positions).map('pageNumber').uniq().value();\n\t      nodeInfo.pages = pages.length;\n\t      nodeInfo.stack = _.isArray(node.stack);\n\n\t      node.nodeInfo = nodeInfo;\n\t    });\n\n\t    return _.any(linearNodeList, function (node, index, followingNodeList) {\n\t      if (node.pageBreak !== 'before' && !node.pageBreakCalculated) {\n\t        node.pageBreakCalculated = true;\n\t        var pageNumber = _.first(node.nodeInfo.pageNumbers);\n\n\t\t\t\t\tvar followingNodesOnPage = _.chain(followingNodeList).drop(index + 1).filter(function (node0) {\n\t          return _.contains(node0.nodeInfo.pageNumbers, pageNumber);\n\t        }).value();\n\n\t        var nodesOnNextPage = _.chain(followingNodeList).drop(index + 1).filter(function (node0) {\n\t          return _.contains(node0.nodeInfo.pageNumbers, pageNumber + 1);\n\t        }).value();\n\n\t        var previousNodesOnPage = _.chain(followingNodeList).take(index).filter(function (node0) {\n\t          return _.contains(node0.nodeInfo.pageNumbers, pageNumber);\n\t        }).value();\n\n\t        if (pageBreakBeforeFct(node.nodeInfo,\n\t          _.map(followingNodesOnPage, 'nodeInfo'),\n\t          _.map(nodesOnNextPage, 'nodeInfo'),\n\t          _.map(previousNodesOnPage, 'nodeInfo'))) {\n\t          node.pageBreak = 'before';\n\t          return true;\n\t        }\n\t      }\n\t    });\n\t  }\n\n\t  if(!isFunction(pageBreakBeforeFct)){\n\t    pageBreakBeforeFct = function(){\n\t      return false;\n\t    };\n\t  }\n\n\t  this.docMeasure = new DocMeasure(fontProvider, styleDictionary, defaultStyle, this.imageMeasure, this.tableLayouts, images);\n\n\n\t  function resetXYs(result) {\n\t    _.each(result.linearNodeList, function (node) {\n\t      node.resetXY();\n\t    });\n\t  }\n\n\t  var result = this.tryLayoutDocument(docStructure, fontProvider, styleDictionary, defaultStyle, background, header, footer, images, watermark);\n\t  while(addPageBreaksIfNecessary(result.linearNodeList, result.pages)){\n\t    resetXYs(result);\n\t    result = this.tryLayoutDocument(docStructure, fontProvider, styleDictionary, defaultStyle, background, header, footer, images, watermark);\n\t  }\n\n\t\treturn result.pages;\n\t};\n\n\tLayoutBuilder.prototype.tryLayoutDocument = function (docStructure, fontProvider, styleDictionary, defaultStyle, background, header, footer, images, watermark, pageBreakBeforeFct) {\n\n\t  this.linearNodeList = [];\n\t  docStructure = this.docMeasure.measureDocument(docStructure);\n\n\t  this.writer = new PageElementWriter(\n\t    new DocumentContext(this.pageSize, this.pageMargins), this.tracker);\n\n\t  var _this = this;\n\t  this.writer.context().tracker.startTracking('pageAdded', function() {\n\t    _this.addBackground(background);\n\t  });\n\n\t  this.addBackground(background);\n\t  this.processNode(docStructure);\n\t  this.addHeadersAndFooters(header, footer);\n\t  /* jshint eqnull:true */\n\t  if(watermark != null)\n\t    this.addWatermark(watermark, fontProvider);\n\n\t  return {pages: this.writer.context().pages, linearNodeList: this.linearNodeList};\n\t};\n\n\n\tLayoutBuilder.prototype.addBackground = function(background) {\n\t    var backgroundGetter = isFunction(background) ? background : function() { return background; };\n\n\t    var pageBackground = backgroundGetter(this.writer.context().page + 1);\n\n\t    if (pageBackground) {\n\t      var pageSize = this.writer.context().getCurrentPage().pageSize;\n\t      this.writer.beginUnbreakableBlock(pageSize.width, pageSize.height);\n\t      this.processNode(this.docMeasure.measureDocument(pageBackground));\n\t      this.writer.commitUnbreakableBlock(0, 0);\n\t    }\n\t};\n\n\tLayoutBuilder.prototype.addStaticRepeatable = function(headerOrFooter, sizeFunction) {\n\t  this.addDynamicRepeatable(function() { return headerOrFooter; }, sizeFunction);\n\t};\n\n\tLayoutBuilder.prototype.addDynamicRepeatable = function(nodeGetter, sizeFunction) {\n\t  var pages = this.writer.context().pages;\n\n\t  for(var pageIndex = 0, l = pages.length; pageIndex < l; pageIndex++) {\n\t    this.writer.context().page = pageIndex;\n\n\t    var node = nodeGetter(pageIndex + 1, l);\n\n\t    if (node) {\n\t      var sizes = sizeFunction(this.writer.context().getCurrentPage().pageSize, this.pageMargins);\n\t      this.writer.beginUnbreakableBlock(sizes.width, sizes.height);\n\t      this.processNode(this.docMeasure.measureDocument(node));\n\t      this.writer.commitUnbreakableBlock(sizes.x, sizes.y);\n\t    }\n\t  }\n\t};\n\n\tLayoutBuilder.prototype.addHeadersAndFooters = function(header, footer) {\n\t  var headerSizeFct = function(pageSize, pageMargins){\n\t    return {\n\t      x: 0,\n\t      y: 0,\n\t      width: pageSize.width,\n\t      height: pageMargins.top\n\t    };\n\t  };\n\n\t  var footerSizeFct = function (pageSize, pageMargins) {\n\t    return {\n\t      x: 0,\n\t      y: pageSize.height - pageMargins.bottom,\n\t      width: pageSize.width,\n\t      height: pageMargins.bottom\n\t    };\n\t  };\n\n\t  if(isFunction(header)) {\n\t    this.addDynamicRepeatable(header, headerSizeFct);\n\t  } else if(header) {\n\t    this.addStaticRepeatable(header, headerSizeFct);\n\t  }\n\n\t  if(isFunction(footer)) {\n\t    this.addDynamicRepeatable(footer, footerSizeFct);\n\t  } else if(footer) {\n\t    this.addStaticRepeatable(footer, footerSizeFct);\n\t  }\n\t};\n\n\tLayoutBuilder.prototype.addWatermark = function(watermark, fontProvider){\n\t  var defaultFont = Object.getOwnPropertyNames(fontProvider.fonts)[0]; // TODO allow selection of other font\n\t  var watermarkObject = {\n\t    text: watermark,\n\t    font: fontProvider.provideFont(fontProvider[defaultFont], false, false),\n\t    size: getSize(this.pageSize, watermark, fontProvider)\n\t  };\n\n\t  var pages = this.writer.context().pages;\n\t  for(var i = 0, l = pages.length; i < l; i++) {\n\t    pages[i].watermark = watermarkObject;\n\t  }\n\n\t  function getSize(pageSize, watermark, fontProvider){\n\t    var width = pageSize.width;\n\t    var height = pageSize.height;\n\t    var targetWidth = Math.sqrt(width*width + height*height)*0.8; /* page diagnoal * sample factor */\n\t    var textTools = new TextTools(fontProvider);\n\t    var styleContextStack = new StyleContextStack();\n\t    var size;\n\n\t    /**\n\t     * Binary search the best font size.\n\t     * Initial bounds [0, 1000]\n\t     * Break when range < 1\n\t     */\n\t    var a = 0;\n\t    var b = 1000;\n\t    var c = (a+b)/2;\n\t    while(Math.abs(a - b) > 1){\n\t      styleContextStack.push({\n\t        fontSize: c\n\t      });\n\t      size = textTools.sizeOfString(watermark, styleContextStack);\n\t      if(size.width > targetWidth){\n\t        b = c;\n\t        c = (a+b)/2;\n\t      }\n\t      else if(size.width < targetWidth){\n\t        a = c;\n\t        c = (a+b)/2;\n\t      }\n\t      styleContextStack.pop();\n\t    }\n\t    /*\n\t      End binary search\n\t     */\n\t    return {size: size, fontSize: c};\n\t  }\n\t};\n\n\tfunction decorateNode(node){\n\t  var x = node.x, y = node.y;\n\t  node.positions = [];\n\n\t  _.each(node.canvas, function(vector){\n\t    var x = vector.x, y = vector.y;\n\t    vector.resetXY = function(){\n\t      vector.x = x;\n\t      vector.y = y;\n\t    };\n\t  });\n\n\t  node.resetXY = function(){\n\t    node.x = x;\n\t    node.y = y;\n\t    _.each(node.canvas, function(vector){\n\t      vector.resetXY();\n\t    });\n\t  };\n\t}\n\n\tLayoutBuilder.prototype.processNode = function(node) {\n\t  var self = this;\n\n\t  this.linearNodeList.push(node);\n\t  decorateNode(node);\n\n\t  applyMargins(function() {\n\t    var absPosition = node.absolutePosition;\n\t    if(absPosition){\n\t      self.writer.context().beginDetachedBlock();\n\t      self.writer.context().moveTo(absPosition.x || 0, absPosition.y || 0);\n\t    }\n\n\t    if (node.stack) {\n\t      self.processVerticalContainer(node);\n\t    } else if (node.columns) {\n\t      self.processColumns(node);\n\t    } else if (node.ul) {\n\t      self.processList(false, node);\n\t    } else if (node.ol) {\n\t      self.processList(true, node);\n\t    } else if (node.table) {\n\t      self.processTable(node);\n\t    } else if (node.text !== undefined) {\n\t      self.processLeaf(node);\n\t    } else if (node.image) {\n\t      self.processImage(node);\n\t    } else if (node.canvas) {\n\t      self.processCanvas(node);\n\t    } else if (node.qr) {\n\t      self.processQr(node);\n\t    }else if (!node._span) {\n\t\t\tthrow 'Unrecognized document structure: ' + JSON.stringify(node, fontStringify);\n\t\t\t}\n\n\t    if(absPosition){\n\t      self.writer.context().endDetachedBlock();\n\t    }\n\t\t});\n\n\t\tfunction applyMargins(callback) {\n\t\t\tvar margin = node._margin;\n\n\t    if (node.pageBreak === 'before') {\n\t        self.writer.moveToNextPage(node.pageOrientation);\n\t    }\n\n\t\t\tif (margin) {\n\t\t\t\tself.writer.context().moveDown(margin[1]);\n\t\t\t\tself.writer.context().addMargin(margin[0], margin[2]);\n\t\t\t}\n\n\t\t\tcallback();\n\n\t\t\tif(margin) {\n\t\t\t\tself.writer.context().addMargin(-margin[0], -margin[2]);\n\t\t\t\tself.writer.context().moveDown(margin[3]);\n\t\t\t}\n\n\t    if (node.pageBreak === 'after') {\n\t        self.writer.moveToNextPage(node.pageOrientation);\n\t    }\n\t\t}\n\t};\n\n\t// vertical container\n\tLayoutBuilder.prototype.processVerticalContainer = function(node) {\n\t\tvar self = this;\n\t\tnode.stack.forEach(function(item) {\n\t\t\tself.processNode(item);\n\t\t\taddAll(node.positions, item.positions);\n\n\t\t\t//TODO: paragraph gap\n\t\t});\n\t};\n\n\t// columns\n\tLayoutBuilder.prototype.processColumns = function(columnNode) {\n\t\tvar columns = columnNode.columns;\n\t\tvar availableWidth = this.writer.context().availableWidth;\n\t\tvar gaps = gapArray(columnNode._gap);\n\n\t\tif (gaps) availableWidth -= (gaps.length - 1) * columnNode._gap;\n\n\t\tColumnCalculator.buildColumnWidths(columns, availableWidth);\n\t\tvar result = this.processRow(columns, columns, gaps);\n\t    addAll(columnNode.positions, result.positions);\n\n\n\t\tfunction gapArray(gap) {\n\t\t\tif (!gap) return null;\n\n\t\t\tvar gaps = [];\n\t\t\tgaps.push(0);\n\n\t\t\tfor(var i = columns.length - 1; i > 0; i--) {\n\t\t\t\tgaps.push(gap);\n\t\t\t}\n\n\t\t\treturn gaps;\n\t\t}\n\t};\n\n\tLayoutBuilder.prototype.processRow = function(columns, widths, gaps, tableBody, tableRow) {\n\t  var self = this;\n\t  var pageBreaks = [], positions = [];\n\n\t  this.tracker.auto('pageChanged', storePageBreakData, function() {\n\t    widths = widths || columns;\n\n\t    self.writer.context().beginColumnGroup();\n\n\t    for(var i = 0, l = columns.length; i < l; i++) {\n\t      var column = columns[i];\n\t      var width = widths[i]._calcWidth;\n\t      var leftOffset = colLeftOffset(i);\n\n\t      if (column.colSpan && column.colSpan > 1) {\n\t          for(var j = 1; j < column.colSpan; j++) {\n\t              width += widths[++i]._calcWidth + gaps[i];\n\t          }\n\t      }\n\n\t      self.writer.context().beginColumn(width, leftOffset, getEndingCell(column, i));\n\t      if (!column._span) {\n\t        self.processNode(column);\n\t        addAll(positions, column.positions);\n\t      } else if (column._columnEndingContext) {\n\t        // row-span ending\n\t        self.writer.context().markEnding(column);\n\t      }\n\t    }\n\n\t    self.writer.context().completeColumnGroup();\n\t  });\n\n\t  return {pageBreaks: pageBreaks, positions: positions};\n\n\t  function storePageBreakData(data) {\n\t    var pageDesc;\n\n\t    for(var i = 0, l = pageBreaks.length; i < l; i++) {\n\t      var desc = pageBreaks[i];\n\t      if (desc.prevPage === data.prevPage) {\n\t        pageDesc = desc;\n\t        break;\n\t      }\n\t    }\n\n\t    if (!pageDesc) {\n\t      pageDesc = data;\n\t      pageBreaks.push(pageDesc);\n\t    }\n\t    pageDesc.prevY = Math.max(pageDesc.prevY, data.prevY);\n\t    pageDesc.y = Math.min(pageDesc.y, data.y);\n\t  }\n\n\t\tfunction colLeftOffset(i) {\n\t\t\tif (gaps && gaps.length > i) return gaps[i];\n\t\t\treturn 0;\n\t\t}\n\n\t  function getEndingCell(column, columnIndex) {\n\t    if (column.rowSpan && column.rowSpan > 1) {\n\t      var endingRow = tableRow + column.rowSpan - 1;\n\t      if (endingRow >= tableBody.length) throw 'Row span for column ' + columnIndex + ' (with indexes starting from 0) exceeded row count';\n\t      return tableBody[endingRow][columnIndex];\n\t    }\n\n\t    return null;\n\t  }\n\t};\n\n\t// lists\n\tLayoutBuilder.prototype.processList = function(orderedList, node) {\n\t\tvar self = this,\n\t      items = orderedList ? node.ol : node.ul,\n\t      gapSize = node._gapSize;\n\n\t\tthis.writer.context().addMargin(gapSize.width);\n\n\t\tvar nextMarker;\n\t\tthis.tracker.auto('lineAdded', addMarkerToFirstLeaf, function() {\n\t\t\titems.forEach(function(item) {\n\t\t\t\tnextMarker = item.listMarker;\n\t\t\t\tself.processNode(item);\n\t            addAll(node.positions, item.positions);\n\t\t\t});\n\t\t});\n\n\t\tthis.writer.context().addMargin(-gapSize.width);\n\n\t\tfunction addMarkerToFirstLeaf(line) {\n\t\t\t// I'm not very happy with the way list processing is implemented\n\t\t\t// (both code and algorithm should be rethinked)\n\t\t\tif (nextMarker) {\n\t\t\t\tvar marker = nextMarker;\n\t\t\t\tnextMarker = null;\n\n\t\t\t\tif (marker.canvas) {\n\t\t\t\t\tvar vector = marker.canvas[0];\n\n\t\t\t\t\toffsetVector(vector, -marker._minWidth, 0);\n\t\t\t\t\tself.writer.addVector(vector);\n\t\t\t\t} else {\n\t\t\t\t\tvar markerLine = new Line(self.pageSize.width);\n\t\t\t\t\tmarkerLine.addInline(marker._inlines[0]);\n\t\t\t\t\tmarkerLine.x = -marker._minWidth;\n\t\t\t\t\tmarkerLine.y = line.getAscenderHeight() - markerLine.getAscenderHeight();\n\t\t\t\t\tself.writer.addLine(markerLine, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// tables\n\tLayoutBuilder.prototype.processTable = function(tableNode) {\n\t  var processor = new TableProcessor(tableNode);\n\n\t  processor.beginTable(this.writer);\n\n\t  for(var i = 0, l = tableNode.table.body.length; i < l; i++) {\n\t    processor.beginRow(i, this.writer);\n\n\t    var result = this.processRow(tableNode.table.body[i], tableNode.table.widths, tableNode._offsets.offsets, tableNode.table.body, i);\n\t    addAll(tableNode.positions, result.positions);\n\n\t    processor.endRow(i, this.writer, result.pageBreaks);\n\t  }\n\n\t  processor.endTable(this.writer);\n\t};\n\n\t// leafs (texts)\n\tLayoutBuilder.prototype.processLeaf = function(node) {\n\t\tvar line = this.buildNextLine(node);\n\n\t\twhile (line) {\n\t\t\tvar positions = this.writer.addLine(line);\n\t    node.positions.push(positions);\n\t\t\tline = this.buildNextLine(node);\n\t\t}\n\t};\n\n\tLayoutBuilder.prototype.buildNextLine = function(textNode) {\n\t\tif (!textNode._inlines || textNode._inlines.length === 0) return null;\n\n\t\tvar line = new Line(this.writer.context().availableWidth);\n\n\t\twhile(textNode._inlines && textNode._inlines.length > 0 && line.hasEnoughSpaceForInline(textNode._inlines[0])) {\n\t\t\tline.addInline(textNode._inlines.shift());\n\t\t}\n\n\t\tline.lastLineInParagraph = textNode._inlines.length === 0;\n\t\treturn line;\n\t};\n\n\t// images\n\tLayoutBuilder.prototype.processImage = function(node) {\n\t    var position = this.writer.addImage(node);\n\t    node.positions.push(position);\n\t};\n\n\tLayoutBuilder.prototype.processCanvas = function(node) {\n\t\tvar height = node._minHeight;\n\n\t\tif (this.writer.context().availableHeight < height) {\n\t\t\t// TODO: support for canvas larger than a page\n\t\t\t// TODO: support for other overflow methods\n\n\t\t\tthis.writer.moveToNextPage();\n\t\t}\n\n\t\tnode.canvas.forEach(function(vector) {\n\t\t\tvar position = this.writer.addVector(vector);\n\t        node.positions.push(position);\n\t\t}, this);\n\n\t\tthis.writer.context().moveDown(height);\n\t};\n\n\tLayoutBuilder.prototype.processQr = function(node) {\n\t\tvar position = this.writer.addQr(node);\n\t    node.positions.push(position);\n\t};\n\n\tmodule.exports = LayoutBuilder;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t\t'4A0': [4767.87, 6740.79],\n\t\t'2A0': [3370.39, 4767.87],\n\t\tA0: [2383.94, 3370.39],\n\t\tA1: [1683.78, 2383.94],\n\t\tA2: [1190.55, 1683.78],\n\t\tA3: [841.89, 1190.55],\n\t\tA4: [595.28, 841.89],\n\t\tA5: [419.53, 595.28],\n\t\tA6: [297.64, 419.53],\n\t\tA7: [209.76, 297.64],\n\t\tA8: [147.40, 209.76],\n\t\tA9: [104.88, 147.40],\n\t\tA10: [73.70, 104.88],\n\t\tB0: [2834.65, 4008.19],\n\t\tB1: [2004.09, 2834.65],\n\t\tB2: [1417.32, 2004.09],\n\t\tB3: [1000.63, 1417.32],\n\t\tB4: [708.66, 1000.63],\n\t\tB5: [498.90, 708.66],\n\t\tB6: [354.33, 498.90],\n\t\tB7: [249.45, 354.33],\n\t\tB8: [175.75, 249.45],\n\t\tB9: [124.72, 175.75],\n\t\tB10: [87.87, 124.72],\n\t\tC0: [2599.37, 3676.54],\n\t\tC1: [1836.85, 2599.37],\n\t\tC2: [1298.27, 1836.85],\n\t\tC3: [918.43, 1298.27],\n\t\tC4: [649.13, 918.43],\n\t\tC5: [459.21, 649.13],\n\t\tC6: [323.15, 459.21],\n\t\tC7: [229.61, 323.15],\n\t\tC8: [161.57, 229.61],\n\t\tC9: [113.39, 161.57],\n\t\tC10: [79.37, 113.39],\n\t\tRA0: [2437.80, 3458.27],\n\t\tRA1: [1729.13, 2437.80],\n\t\tRA2: [1218.90, 1729.13],\n\t\tRA3: [864.57, 1218.90],\n\t\tRA4: [609.45, 864.57],\n\t\tSRA0: [2551.18, 3628.35],\n\t\tSRA1: [1814.17, 2551.18],\n\t\tSRA2: [1275.59, 1814.17],\n\t\tSRA3: [907.09, 1275.59],\n\t\tSRA4: [637.80, 907.09],\n\t\tEXECUTIVE: [521.86, 756.00],\n\t\tFOLIO: [612.00, 936.00],\n\t\tLEGAL: [612.00, 1008.00],\n\t\tLETTER: [612.00, 792.00],\n\t\tTABLOID: [792.00, 1224.00]\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/* jslint node: true */\n\t'use strict';\n\n\tvar pdfKit = __webpack_require__(28);\n\tvar PDFImage = __webpack_require__(17);\n\n\tfunction ImageMeasure(pdfDoc, imageDictionary) {\n\t\tthis.pdfDoc = pdfDoc;\n\t\tthis.imageDictionary = imageDictionary || {};\n\t}\n\n\tImageMeasure.prototype.measureImage = function(src) {\n\t\tvar image, label;\n\t\tvar that = this;\n\n\t\tif (!this.pdfDoc._imageRegistry[src]) {\n\t\t\tlabel = 'I' + (++this.pdfDoc._imageCount);\n\t\t\timage = PDFImage.open(realImageSrc(src), label);\n\t\t\timage.embed(this.pdfDoc);\n\t\t\tthis.pdfDoc._imageRegistry[src] = image;\n\t\t} else {\n\t\t\timage = this.pdfDoc._imageRegistry[src];\n\t\t}\n\n\t\treturn { width: image.width, height: image.height };\n\n\t\tfunction realImageSrc(src) {\n\t\t\tvar img = that.imageDictionary[src];\n\n\t\t\tif (!img) return src;\n\n\t\t\tvar index = img.indexOf('base64,');\n\t\t\tif (index < 0) {\n\t\t\t\tthrow 'invalid image format, images dictionary should contain dataURL entries';\n\t\t\t}\n\n\t\t\treturn new Buffer(img.substring(index + 7), 'base64');\n\t\t}\n\t};\n\n\tmodule.exports = ImageMeasure;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\n\tfunction groupDecorations(line) {\n\t\tvar groups = [], curGroup = null;\n\t\tfor(var i = 0, l = line.inlines.length; i < l; i++) {\n\t\t\tvar inline = line.inlines[i];\n\t\t\tvar decoration = inline.decoration;\n\t\t\tif(!decoration) {\n\t\t\t\tcurGroup = null;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar color = inline.decorationColor || inline.color || 'black';\n\t\t\tvar style = inline.decorationStyle || 'solid';\n\t\t\tdecoration = Array.isArray(decoration) ? decoration : [ decoration ];\n\t\t\tfor(var ii = 0, ll = decoration.length; ii < ll; ii++) {\n\t\t\t\tvar deco = decoration[ii];\n\t\t\t\tif(!curGroup || deco !== curGroup.decoration ||\n\t\t\t\t\t\tstyle !== curGroup.decorationStyle || color !== curGroup.decorationColor ||\n\t\t\t\t\t\tdeco === 'lineThrough') {\n\n\t\t\t\t\tcurGroup = {\n\t\t\t\t\t\tline: line,\n\t\t\t\t\t\tdecoration: deco,\n\t\t\t\t\t\tdecorationColor: color,\n\t\t\t\t\t\tdecorationStyle: style,\n\t\t\t\t\t\tinlines: [ inline ]\n\t\t\t\t\t};\n\t\t\t\t\tgroups.push(curGroup);\n\t\t\t\t} else {\n\t\t\t\t\tcurGroup.inlines.push(inline);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn groups;\n\t}\n\n\tfunction drawDecoration(group, x, y, pdfKitDoc) {\n\t\tfunction maxInline() {\n\t\t\tvar max = 0;\n\t\t\tfor (var i = 0, l = group.inlines.length; i < l; i++) {\n\t\t\t\tvar inl = group.inlines[i];\n\t\t\t\tmax = inl.fontSize > max ? i : max;\n\t\t\t}\n\t\t\treturn group.inlines[max];\n\t\t}\n\t\tfunction width() {\n\t\t\tvar sum = 0;\n\t\t\tfor (var i = 0, l = group.inlines.length; i < l; i++) {\n\t\t\t\tsum += group.inlines[i].width;\n\t\t\t}\n\t\t\treturn sum;\n\t\t}\n\t\tvar firstInline = group.inlines[0],\n\t\t\tbiggerInline = maxInline(),\n\t\t\ttotalWidth = width(),\n\t\t\tlineAscent = group.line.getAscenderHeight(),\n\t\t\tascent = biggerInline.font.ascender / 1000 * biggerInline.fontSize,\n\t\t\theight = biggerInline.height,\n\t\t\tdescent = height - ascent;\n\n\t\tvar lw = 0.5 + Math.floor(Math.max(biggerInline.fontSize - 8, 0) / 2) * 0.12;\n\n\t\tswitch (group.decoration) {\n\t\t\tcase 'underline':\n\t\t\t\ty += lineAscent + descent * 0.45;\n\t\t\t\tbreak;\n\t\t\tcase 'overline':\n\t\t\t\ty += lineAscent - (ascent * 0.85);\n\t\t\t\tbreak;\n\t\t\tcase 'lineThrough':\n\t\t\t\ty += lineAscent - (ascent * 0.25);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow 'Unkown decoration : ' + group.decoration;\n\t\t}\n\t\tpdfKitDoc.save();\n\n\t\tif(group.decorationStyle === 'double') {\n\t\t\tvar gap = Math.max(0.5, lw*2);\n\t\t\tpdfKitDoc\t.fillColor(group.decorationColor)\n\t\t\t\t\t\t.rect(x + firstInline.x, y-lw/2, totalWidth, lw/2).fill()\n\t\t\t\t\t\t.rect(x + firstInline.x, y+gap-lw/2, totalWidth, lw/2).fill();\n\t\t} else if(group.decorationStyle === 'dashed') {\n\t\t\tvar nbDashes = Math.ceil(totalWidth / (3.96+2.84));\n\t\t\tvar rdx = x + firstInline.x;\n\t\t\tpdfKitDoc.rect(rdx, y, totalWidth, lw).clip();\n\t\t\tpdfKitDoc.fillColor(group.decorationColor);\n\t\t\tfor (var i = 0; i < nbDashes; i++) {\n\t\t\t\tpdfKitDoc.rect(rdx, y-lw/2, 3.96, lw).fill();\n\t\t\t\trdx += 3.96 + 2.84;\n\t\t\t}\n\t\t} else if(group.decorationStyle === 'dotted') {\n\t\t\tvar nbDots = Math.ceil(totalWidth / (lw*3));\n\t\t\tvar rx = x + firstInline.x;\n\t\t\tpdfKitDoc.rect(rx, y, totalWidth, lw).clip();\n\t\t\tpdfKitDoc.fillColor(group.decorationColor);\n\t\t\tfor (var ii = 0; ii < nbDots; ii++) {\n\t\t\t\tpdfKitDoc.rect(rx, y-lw/2, lw, lw).fill();\n\t\t\t\trx += (lw*3);\n\t\t\t}\n\t\t} else if(group.decorationStyle === 'wavy') {\n\t\t\tvar sh = 0.7, sv = 1;\n\t\t\tvar nbWaves = Math.ceil(totalWidth / (sh*2))+1;\n\t\t\tvar rwx = x + firstInline.x - 1;\n\t\t\tpdfKitDoc.rect(x + firstInline.x, y-sv, totalWidth, y+sv).clip();\n\t\t\tpdfKitDoc.lineWidth(0.24);\n\t\t\tpdfKitDoc.moveTo(rwx, y);\n\t\t\tfor(var iii = 0; iii < nbWaves; iii++) {\n\t\t\t\tpdfKitDoc   .bezierCurveTo(rwx+sh, y-sv, rwx+sh*2, y-sv, rwx+sh*3, y)\n\t\t\t\t\t\t\t.bezierCurveTo(rwx+sh*4, y+sv, rwx+sh*5, y+sv, rwx+sh*6, y);\n\t\t\t\t\trwx += sh*6;\n\t\t\t\t}\n\t\t\tpdfKitDoc.stroke(group.decorationColor);\n\n\t\t} else {\n\t\t\tpdfKitDoc\t.fillColor(group.decorationColor)\n\t\t\t\t\t\t.rect(x + firstInline.x, y-lw/2, totalWidth, lw)\n\t\t\t\t\t\t.fill();\n\t\t}\n\t\tpdfKitDoc.restore();\n\t}\n\n\tfunction drawDecorations(line, x, y, pdfKitDoc) {\n\t\tvar groups = groupDecorations(line);\n\t\tfor (var i = 0, l = groups.length; i < l; i++) {\n\t\t\tdrawDecoration(groups[i], x, y, pdfKitDoc);\n\t\t}\n\t}\n\n\tfunction drawBackground(line, x, y, pdfKitDoc) {\n\t\tvar height = line.getHeight();\n\t\tfor(var i = 0, l = line.inlines.length; i < l; i++) {\n\t\t\tvar inline = line.inlines[i];\n\t\t\t\tif(inline.background) {\n\t\t\t\t\tpdfKitDoc\t.fillColor(inline.background)\n\t\t\t\t\t\t\t\t.rect(x + inline.x, y, inline.width, height)\n\t\t\t\t\t\t\t\t.fill();\n\t\t\t\t}\n\t\t}\n\t}\n\n\tmodule.exports = {\n\t\tdrawBackground: drawBackground,\n\t\tdrawDecorations: drawDecorations\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, __dirname) {/* jslint node: true */\n\t'use strict';\n\n\t// var b64 = require('./base64.js').base64DecToArr;\n\tfunction VirtualFileSystem() {\n\t\tthis.fileSystem = {};\n\t\tthis.baseSystem = {};\n\t}\n\n\tVirtualFileSystem.prototype.readFileSync = function(filename) {\n\t\tfilename = fixFilename(filename);\n\n\t\tvar base64content = this.baseSystem[filename];\n\t\tif (base64content) {\n\t\t\treturn new Buffer(base64content, 'base64');\n\t\t}\n\n\t\treturn this.fileSystem[filename];\n\t};\n\n\tVirtualFileSystem.prototype.writeFileSync = function(filename, content) {\n\t\tthis.fileSystem[fixFilename(filename)] = content;\n\t};\n\n\tVirtualFileSystem.prototype.bindFS = function(data) {\n\t\tthis.baseSystem = data;\n\t};\n\n\n\tfunction fixFilename(filename) {\n\t\tif (filename.indexOf(__dirname) === 0) {\n\t\t\tfilename = filename.substring(__dirname.length);\n\t\t}\n\n\t\tif (filename.indexOf('/') === 0) {\n\t\t\tfilename = filename.substring(1);\n\t\t}\n\n\t\treturn filename;\n\t}\n\n\tmodule.exports = new VirtualFileSystem();\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer, \"/\"))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.1.0';\n\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      REARG_FLAG = 128,\n\t      ARY_FLAG = 256;\n\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 0,\n\t      LAZY_MAP_FLAG = 1,\n\t      LAZY_WHILE_FLAG = 2;\n\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n\t  /**\n\t   * Used to match ES template delimiters.\n\t   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components)\n\t   * for more details.\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\n\t  /** Used to detect named functions. */\n\t  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHexPrefix = /^0[xX]/;\n\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\n\t  /**\n\t   * Used to match `RegExp` special characters.\n\t   * See this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\n\t   * for more details.\n\t   */\n\t  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n\t  /** Used to detect functions containing a `this` reference. */\n\t  var reThis = /\\bthis\\b/;\n\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n\t    return RegExp(upper + '{2,}(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\n\t  /** Used to detect and test for whitespace. */\n\t  var whitespace = (\n\t    // Basic whitespace characters.\n\t    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n\t    // Line terminators.\n\t    '\\n\\r\\u2028\\u2029' +\n\n\t    // Unicode category \"Zs\" space separators.\n\t    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n\t  );\n\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n\t    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    'window', 'WinRTError'\n\t  ];\n\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\n\t  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n\t  var debounceOptions = {\n\t    'leading': false,\n\t    'maxWait': 0,\n\t    'trailing': false\n\t  };\n\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it is the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = (objectTypes[typeof window] && window !== (this && this.window)) ? window : this;\n\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n\t  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n\t  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n\t  /*--------------------------------------------------------------------------*/\n\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare to `other`.\n\t   * @param {*} other The value to compare to `value`.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsReflexive = value === value,\n\t          othIsReflexive = other === other;\n\n\t      if (value > other || !valIsReflexive || (typeof value == 'undefined' && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if (value < other || !othIsReflexive || (typeof other == 'undefined' && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} [fromIndex=0] The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = (fromIndex || 0) - 1,\n\t        length = array.length;\n\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\n\t  /**\n\t   * The base implementation of `_.sortBy` and `_.sortByAll` which uses `comparer`\n\t   * to define the sort order of `array` and replaces criteria objects with their\n\t   * corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\n\t  /**\n\t   * Converts `value` to a string if it is not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    if (typeof value == 'string') {\n\t      return value;\n\t    }\n\t    return value == null ? '' : (value + '');\n\t  }\n\n\t  /**\n\t   * Used by `_.max` and `_.min` as the default callback for string values.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the code unit of the first character of the string.\n\t   */\n\t  function charAtCallback(string) {\n\t    return string.charCodeAt(0);\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\n\t  /**\n\t   * Used by `_.sortByAll` to compare multiple properties of each element\n\t   * in a collection and stable sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultipleAscending(object, other) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length;\n\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        return result;\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled\n\t   * string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   * If `fromRight` is provided elements of `array` are iterated from right to left.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} [fromIndex] The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? (fromIndex || length) : ((fromIndex || 0) - 1);\n\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return (value && typeof value == 'object') || false;\n\t  }\n\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\n\t  /*--------------------------------------------------------------------------*/\n\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'add': function(a, b) { return a + b; } });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'sub': function(a, b) { return a - b; } });\n\t   *\n\t   * _.isFunction(_.add);\n\t   * // => true\n\t   * _.isFunction(_.sub);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.add);\n\t   * // => false\n\t   * lodash.isFunction(lodash.sub);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype;\n\n\t    /** Used to detect DOM support. */\n\t    var document = (document = context.window) && document.document;\n\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\n\t    /** Used to the length of n-tuples for `_.unzip`. */\n\t    var getLength = baseProperty('length');\n\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\n\t    /**\n\t     * Used to resolve the `toStringTag` of values.\n\t     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n\t     * for more details.\n\t     */\n\t    var objToString = objectProto.toString;\n\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = context._;\n\n\t    /** Used to detect if a method is native. */\n\t    var reNative = RegExp('^' +\n\t      escapeRegExp(objToString)\n\t      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\n\t    /** Native method references. */\n\t    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n\t        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n\t        ceil = Math.ceil,\n\t        clearTimeout = context.clearTimeout,\n\t        floor = Math.floor,\n\t        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n\t        push = arrayProto.push,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = isNative(Set = context.Set) && Set,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n\t        unshift = arrayProto.unshift,\n\t        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n\t    /** Used to clone array buffers. */\n\t    var Float64Array = (function() {\n\t      // Safari 5 errors when using an array buffer to initialize a typed array\n\t      // where the array buffer's `byteLength` is not a multiple of the typed\n\t      // array's `BYTES_PER_ELEMENT`.\n\t      try {\n\t        var func = isNative(func = context.Float64Array) && func,\n\t            result = new func(new ArrayBuffer(10), 0, 1) && func;\n\t      } catch(e) {}\n\t      return result;\n\t    }());\n\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n\t        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n\t        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n\t        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n\t    /** Used as the size, in bytes, of each `Float64Array` element. */\n\t    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n\t    /**\n\t     * Used as the maximum length of an array-like value.\n\t     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n\t     * for more details.\n\t     */\n\t    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable intuitive chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that return a boolean or single value will\n\t     * automatically end the chain returning the unwrapped value. Explicit chaining\n\t     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n\t     * that is, execution is deferred until `_#value` is implicitly or explicitly\n\t     * called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization that merges iteratees to avoid creating intermediate\n\t     * arrays and reduce the number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers also have the following `Array` methods:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n\t     * and `unshift`\n\t     *\n\t     * The wrapper functions that support shortcut fusion are:\n\t     * `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `first`,\n\t     * `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`, `slice`,\n\t     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `where`\n\t     *\n\t     * The chainable wrapper functions are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `compact`, `concat`, `constant`, `countBy`,\n\t     * `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n\t     * `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `flatten`,\n\t     * `flattenDeep`, `flow`, `flowRight`, `forEach`, `forEachRight`, `forIn`,\n\t     * `forInRight`, `forOwn`, `forOwnRight`, `functions`, `groupBy`, `indexBy`,\n\t     * `initial`, `intersection`, `invert`, `invoke`, `keys`, `keysIn`, `map`,\n\t     * `mapValues`, `matches`, `memoize`, `merge`, `mixin`, `negate`, `noop`,\n\t     * `omit`, `once`, `pairs`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pluck`, `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`,\n\t     * `rearg`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n\t     * `sortBy`, `sortByAll`, `splice`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`,\n\t     * `where`, `without`, `wrap`, `xor`, `zip`, and `zipObject`\n\t     *\n\t     * The wrapper functions that are **not** chainable by default are:\n\t     * `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n\t     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n\t     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n\t     * `identity`, `includes`, `indexOf`, `isArguments`, `isArray`, `isBoolean`,\n\t     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`,\n\t     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n\t     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n\t     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n\t     * `noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n\t     * `random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n\t     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n\t     * `startCase`, `startsWith`, `template`, `trim`, `trimLeft`, `trimRight`,\n\t     * `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper function `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns a `lodash` instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(sum, n) { return sum + n; });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) { return n * n; });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return new LodashWrapper(value.__wrapped__, value.__chain__, arrayCopy(value.__actions__));\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__wrapped__ = value;\n\t    }\n\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\n\t    (function(x) {\n\n\t      /**\n\t       * Detect if functions can be decompiled by `Function#toString`\n\t       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n\t       * the PlayStation 3; forced `false` for Windows 8 apps).\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n\t      /**\n\t       * Detect if `Function#name` is supported (all but IE).\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      support.funcNames = typeof Function.name == 'string';\n\n\t      /**\n\t       * Detect if the DOM is supported.\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      try {\n\t        support.dom = document.createDocumentFragment().nodeType === 11;\n\t      } catch(e) {\n\t        support.dom = false;\n\t      }\n\n\t      /**\n\t       * Detect if `arguments` object indexes are non-enumerable.\n\t       *\n\t       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n\t       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n\t       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n\t       * checks for indexes that exceed their function's formal parameters with\n\t       * associated values of `0`.\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      try {\n\t        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n\t      } catch(e) {\n\t        support.nonEnumArgs = true;\n\t      }\n\t    }(0, 0));\n\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.actions = null;\n\t      this.dir = 1;\n\t      this.dropCount = 0;\n\t      this.filtered = false;\n\t      this.iteratees = null;\n\t      this.takeCount = POSITIVE_INFINITY;\n\t      this.views = null;\n\t      this.wrapped = value;\n\t    }\n\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var actions = this.actions,\n\t          iteratees = this.iteratees,\n\t          views = this.views,\n\t          result = new LazyWrapper(this.wrapped);\n\n\t      result.actions = actions ? arrayCopy(actions) : null;\n\t      result.dir = this.dir;\n\t      result.dropCount = this.dropCount;\n\t      result.filtered = this.filtered;\n\t      result.iteratees = iteratees ? arrayCopy(iteratees) : null;\n\t      result.takeCount = this.takeCount;\n\t      result.views = views ? arrayCopy(views) : null;\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.filtered) {\n\t        var result = new LazyWrapper(this);\n\t        result.dir = -1;\n\t        result.filtered = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.dir *= -1;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.wrapped.value();\n\t      if (!isArray(array)) {\n\t        return baseWrapperValue(array, this.actions);\n\t      }\n\t      var dir = this.dir,\n\t          isRight = dir < 0,\n\t          view = getView(0, array.length, this.views),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          dropCount = this.dropCount,\n\t          takeCount = nativeMin(length, this.takeCount - dropCount),\n\t          index = isRight ? end : start - 1,\n\t          iteratees = this.iteratees,\n\t          iterLength = iteratees ? iteratees.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\n\t        var iterIndex = -1,\n\t            value = array[index];\n\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              computed = iteratee(value, index, array),\n\t              type = data.type;\n\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        if (dropCount) {\n\t          dropCount--;\n\t        } else {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\n\t    /**\n\t     * Adds `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n\t      return result ? 0 : -1;\n\t    }\n\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.max` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     */\n\t    function arrayMax(array) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = NEGATIVE_INFINITY;\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.min` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     */\n\t    function arrayMin(array) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = POSITIVE_INFINITY;\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return typeof objectValue == 'undefined' ? sourceValue : objectValue;\n\t    }\n\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This method is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (typeof objectValue == 'undefined' || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize assigning values.\n\t     * @returns {Object} Returns the destination object.\n\t     */\n\t    function baseAssign(object, source, customizer) {\n\t      var props = keys(source);\n\t      if (!customizer) {\n\t        return baseCopy(source, object, props);\n\t      }\n\t      var index = -1,\n\t          length = props.length\n\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\n\t        if ((result === result ? result !== value : value === value) ||\n\t            (typeof value == 'undefined' && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.at` without support for strings and individual\n\t     * key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} [props] The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          length = collection.length,\n\t          isArr = isLength(length),\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          key = parseFloat(key);\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Copies the properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Array} props The property names to copy.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, object, props) {\n\t      if (!props) {\n\t        props = object;\n\t        object = {};\n\t      }\n\t      var index = -1,\n\t          length = props.length;\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.bindAll` without support for individual\n\t     * method name arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {string[]} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseBindAll(object, methodNames) {\n\t      var index = -1,\n\t          length = methodNames.length;\n\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return (typeof thisArg != 'undefined' && isBindable(func))\n\t          ? bindCallback(func, thisArg, argCount)\n\t          : func;\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      // Handle \"_.property\" and \"_.matches\" style callback shorthands.\n\t      return type == 'object'\n\t        ? baseMatches(func)\n\t        : baseProperty(func + '');\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (typeof result != 'undefined') {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseCopy(value, result, keys(value));\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function Object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          Object.prototype = prototype;\n\t          var result = new Object;\n\t          Object.prototype = null;\n\t        }\n\t        return result || context.Object();\n\t      };\n\t    }());\n\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The `arguments` object to slice and provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args, fromIndex) {\n\t      if (!isFunction(func)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, baseSlice(args, fromIndex)); }, wait);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = isCommon && values.length >= 200 && createCache(values),\n\t          valuesLength = values.length;\n\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    function baseEach(collection, iteratee) {\n\t      var length = collection ? collection.length : 0;\n\t      if (!isLength(length)) {\n\t        return baseForOwn(collection, iteratee);\n\t      }\n\t      var index = -1,\n\t          iterable = toObject(collection);\n\n\t      while (++index < length) {\n\t        if (iteratee(iterable[index], index, iterable) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return collection;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    function baseEachRight(collection, iteratee) {\n\t      var length = collection ? collection.length : 0;\n\t      if (!isLength(length)) {\n\t        return baseForOwnRight(collection, iteratee);\n\t      }\n\t      var iterable = toObject(collection);\n\t      while (length--) {\n\t        if (iteratee(iterable[length], length, iterable) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return collection;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays and `arguments` objects.\n\t     * @param {number} [fromIndex=0] The index to start from.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, fromIndex) {\n\t      var index = (fromIndex || 0) - 1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\n\t        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            value = baseFlatten(value, isDeep, isStrict);\n\t          }\n\t          var valIndex = -1,\n\t              valLength = value.length;\n\n\t          result.length += valLength;\n\t          while (++valIndex < valLength) {\n\t            result[++resIndex] = value[valIndex];\n\t          }\n\t        } else if (!isStrict) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iterator functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseFor(object, iteratee, keysFunc) {\n\t      var index = -1,\n\t          iterable = toObject(object),\n\t          props = keysFunc(object),\n\t          length = props.length;\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (iteratee(iterable[key], key, iterable) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForRight(object, iteratee, keysFunc) {\n\t      var iterable = toObject(object),\n\t          props = keysFunc(object),\n\t          length = props.length;\n\n\t      while (length--) {\n\t        var key = props[length];\n\t        if (iteratee(iterable[key], key, iterable) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.invoke` which requires additional arguments\n\t     * to be provided as an array of arguments rather than individually.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|string} methodName The name of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {Array} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     */\n\t    function baseInvoke(collection, methodName, args) {\n\t      var index = -1,\n\t          isFunc = typeof methodName == 'function',\n\t          length = collection ? collection.length : 0,\n\t          result = isLength(length) ? Array(length) : [];\n\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? methodName : (value != null && value[methodName]);\n\t        result[++index] = func ? func.apply(value, args) : undefined;\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isWhere] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isWhere, stackA, stackB) {\n\t      // Exit early for identical values.\n\t      if (value === other) {\n\t        // Treat `+0` vs. `-0` as not equal.\n\t        return value !== 0 || (1 / value == 1 / other);\n\t      }\n\t      var valType = typeof value,\n\t          othType = typeof other;\n\n\t      // Exit early for unlike primitive values.\n\t      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n\t          value == null || other == null) {\n\t        // Return `false` unless both values are `NaN`.\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isWhere, stackA, stackB);\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isWhere] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t          othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n\t      if (valWrapped || othWrapped) {\n\t        return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isWhere, stackA, stackB);\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isWhere, stackA, stackB);\n\n\t      stackA.pop();\n\t      stackB.pop();\n\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to inspect.\n\t     * @param {Array} props The source property names to match.\n\t     * @param {Array} values The source values to match.\n\t     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      var index = -1,\n\t          noCustomizer = !customizer;\n\n\t      while (++index < length) {\n\t        if ((noCustomizer && strictCompareFlags[index])\n\t              ? values[index] !== object[props[index]]\n\t              : !hasOwnProperty.call(object, props[index])\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      index = -1;\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (noCustomizer && strictCompareFlags[index]) {\n\t          var result = hasOwnProperty.call(object, key);\n\t        } else {\n\t          var objValue = object[key],\n\t              srcValue = values[index];\n\n\t          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (typeof result == 'undefined') {\n\t            result = baseIsEqual(srcValue, objValue, customizer, true);\n\t          }\n\t        }\n\t        if (!result) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var result = [];\n\t      baseEach(collection, function(value, key, collection) {\n\t        result.push(iteratee(value, key, collection));\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.matches` which supports specifying whether\n\t     * `source` should be cloned.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\n\t      if (length == 1) {\n\t        var key = props[0],\n\t            value = source[key];\n\n\t        if (isStrictComparable(value)) {\n\t          return function(object) {\n\t            return object != null && value === object[key] && hasOwnProperty.call(object, key);\n\t          };\n\t        }\n\t      }\n\t      var values = Array(length),\n\t          strictCompareFlags = Array(length);\n\n\t      while (length--) {\n\t        value = source[props[length]];\n\t        values[length] = value;\n\t        strictCompareFlags[length] = isStrictComparable(value);\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, props, values, strictCompareFlags);\n\t      };\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns the destination object.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n\n\t      (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        var value = object[key],\n\t            result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t            isCommon = typeof result == 'undefined';\n\n\t        if (isCommon) {\n\t          result = srcValue;\n\t        }\n\t        if ((isSrcArr || typeof result != 'undefined') &&\n\t            (isCommon || (result === result ? result !== value : value === value))) {\n\t          object[key] = result;\n\t        }\n\t      });\n\t      return object;\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = typeof result == 'undefined';\n\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (value ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? result !== value : value === value) {\n\t        object[key] = result;\n\t      }\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.property` which does not coerce `key` to a string.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = indexes.length,\n\t          result = baseAt(array, indexes);\n\n\t      indexes.sort(baseCompareAscending);\n\t      while (length--) {\n\t        var index = parseFloat(indexes[length]);\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + floor(nativeRandom() * (max - min + 1));\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands or `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection)\n\t      });\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end - start) >>> 0;\n\t      start >>>= 0;\n\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * or `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= 200,\n\t          seen = isLarge && createCache(),\n\t          result = [];\n\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * returned by `keysFunc`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\n\t      while (++index < length) {\n\t        var args = [result],\n\t            action = actions[index];\n\n\t        push.apply(args, action.args);\n\t        result = action.func.apply(action.thisArg, args);\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest, instead\n\t     *  of the lowest, index at which a value should be inserted into `array`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\n\t          if (retHighest ? (computed <= value) : (computed < value)) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest, instead\n\t     *  of the lowest, index at which a value should be inserted into `array`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsUndef = typeof value == 'undefined';\n\n\t      while (low < high) {\n\t        var mid = floor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isReflexive = computed === computed;\n\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || typeof computed != 'undefined');\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (typeof thisArg == 'undefined') {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      return bufferSlice.call(buffer, 0);\n\t    }\n\t    if (!bufferSlice) {\n\t      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n\t      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n\t        var byteLength = buffer.byteLength,\n\t            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n\t            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n\t            result = new ArrayBuffer(byteLength);\n\n\t        if (floatLength) {\n\t          var view = new Float64Array(result, 0, floatLength);\n\t          view.set(new Float64Array(buffer, 0, floatLength));\n\t        }\n\t        if (byteLength != offset) {\n\t          view = new Uint8Array(result, offset);\n\t          view.set(new Uint8Array(buffer, offset));\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(argsLength + leftLength);\n\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var pad = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[pad + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[pad + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates a function that aggregates a collection, creating an accumulator\n\t     * object composed from the results of running each element in the collection\n\t     * through an iteratee. The `setter` sets the keys and values of the accumulator\n\t     * object. If `initializer` is provided initializes the accumulator object.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that assigns properties of source object(s) to a given\n\t     * destination object.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return function() {\n\t        var length = arguments.length,\n\t            object = arguments[0];\n\n\t        if (length < 2 || object == null) {\n\t          return object;\n\t        }\n\t        if (length > 3 && isIterateeCall(arguments[1], arguments[2], arguments[3])) {\n\t          length = 2;\n\t        }\n\t        // Juggle arguments.\n\t        if (length > 3 && typeof arguments[length - 2] == 'function') {\n\t          var customizer = bindCallback(arguments[--length - 1], arguments[length--], 5);\n\t        } else if (length > 2 && typeof arguments[length - 1] == 'function') {\n\t          customizer = arguments[--length];\n\t        }\n\t        var index = 0;\n\t        while (++index < length) {\n\t          var source = arguments[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\n\t      function wrapper() {\n\t        return (this instanceof wrapper ? Ctor : func).apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n\t      return new SetCache(values);\n\t    };\n\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, arguments);\n\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that gets the extremum value of a collection.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to get the extremum value from an array.\n\t     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n\t     *  extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(arrayFunc, isMin) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = null;\n\t        }\n\t        var func = getCallback(),\n\t            noIteratee = iteratee == null;\n\n\t        if (!(func === baseCallback && noIteratee)) {\n\t          noIteratee = false;\n\t          iteratee = func(iteratee, thisArg, 3);\n\t        }\n\t        if (noIteratee) {\n\t          var isArr = isArray(collection);\n\t          if (!isArr && isString(collection)) {\n\t            iteratee = charAtCallback;\n\t          } else {\n\t            return arrayFunc(isArr ? collection : toIterable(collection));\n\t          }\n\t        }\n\t        return extremumBy(collection, iteratee, isMin);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n\t      var Ctor = !isBindKey && createCtorWrapper(func),\n\t          key = func;\n\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : null,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : null,\n\t                newHoldersRight = isCurry ? null : argsHolders,\n\t                newPartials = isCurry ? args : null,\n\t                newPartialsRight = isCurry ? null : args;\n\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var result = createHybridWrapper(func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity);\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this;\n\t        if (isBindKey) {\n\t          func = thisBinding[key];\n\t        }\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        return (this instanceof wrapper ? (Ctor || createCtorWrapper(func)) : func).apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\n\t    /**\n\t     * Creates the pad required for `string` based on the given padding length.\n\t     * The `chars` string may be truncated if the number of padding characters\n\t     * exceeds the padding length.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPad(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(argsLength + leftLength);\n\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return (this instanceof wrapper ? Ctor : func).apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && !isFunction(func)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = null;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\n\t        partials = holders = null;\n\t      }\n\t      var data = !isBindKey && getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n\t      if (data && data !== true) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(null, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(null, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isWhere] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isWhere, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length,\n\t          result = true;\n\n\t      if (arrLength != othLength && !(isWhere && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (result && ++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\n\t        result = undefined;\n\t        if (customizer) {\n\t          result = isWhere\n\t            ? customizer(othValue, arrValue, index)\n\t            : customizer(arrValue, othValue, index);\n\t        }\n\t        if (typeof result == 'undefined') {\n\t          // Recursively compare arrays (susceptible to call stack limits).\n\t          if (isWhere) {\n\t            var othIndex = othLength;\n\t            while (othIndex--) {\n\t              othValue = other[othIndex];\n\t              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n\t              if (result) {\n\t                break;\n\t              }\n\t            }\n\t          } else {\n\t            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n\t          }\n\t        }\n\t      }\n\t      return !!result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} value The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            // But, treat `-0` vs. `+0` as not equal.\n\t            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isWhere] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\n\t      if (objLength != othLength && !isWhere) {\n\t        return false;\n\t      }\n\t      var hasCtor,\n\t          index = -1;\n\n\t      while (++index < objLength) {\n\t        var key = objProps[index],\n\t            result = hasOwnProperty.call(other, key);\n\n\t        if (result) {\n\t          var objValue = object[key],\n\t              othValue = other[key];\n\n\t          result = undefined;\n\t          if (customizer) {\n\t            result = isWhere\n\t              ? customizer(othValue, objValue, key)\n\t              : customizer(objValue, othValue, key);\n\t          }\n\t          if (typeof result == 'undefined') {\n\t            // Recursively compare objects (susceptible to call stack limits).\n\t            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isWhere, stackA, stackB);\n\t          }\n\t        }\n\t        if (!result) {\n\t          return false;\n\t        }\n\t        hasCtor || (hasCtor = key == 'constructor');\n\t      }\n\t      if (!hasCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor && ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments; (value, index, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n\t     *  maximum, extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function extremumBy(collection, iteratee, isMin) {\n\t      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n\t          computed = exValue,\n\t          result = computed;\n\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = iteratee(value, index, collection);\n\t        if ((isMin ? current < computed : current > computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} [transforms] The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms ? transforms.length : 0;\n\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Checks if `func` is eligible for `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is eligible, else `false`.\n\t     */\n\t    function isBindable(func) {\n\t      var support = lodash.support,\n\t          result = !(support.funcNames ? func.name : support.funcDecomp);\n\n\t      if (!result) {\n\t        var source = fnToString.call(func);\n\t        if (!support.funcNames) {\n\t          result = !reFuncName.test(source);\n\t        }\n\t        if (!result) {\n\t          // Check if `func` references the `this` keyword and store the result.\n\t          result = reThis.test(source) || isNative(func);\n\t          baseSetData(func, result);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = +value;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number') {\n\t        var length = object.length,\n\t            prereq = isLength(length) && isIndex(index, length);\n\t      } else {\n\t        prereq = type == 'string' && index in object;\n\t      }\n\t      return prereq && object[index] === value;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on ES `ToLength`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n\t    }\n\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask;\n\n\t      var arityFlags = ARY_FLAG | REARG_FLAG,\n\t          bindFlags = BIND_FLAG | BIND_KEY_FLAG,\n\t          comboFlags = arityFlags | bindFlags | CURRY_BOUND_FLAG | CURRY_RIGHT_FLAG;\n\n\t      var isAry = bitmask & ARY_FLAG && !(srcBitmask & ARY_FLAG),\n\t          isRearg = bitmask & REARG_FLAG && !(srcBitmask & REARG_FLAG),\n\t          argPos = (isRearg ? data : source)[7],\n\t          ary = (isAry ? data : source)[8];\n\n\t      var isCommon = !(bitmask >= REARG_FLAG && srcBitmask > bindFlags) &&\n\t        !(bitmask > bindFlags && srcBitmask >= REARG_FLAG);\n\n\t      var isCombo = (newBitmask >= arityFlags && newBitmask <= comboFlags) &&\n\t        (bitmask < REARG_FLAG || ((isRearg || isAry) && argPos.length <= ary));\n\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\n\t      return data;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.pick` that picks `object` properties specified\n\t     * by the `props` array.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.pick` that picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\n\t    /**\n\t     * A fallback implementation of `_.isPlainObject` which checks if `value`\n\t     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n\t     * of `null`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     */\n\t    function shimIsPlainObject(value) {\n\t      var Ctor,\n\t          support = lodash.support;\n\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n\t          (!hasOwnProperty.call(value, 'constructor') &&\n\t            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n\t    }\n\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length,\n\t          support = lodash.support;\n\n\t      var allowIndexes = length && isLength(length) &&\n\t        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n\t      var index = -1,\n\t          result = [];\n\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Converts `value` to an array-like object if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isLength(value.length)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\n\t    /**\n\t     * Converts `value` to an object if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {numer} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(+size || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(ceil(length / size));\n\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array excluding all values of the provided arrays using\n\t     * `SameValueZero` for equality comparisons.\n\t     *\n\t     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n\t     * e.g. `===`, except that `NaN` matches `NaN`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [5, 2, 10]);\n\t     * // => [1, 3]\n\t     */\n\t    function difference() {\n\t      var index = -1,\n\t          length = arguments.length;\n\n\t      while (++index < length) {\n\t        var value = arguments[index];\n\t        if (isArray(value) || isArguments(value)) {\n\t          break;\n\t        }\n\t      }\n\t      return baseDifference(value, baseFlatten(arguments, false, true, ++index));\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per element.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) { return n > 1; });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'status': 'busy', 'active': false },\n\t     *   { 'user': 'fred',    'status': 'busy', 'active': true },\n\t     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'status': 'away' }), 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (length-- && predicate(array[length], length, array)) {}\n\t      return baseSlice(array, 0, length + 1);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per element.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) { return n < 3; });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'status': 'busy', 'active': true },\n\t     *   { 'user': 'fred',    'status': 'busy', 'active': false },\n\t     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'status': 'busy' }), 'user');\n\t     * // => ['pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var index = -1;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length && predicate(array[index], index, array)) {}\n\t      return baseSlice(array, index);\n\t    }\n\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for, instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) { return chr.age < 40; });\n\t     * // => 0\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.findIndex(users, { 'age': 1 });\n\t     * // => 2\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 1\n\t     */\n\t    function findIndex(array, predicate, thisArg) {\n\t      var index = -1,\n\t          length = array ? array.length : 0;\n\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) { return chr.age < 40; });\n\t     * // => 2\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.findLastIndex(users, { 'age': 40 });\n\t     * // => 1\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (length--) {\n\t        if (predicate(array[length], length, array)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2], [3, [[4]]]]);\n\t     * // => [1, 2, 3, [[4]]];\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2], [3, [[4]]]], true);\n\t     * // => [1, 2, 3, 4];\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2], [3, [[4]]]]);\n\t     * // => [1, 2, 3, 4];\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n\t     * it is used as the offset from the end of `array`. If `array` is sorted\n\t     * providing `true` for `fromIndex` performs a faster binary search.\n\t     *\n\t     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n\t     * e.g. `===`, except that `NaN` matches `NaN`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n\t     * // => 4\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([4, 4, 5, 5, 6, 6], 5, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value),\n\t            other = array[index];\n\n\t        return (value === value ? value === other : other !== other) ? index : -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex);\n\t    }\n\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\n\t    /**\n\t     * Creates an array of unique values in all provided arrays using `SameValueZero`\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n\t     * e.g. `===`, except that `NaN` matches `NaN`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n\t     * // => [1, 2]\n\t     */\n\t    function intersection() {\n\t      var args = [],\n\t          argsIndex = -1,\n\t          argsLength = arguments.length,\n\t          caches = [],\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf;\n\n\t      while (++argsIndex < argsLength) {\n\t        var value = arguments[argsIndex];\n\t        if (isArray(value) || isArguments(value)) {\n\t          args.push(value);\n\t          caches.push(isCommon && value.length >= 120 && createCache(argsIndex && value));\n\t        }\n\t      }\n\t      argsLength = args.length;\n\t      var array = args[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          result = [],\n\t          seen = caches[0];\n\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value)) < 0) {\n\t          argsIndex = argsLength;\n\t          while (--argsIndex) {\n\t            var cache = caches[argsIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n\t     * // => 4\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([4, 4, 5, 5, 6, 6], 5, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        return (value === value ? value === other : other !== other) ? index : -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\n\t    /**\n\t     * Removes all provided values from `array` using `SameValueZero` for equality\n\t     * comparisons.\n\t     *\n\t     * **Notes:**\n\t     *  - Unlike `_.without`, this method mutates `array`.\n\t     *  - `SameValueZero` comparisons are like strict equality comparisons, e.g. `===`,\n\t     *    except that `NaN` matches `NaN`. See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     *    for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var array = arguments[0];\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = arguments.length;\n\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = arguments[index];\n\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    function pullAt(array) {\n\t      return basePullAt(array || [], baseFlatten(arguments, false, false, 1));\n\t    }\n\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments; (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) { return n % 2 == 0; });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          result = [];\n\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          splice.call(array, index--, 1);\n\t          length--;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This function is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5, 6, 6], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value, iteratee, thisArg) {\n\t      var func = getCallback(iteratee);\n\t      return (func === baseCallback && iteratee == null)\n\t        ? binaryIndex(array, value)\n\t        : binaryIndexBy(array, value, func(iteratee, thisArg, 1));\n\t    }\n\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5, 6, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value, iteratee, thisArg) {\n\t      var func = getCallback(iteratee);\n\t      return (func === baseCallback && iteratee == null)\n\t        ? binaryIndex(array, value, true)\n\t        : binaryIndexBy(array, value, func(iteratee, thisArg, 1), true);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments; (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per element.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) { return n > 1; });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'status': 'busy', 'active': false },\n\t     *   { 'user': 'fred',    'status': 'busy', 'active': true },\n\t     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'status': 'away' }), 'user');\n\t     * // => ['pebbles']\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (length-- && predicate(array[length], length, array)) {}\n\t      return baseSlice(array, length + 1);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments; (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per element.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) { return n < 3; });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'status': 'busy', 'active': true },\n\t     *   { 'user': 'fred',    'status': 'busy', 'active': false },\n\t     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'status': 'busy' }), 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var index = -1;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length && predicate(array[index], index, array)) {}\n\t      return baseSlice(array, 0, index);\n\t    }\n\n\t    /**\n\t     * Creates an array of unique values, in order, of the provided arrays using\n\t     * `SameValueZero` for equality comparisons.\n\t     *\n\t     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n\t     * e.g. `===`, except that `NaN` matches `NaN`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n\t     * // => [1, 2, 3, 5, 4]\n\t     */\n\t    function union() {\n\t      return baseUniq(baseFlatten(arguments, false, true));\n\t    }\n\n\t    /**\n\t     * Creates a duplicate-value-free version of an array using `SameValueZero`\n\t     * for equality comparisons. Providing `true` for `isSorted` performs a faster\n\t     * search algorithm for sorted arrays. If an iteratee function is provided it\n\t     * is invoked for each value in the array to generate the criterion by which\n\t     * uniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments; (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n\t     * e.g. `===`, except that `NaN` matches `NaN`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     *  If a property name or object is provided it is used to create a \"_.property\"\n\t     *  or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([1, 2, 1]);\n\t     * // => [1, 2]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) { return this.floor(n); }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      // Juggle arguments.\n\t      if (typeof isSorted != 'boolean' && isSorted != null) {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var func = getCallback();\n\t      if (!(func === baseCallback && iteratee == null)) {\n\t        iteratee = func(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-`_.zip`\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      var index = -1,\n\t          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array excluding all provided values using `SameValueZero` for\n\t     * equality comparisons.\n\t     *\n\t     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n\t     * e.g. `===`, except that `NaN` matches `NaN`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n\t     * // => [2, 3, 4]\n\t     */\n\t    function without(array) {\n\t      return baseDifference(array, baseSlice(arguments, 1));\n\t    }\n\n\t    /**\n\t     * Creates an array that is the symmetric difference of the provided arrays.\n\t     * See [Wikipedia](https://en.wikipedia.org/wiki/Symmetric_difference) for\n\t     * more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n\t     * // => [3, 5, 4]\n\t     *\n\t     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n\t     * // => [1, 4, 5]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArray(array) || isArguments(array)) {\n\t          var result = result\n\t            ? baseDifference(result, array).concat(baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    function zip() {\n\t      var length = arguments.length,\n\t          array = Array(length);\n\n\t      while (length--) {\n\t        array[length] = arguments[length];\n\t      }\n\t      return unzip(array);\n\t    }\n\n\t    /**\n\t     * Creates an object composed from arrays of property names and values. Provide\n\t     * either a single two dimensional array, e.g. `[[key1, value1], [key2, value2]]`\n\t     * or two arrays, one of property names and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` object.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) { return chr.user + ' is ' + chr.age; })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) { array.pop(); })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .last()\n\t     *  .thru(function(value) { return [value]; })\n\t     *  .value();\n\t     * // => [3]\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {*} Returns the `lodash` object.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` object.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        if (this.__actions__.length) {\n\t          value = new LazyWrapper(this);\n\t        }\n\t        return new LodashWrapper(value.reverse());\n\t      }\n\t      return this.thru(function(value) {\n\t        return value.reverse();\n\t      });\n\t    }\n\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n\t     * // => ['a', 'c', 'e']\n\t     *\n\t     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n\t     * // => ['fred', 'pebbles']\n\t     */\n\t    function at(collection) {\n\t      var length = collection ? collection.length : 0;\n\t      if (isLength(length)) {\n\t        collection = toIterable(collection);\n\t      }\n\t      return baseAt(collection, baseFlatten(arguments, false, false, 1));\n\t    }\n\n\t    /**\n\t     * Checks if `value` is in `collection` using `SameValueZero` for equality\n\t     * comparisons. If `fromIndex` is negative, it is used as the offset from\n\t     * the end of `collection`.\n\t     *\n\t     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n\t     * e.g. `===`, except that `NaN` matches `NaN`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex) {\n\t      var length = collection ? collection.length : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (!length) {\n\t        return false;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      } else {\n\t        fromIndex = 0;\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n\t        : (getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) { return Math.floor(n); });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments;\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes']);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.every(users, 'age');\n\t     * // => true\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.every(users, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments; (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var evens = _.filter([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n\t     * // => [2, 4]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36 }), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments; (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) { return chr.age < 40; }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.result(_.find(users, { 'age': 1 }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function find(collection, predicate, thisArg) {\n\t      if (isArray(collection)) {\n\t        var index = findIndex(collection, predicate, thisArg);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return baseFind(collection, predicate, baseEach);\n\t    }\n\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) { return n % 2 == 1; });\n\t     * // => 3\n\t     */\n\t    function findLast(collection, predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return baseFind(collection, predicate, baseEachRight);\n\t    }\n\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'status': 'busy' },\n\t     *   { 'user': 'fred',   'age': 40, 'status': 'busy' }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'status': 'busy' }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40 }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n\t     * (value, index|key, collection). Iterator functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a `length` property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).forEach(function(n) { console.log(n); }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(n, key) { console.log(n, key); });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    function forEach(collection, iteratee, thisArg) {\n\t      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n\t        ? arrayEach(collection, iteratee)\n\t        : baseEach(collection, bindCallback(iteratee, thisArg, 3));\n\t    }\n\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).forEachRight(function(n) { console.log(n); }).join(',');\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    function forEachRight(collection, iteratee, thisArg) {\n\t      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n\t        ? arrayEachRight(collection, iteratee)\n\t        : baseEachRight(collection, bindCallback(iteratee, thisArg, 3));\n\t    }\n\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) { return Math.floor(n); });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments;\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) { return String.fromCharCode(object.code); });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) { return this.fromCharCode(object.code); }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\n\t    /**\n\t     * Invokes the method named by `methodName` on each element in `collection`,\n\t     * returning an array of the results of each invoked method. Any additional\n\t     * arguments are provided to each invoked method. If `methodName` is a function\n\t     * it is invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|string} methodName The name of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    function invoke(collection, methodName) {\n\t      return baseInvoke(collection, methodName, baseSlice(arguments, 2));\n\t    }\n\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments; (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * _.map([1, 2, 3], function(n) { return n * 3; });\n\t     * // => [3, 6, 9]\n\t     *\n\t     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(n) { return n * 3; });\n\t     * // => [3, 6, 9] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments; (value, index, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     *  If a property name or object is provided it is used to create a \"_.property\"\n\t     *  or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) { return chr.age; });\n\t     * // => { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 };\n\t     */\n\t    var max = createExtremum(arrayMax);\n\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments; (value, index, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     *  If a property name or object is provided it is used to create a \"_.property\"\n\t     *  or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) { return chr.age; });\n\t     * // => { 'user': 'barney', 'age': 36 };\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 };\n\t     */\n\t    var min = createExtremum(arrayMin, true);\n\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments; (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) { return n % 2; });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) { return this.floor(n) % 2; }, Math);\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1 }), function(array) { return _.pluck(array, 'user'); });\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.map(_.partition(users, 'active'), function(array) { return _.pluck(array, 'user'); });\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\n\t    /**\n\t     * Gets the value of `key` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {string} key The key of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, key) {\n\t      return map(collection, baseProperty(key + ''));\n\t    }\n\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg`and invoked with four arguments;\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var sum = _.reduce([1, 2, 3], function(sum, n) { return sum + n; });\n\t     * // => 6\n\t     *\n\t     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6, 'c': 9 } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator, thisArg) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce;\n\t      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEach);\n\t    }\n\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     * _.reduceRight(array, function(flattened, other) { return flattened.concat(other); }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator, thisArg) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce;\n\t      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEachRight);\n\t    }\n\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var odds = _.reject([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 36 }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var result = shuffle(collection);\n\t      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the Fisher-Yates\n\t     * shuffle. See [Wikipedia](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      collection = toIterable(collection);\n\n\t      var index = -1,\n\t          length = collection.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        var rand = baseRandom(0, index);\n\t        if (index != rand) {\n\t          result[index] = result[rand];\n\t        }\n\t        result[rand] = collection[index];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets the size of `collection` by returning `collection.length` for\n\t     * array-like values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2]);\n\t     * // => 2\n\t     *\n\t     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n\t     * // => 3\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? collection.length : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments; (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.some(users, { 'age': 1 });\n\t     * // => false\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity] The function\n\t     *  invoked per iteration. If a property name or an object is provided it is\n\t     *  used to create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) { return Math.sin(n); });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) { return this.sin(n); }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      var index = -1,\n\t          length = collection ? collection.length : 0,\n\t          result = isLength(length) ? Array(length) : [];\n\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = null;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = { 'criteria': iteratee(value, key, collection), 'index': index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\n\t    /**\n\t     * This method is like `_.sortBy` except that it sorts by property names\n\t     * instead of an iteratee function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(string|string[])} props The property names to sort by,\n\t     *  specified as individual property names or arrays of property names.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 26 },\n\t     *   { 'user': 'fred',   'age': 30 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n\t     */\n\t    function sortByAll(collection) {\n\t      var args = arguments;\n\t      if (args.length > 3 && isIterateeCall(args[1], args[2], args[3])) {\n\t        args = [collection, args[1]];\n\t      }\n\t      var index = -1,\n\t          length = collection ? collection.length : 0,\n\t          props = baseFlatten(args, false, false, 1),\n\t          result = isLength(length) ? Array(length) : [];\n\n\t      baseEach(collection, function(value, key, collection) {\n\t        var length = props.length,\n\t            criteria = Array(length);\n\n\t        while (length--) {\n\t          criteria[length] = value == null ? undefined : value[props[length]];\n\t        }\n\t        result[++index] = { 'criteria': criteria, 'index': index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareMultipleAscending);\n\t    }\n\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'status': 'busy', 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'status': 'busy', 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36 }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * _.pluck(_.where(users, { 'status': 'busy' }), 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) { console.log(_.now() - stamp); }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (!isFunction(func)) {\n\t        if (isFunction(n)) {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = null;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (!isFunction(func)) {\n\t        if (isFunction(n)) {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        } else {\n\t          func = null;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the `length`\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [args] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    function bind(func, thisArg) {\n\t      var bitmask = BIND_FLAG;\n\t      if (arguments.length > 2) {\n\t        var partials = baseSlice(arguments, 2),\n\t            holders = replaceHolders(partials, bind.placeholder);\n\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    }\n\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the `length` property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() { console.log('clicked ' + this.label); }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    function bindAll(object) {\n\t      return baseBindAll(object,\n\t        arguments.length > 1\n\t          ? baseFlatten(arguments, false, false, 1)\n\t          : functions(object)\n\t      );\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [args] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    function bindKey(object, key) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (arguments.length > 2) {\n\t        var partials = baseSlice(arguments, 2),\n\t            holders = replaceHolders(partials, bindKey.placeholder);\n\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    }\n\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the `length` property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      if (guard && isIterateeCall(func, arity, guard)) {\n\t        arity = null;\n\t      }\n\t      var result = createWrapper(func, CURRY_FLAG, null, null, null, null, null, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the `length` property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      if (guard && isIterateeCall(func, arity, guard)) {\n\t        arity = null;\n\t      }\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, null, null, null, null, null, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates a function that delays invoking `func` until after `wait` milliseconds\n\t     * have elapsed since the last time it was invoked. The created function comes\n\t     * with a `cancel` method to cancel delayed invocations. Provide an options\n\t     * object to indicate that `func` should be invoked on the leading and/or\n\t     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n\t     * function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} wait The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\n\t      if (!isFunction(func)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : wait;\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? options.trailing : trailing;\n\t      }\n\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          if (maxTimeoutId) {\n\t            clearTimeout(maxTimeoutId);\n\t          }\n\t          var isCalled = trailingCall;\n\t          maxTimeoutId = timeoutId = trailingCall = undefined;\n\t          if (isCalled) {\n\t            lastCalled = now();\n\t            result = func.apply(thisArg, args);\n\t            if (!timeoutId && !maxTimeoutId) {\n\t              args = thisArg = null;\n\t            }\n\t          }\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\n\t      function maxDelayed() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (trailing || (maxWait !== wait)) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = null;\n\t          }\n\t        }\n\t      }\n\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = null;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) { console.log(text); }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    function defer(func) {\n\t      return baseDelay(func, 1, arguments, 1);\n\t    }\n\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    function delay(func, wait) {\n\t      return baseDelay(func, wait, arguments, 2);\n\t    }\n\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function add(x, y) {\n\t     *   return x + y;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    function flow() {\n\t      var funcs = arguments,\n\t          length = funcs.length;\n\n\t      if (!length) {\n\t        return function() {};\n\t      }\n\t      if (!arrayEvery(funcs, isFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var index = 0,\n\t            result = funcs[index].apply(this, arguments);\n\n\t        while (++index < length) {\n\t          result = funcs[index].call(this, result);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function add(x, y) {\n\t     *   return x + y;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    function flowRight() {\n\t      var funcs = arguments,\n\t          fromIndex = funcs.length - 1;\n\n\t      if (fromIndex < 0) {\n\t        return function() {};\n\t      }\n\t      if (!arrayEvery(funcs, isFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var index = fromIndex,\n\t            result = funcs[index].apply(this, arguments);\n\n\t        while (index--) {\n\t          result = funcs[index].call(this, result);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the ES `Map` method interface\n\t     * of `get`, `has`, and `set`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (!isFunction(func) || (resolver && !isFunction(resolver))) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var cache = memoized.cache,\n\t            key = resolver ? resolver.apply(this, arguments) : arguments[0];\n\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, arguments);\n\t        cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (!isFunction(predicate)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(func, 2);\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the `length` property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [args] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    function partial(func) {\n\t      var partials = baseSlice(arguments, 1),\n\t          holders = replaceHolders(partials, partial.placeholder);\n\n\t      return createWrapper(func, PARTIAL_FLAG, null, partials, holders);\n\t    }\n\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the `length` property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [args] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    function partialRight(func) {\n\t      var partials = baseSlice(arguments, 1),\n\t          holders = replaceHolders(partials, partialRight.placeholder);\n\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, null, partials, holders);\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) { return n * 3; }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    function rearg(func) {\n\t      var indexes = baseFlatten(arguments, false, false, 1);\n\t      return createWrapper(func, REARG_FLAG, null, null, null, indexes);\n\t    }\n\n\t    /**\n\t     * Creates a function that only invokes `func` at most once per every `wait`\n\t     * milliseconds. The created function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the throttled function return the result of the last\n\t     * `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} wait The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * var throttled =  _.throttle(renewToken, 300000, { 'trailing': false })\n\t     * jQuery('.interactive').on('click', throttled);\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\n\t      if (!isFunction(func)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      debounceOptions.leading = leading;\n\t      debounceOptions.maxWait = +wait;\n\t      debounceOptions.trailing = trailing;\n\t      return debounce(func, wait, debounceOptions);\n\t    }\n\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the structured clone algorithm.\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var body = _.clone(document.body, function(value) {\n\t     *   return _.isElement(value) ? value.cloneNode(false) : undefined;\n\t     * });\n\t     *\n\t     * body === document.body\n\t     * // => false\n\t     * body.nodeName\n\t     * // => BODY\n\t     * body.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      // Juggle arguments.\n\t      if (typeof isDeep != 'boolean' && isDeep != null) {\n\t        thisArg = customizer;\n\t        customizer = isIterateeCall(value, isDeep, thisArg) ? null : isDeep;\n\t        isDeep = false;\n\t      }\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n\t      return baseClone(value, isDeep, customizer);\n\t    }\n\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the structured clone algorithm.\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n\t     * });\n\t     *\n\t     * body === document.body\n\t     * // => false\n\t     * body.nodeName\n\t     * // => BODY\n\t     * body.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n\t      return baseClone(value, true, customizer);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * (function() { return _.isArguments(arguments); })();\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      var length = isObjectLike(value) ? value.length : undefined;\n\t      return (isLength(length) && objToString.call(value) == argsTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * (function() { return _.isArray(arguments); })();\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return (isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag) || false;\n\t    };\n\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return (value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return (isObjectLike(value) && objToString.call(value) == dateTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return (value && value.nodeType === 1 && isObjectLike(value) &&\n\t        objToString.call(value).indexOf('Element') > -1) || false;\n\t    }\n\t    // Fallback for environments without DOM support.\n\t    if (!support.dom) {\n\t      isElement = function(value) {\n\t        return (value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value)) || false;\n\t      };\n\t    }\n\n\t    /**\n\t     * Checks if a value is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      var length = value.length;\n\t      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments; (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\t      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n\t        return value === other;\n\t      }\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return typeof result == 'undefined' ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return (isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on ES `Number.isFinite`. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    var isFinite = nativeNumIsFinite || function(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    };\n\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t      // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t      return typeof value == 'function' || false;\n\t    }\n\t    // Fallback for environments that return incorrect `typeof` operator results.\n\t    if (isFunction(/x/) || (Uint8Array && !isFunction(Uint8Array))) {\n\t      isFunction = function(value) {\n\t        // The use of `Object#toString` avoids issues with the `typeof` operator\n\t        // in older versions of Chrome and Safari which return 'function' for regexes\n\t        // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t        return objToString.call(value) == funcTag;\n\t      };\n\t    }\n\n\t    /**\n\t     * Checks if `value` is the language type of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return type == 'function' || (value && type == 'object') || false;\n\t    }\n\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments; (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} source The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      var props = keys(source),\n\t          length = props.length;\n\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\t      if (!customizer && length == 1) {\n\t        var key = props[0],\n\t            value = source[key];\n\n\t        if (isStrictComparable(value)) {\n\t          return object != null && value === object[key] && hasOwnProperty.call(object, key);\n\t        }\n\t      }\n\t      var values = Array(length),\n\t          strictCompareFlags = Array(length);\n\n\t      while (length--) {\n\t        value = values[length] = source[props[length]];\n\t        strictCompareFlags[length] = isStrictComparable(value);\n\t      }\n\t      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as native `isNaN` which returns `true`\n\t     * for `undefined` and other non-numeric values. See the [ES5 spec](https://es5.github.io/#x15.1.2.4)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (objToString.call(value) == funcTag) {\n\t        return reNative.test(fnToString.call(value));\n\t      }\n\t      return (isObjectLike(value) && reHostCtor.test(value)) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n\t      if (!(value && objToString.call(value) == objectTag)) {\n\t        return false;\n\t      }\n\t      var valueOf = value.valueOf,\n\t          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n\t      return objProto\n\t        ? (value == objProto || getPrototypeOf(value) == objProto)\n\t        : shimIsPlainObject(value);\n\t    };\n\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return (isObjectLike(value) && isLength(value.length) && typedArrayTags[objToString.call(value)]) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return typeof value == 'undefined';\n\t    }\n\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3);\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? value.length : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments;\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return typeof value == 'undefined' ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(baseAssign);\n\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = null;\n\t      }\n\t      return properties ? baseCopy(properties, result, keys(properties)) : result;\n\t    }\n\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional defaults of the same property are ignored.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    function defaults(object) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var args = arrayCopy(arguments);\n\t      args.push(assignDefaults);\n\t      return assign.apply(undefined, args);\n\t    }\n\n\t    /**\n\t     * This method is like `_.findIndex` except that it returns the key of the\n\t     * first element `predicate` returns truthy for, instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) { return chr.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.findKey(users, { 'age': 1 });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return baseFind(object, predicate, baseForOwn, true);\n\t    }\n\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `predicate` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) { return chr.age < 40; });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the \"_.matches\" callback shorthand\n\t     * _.findLastKey(users, { 'age': 36 });\n\t     * // => 'barney'\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return baseFind(object, predicate, baseForOwnRight, true);\n\t    }\n\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments; (value, key, object). Iterator functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    function forIn(object, iteratee, thisArg) {\n\t      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n\t        iteratee = bindCallback(iteratee, thisArg, 3);\n\t      }\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    function forInRight(object, iteratee, thisArg) {\n\t      iteratee = bindCallback(iteratee, thisArg, 3);\n\t      return baseForRight(object, iteratee, keysIn);\n\t    }\n\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments; (value, key, object). Iterator functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs '0', '1', and 'length' (iteration order is not guaranteed)\n\t     */\n\t    function forOwn(object, iteratee, thisArg) {\n\t      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n\t        iteratee = bindCallback(iteratee, thisArg, 3);\n\t      }\n\t      return baseForOwn(object, iteratee);\n\t    }\n\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n\t     */\n\t    function forOwnRight(object, iteratee, thisArg) {\n\t      iteratee = bindCallback(iteratee, thisArg, 3);\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['all', 'any', 'bind', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\n\t    /**\n\t     * Checks if `key` exists as a direct property of `object` instead of an\n\t     * inherited property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n\t     * // => true\n\t     */\n\t    function has(object, key) {\n\t      return object ? hasOwnProperty.call(object, key) : false;\n\t    }\n\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * _.invert({ 'first': 'fred', 'second': 'barney' });\n\t     * // => { 'fred': 'first', 'barney': 'second' }\n\t     *\n\t     * // without `multiValue`\n\t     * _.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' });\n\t     * // => { 'fred': 'third', 'barney': 'second' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' }, true);\n\t     * // => { 'fred': ['first', 'third'], 'barney': ['second'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = null;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      if (object) {\n\t        var Ctor = object.constructor,\n\t            length = object.length;\n\t      }\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t         (typeof object != 'function' && (length && isLength(length)))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype == object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments;\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created \"_.property\"\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for `iteratee` the created \"_.matches\" style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration. If a property name or object is provided it is used to\n\t     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(n) { return n * 3; });\n\t     * // => { 'a': 3, 'b': 6, 'c': 9 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the \"_.property\" callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee, thisArg) {\n\t      var result = {};\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments; (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   return _.isArray(a) ? a.concat(b) : undefined;\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     * Property names may be specified as individual arguments or as arrays of\n\t     * property names. If `predicate` is provided it is invoked for each property\n\t     * of `object` omitting the properties `predicate` returns truthy for. The\n\t     * predicate is bound to `thisArg` and invoked with three arguments;\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function omit(object, predicate, thisArg) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof predicate != 'function') {\n\t        var props = arrayMap(baseFlatten(arguments, false, false, 1), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      predicate = bindCallback(predicate, thisArg, 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    }\n\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments; (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function pick(object, predicate, thisArg) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof predicate == 'function'\n\t        ? pickByCallback(object, bindCallback(predicate, thisArg, 3))\n\t        : pickByArray(object, baseFlatten(arguments, false, false, 1));\n\t    }\n\n\t    /**\n\t     * Resolves the value of property `key` on `object`. If the value of `key` is\n\t     * a function it is invoked with the `this` binding of `object` and its result\n\t     * is returned, else the property value is returned. If the property value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the property value\n\t     *  resolves to `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': _.constant(40) };\n\t     *\n\t     * _.result(object, 'user');\n\t     * // => 'fred'\n\t     *\n\t     * _.result(object, 'age');\n\t     * // => 40\n\t     *\n\t     * _.result(object, 'status', 'busy');\n\t     * // => 'busy'\n\t     *\n\t     * _.result(object, 'status', _.constant('busy'));\n\t     * // => 'busy'\n\t     */\n\t    function result(object, key, defaultValue) {\n\t      var value = object == null ? undefined : object[key];\n\t      if (typeof value == 'undefined') {\n\t        value = defaultValue;\n\t      }\n\t      return isFunction(value) ? value.call(object) : value;\n\t    }\n\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments; (accumulator, value, key, object). Iterator functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var squares = _.transform([1, 2, 3, 4, 5, 6], function(result, n) {\n\t     *   n *= n;\n\t     *   if (n % 2) {\n\t     *     return result.push(n) < 3;\n\t     *   }\n\t     * });\n\t     * // => [1, 9, 25]\n\t     *\n\t     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6, 'c': 9 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(typeof Ctor == 'function' && Ctor.prototype);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = null;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Converts `string` to camel case.\n\t     * See [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\n\t    /**\n\t     * Deburrs `string` by converting latin-1 supplementary letters to basic latin letters.\n\t     * See [Wikipedia](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter);\n\t    }\n\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\n\t      var length = string.length;\n\t      position = (typeof position == 'undefined' ? length : nativeMin(position < 0 ? 0 : (+position || 0), length)) - target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and '`', in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n\t     * [#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\n\t     * the [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always quote attribute values to reduce\n\t     * XSS vectors. See [Ryan Grove's article](http://wonko.com/post/html-escaping)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n\t     * \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, '\\\\$&')\n\t        : string;\n\t    }\n\n\t    /**\n\t     * Converts `string` to kebab case (a.k.a. spinal case).\n\t     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles) for\n\t     * more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\n\t    /**\n\t     * Pads `string` on the left and right sides if it is shorter then the given\n\t     * padding length. The `chars` string may be truncated if the number of padding\n\t     * characters can't be evenly divided by the padding length.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = floor(mid),\n\t          rightLength = ceil(mid);\n\n\t      chars = createPad('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\n\t    /**\n\t     * Pads `string` on the left side if it is shorter then the given padding\n\t     * length. The `chars` string may be truncated if the number of padding\n\t     * characters exceeds the padding length.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padLeft(string, length, chars) {\n\t      string = baseToString(string);\n\t      return string && (createPad(string, length, chars) + string);\n\t    }\n\n\t    /**\n\t     * Pads `string` on the right side if it is shorter then the given padding\n\t     * length. The `chars` string may be truncated if the number of padding\n\t     * characters exceeds the padding length.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padRight(string, length, chars) {\n\t      string = baseToString(string);\n\t      return string && (string + createPad(string, length, chars));\n\t    }\n\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the ES5 implementation of `parseInt`.\n\t     * See the [ES5 spec](https://es5.github.io/#E) for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard && isIterateeCall(string, radix, guard)) {\n\t        radix = 0;\n\t      }\n\t      return nativeParseInt(string, radix);\n\t    }\n\t    // Fallback for environments with pre-ES5 implementations.\n\t    if (nativeParseInt(whitespace + '08') != 8) {\n\t      parseInt = function(string, radix, guard) {\n\t        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t        // Chrome fails to trim leading <BOM> whitespace characters.\n\t        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t          radix = 0;\n\t        } else if (radix) {\n\t          radix = +radix;\n\t        }\n\t        string = trim(string);\n\t        return nativeParseInt(string, radix || (reHexPrefix.test(string) ? 16 : 10));\n\t      };\n\t    }\n\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = floor(n / 2);\n\t        string += string;\n\t      } while (n);\n\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Converts `string` to snake case.\n\t     * See [Wikipedia](https://en.wikipedia.org/wiki/Snake_case) for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\n\t    /**\n\t     * Converts `string` to start case.\n\t     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null ? 0 : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes sourceURLs for easier debugging.\n\t     * See the [HTML5 Rocks article on sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for more details.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     *   var __t, __p = '';\n\t     *   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     *   return __p;\n\t     * }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = null;\n\t      }\n\t      string = baseToString(string);\n\t      options = baseAssign(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n\t      var imports = baseAssign(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\n\t      source += \"';\\n\";\n\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar]\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string))\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1)\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\n\t    /**\n\t     * Truncates `string` if it is longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': ' ' });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': /,? +/ });\n\t     * //=> 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', { 'omission': ' [...]' });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = null;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? +options.length || 0 : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = null;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught\n\t     * error object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function() {\n\t     *   return document.querySelectorAll(selector);\n\t     * });\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    function attempt(func) {\n\t      try {\n\t        return func();\n\t      } catch(e) {\n\t        return isError(e) ? e : Error(e);\n\t      }\n\t    }\n\n\t    /**\n\t     * Creates a function bound to an optional `thisArg`. If `func` is a property\n\t     * name the created callback returns the property value for a given element.\n\t     * If `func` is an object the created callback returns `true` for elements\n\t     * that contain the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = null;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\n\t    /**\n\t     * Creates a function which performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * var matchesAge = _.matches({ 'age': 36 });\n\t     *\n\t     * _.filter(users, matchesAge);\n\t     * // => [{ 'user': 'barney', 'age': 36 }]\n\t     *\n\t     * _.find(users, matchesAge);\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=this] object The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj && keys(source),\n\t            methodNames = props && props.length && baseFunctions(source, props);\n\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__);\n\t                (result.__actions__ = arrayCopy(this.__actions__)).push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              var args = [this.value()];\n\t              push.apply(args, arguments);\n\t              return func.apply(object, args);\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      context._ = oldDash;\n\t      return this;\n\t    }\n\n\t    /**\n\t     * A no-operation function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\n\t    /**\n\t     * Creates a function which returns the property value of `key` on a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * var getName = _.property('user');\n\t     *\n\t     * _.map(users, getName);\n\t     * // => ['fred', barney']\n\t     *\n\t     * _.pluck(_.sortBy(users, getName), 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function property(key) {\n\t      return baseProperty(key + '');\n\t    }\n\n\t    /**\n\t     * The inverse of `_.property`; this method creates a function which returns\n\t     * the property value of a given key on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40, 'active': true };\n\t     * _.map(['active', 'user'], _.propertyOf(object));\n\t     * // => [true, 'fred']\n\t     *\n\t     * var object = { 'a': 3, 'b': 1, 'c': 2 };\n\t     * _.sortBy(['a', 'b', 'c'], _.propertyOf(object));\n\t     * // => ['b', 'c', 'a']\n\t     */\n\t    function propertyOf(object) {\n\t      return function(key) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `start` is less than `end` a\n\t     * zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = null;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) { mage.castSpell(n); });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2` respectively\n\t     *\n\t     * _.times(3, function(n) { this.cast(n); }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = +n;\n\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    // Ensure `new LodashWrapper` is an instance of `lodash`.\n\t    LodashWrapper.prototype = lodash.prototype;\n\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var isFilter = index == LAZY_FILTER_FLAG;\n\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone(),\n\t            filtered = result.filtered,\n\t            iteratees = result.iteratees || (result.iteratees = []);\n\n\t        result.filtered = filtered || isFilter || (index == LAZY_WHILE_FLAG && result.dir < 0);\n\t        iteratees.push({ 'iteratee': getCallback(iteratee, thisArg, 3), 'type': index });\n\t        return result;\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      var countName = methodName + 'Count',\n\t          whileName = methodName + 'While';\n\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        n = n == null ? 1 : nativeMax(+n || 0, 0);\n\n\t        var result = this.clone();\n\t        if (result.filtered) {\n\t          var value = result[countName];\n\t          result[countName] = index ? nativeMin(value, n) : (value + n);\n\t        } else {\n\t          var views = result.views || (result.views = []);\n\t          views.push({ 'size': n, 'type': methodName + (result.dir < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\n\t      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n\t        return this.reverse()[whileName](predicate, thisArg).reverse();\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right': '');\n\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[dropName](1);\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : baseProperty;\n\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(index ? value : (value + '')));\n\t      };\n\t    });\n\n\t    LazyWrapper.prototype.dropWhile = function(iteratee, thisArg) {\n\t      var done,\n\t          lastIndex,\n\t          isRight = this.dir < 0;\n\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return this.filter(function(value, index, array) {\n\t        done = done && (isRight ? index < lastIndex : index > lastIndex);\n\t        lastIndex = index;\n\t        return done || (done = !iteratee(value, index, array));\n\t      });\n\t    };\n\n\t    LazyWrapper.prototype.reject = function(iteratee, thisArg) {\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return this.filter(function(value, index, array) {\n\t        return !iteratee(value, index, array);\n\t      });\n\t    };\n\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n\t      if (typeof end != 'undefined') {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName],\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = arguments,\n\t            chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            onlyLazy = isLazy && !isHybrid;\n\n\t        if (retUnwrapped && !chainAll) {\n\t          return onlyLazy\n\t            ? func.call(value)\n\t            : lodashFunc.call(lodash, this.value());\n\t        }\n\t        var interceptor = function(value) {\n\t          var otherArgs = [value];\n\t          push.apply(otherArgs, args);\n\t          return lodashFunc.apply(lodash, otherArgs);\n\t        };\n\t        if (isLazy || isArray(value)) {\n\t          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n\t              result = func.apply(wrapper, args);\n\n\t          if (!retUnwrapped && (isHybrid || result.actions)) {\n\t            var actions = result.actions || (result.actions = []);\n\t            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n\t          }\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\n\t    // Add `Array.prototype` functions to `lodash.prototype`.\n\t    arrayEach(['concat', 'join', 'pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|shift)$/.test(methodName);\n\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\n\t    // Add chaining functions to the lodash wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n\t    // Add function aliases to the lodash wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\n\t    return lodash;\n\t  }\n\n\t  /*--------------------------------------------------------------------------*/\n\n\t  // Export lodash.\n\t  var _ = runInContext();\n\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Narwhal or Rhino -require.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)(module), (function() { return this; }())))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFReference - represents a reference to another object in the PDF object heirarchy\n\tBy Devon Govett\n\t */\n\n\t(function() {\n\t  var PDFObject, PDFReference, zlib,\n\t    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n\t  zlib = __webpack_require__(45);\n\n\t  PDFReference = (function() {\n\t    function PDFReference(document, id, data) {\n\t      this.document = document;\n\t      this.id = id;\n\t      this.data = data != null ? data : {};\n\t      this.finalize = __bind(this.finalize, this);\n\t      this.gen = 0;\n\t      this.deflate = null;\n\t      this.compress = this.document.compress && !this.data.Filter;\n\t      this.uncompressedLength = 0;\n\t      this.chunks = [];\n\t    }\n\n\t    PDFReference.prototype.initDeflate = function() {\n\t      this.data.Filter = 'FlateDecode';\n\t      this.deflate = zlib.createDeflate();\n\t      this.deflate.on('data', (function(_this) {\n\t        return function(chunk) {\n\t          _this.chunks.push(chunk);\n\t          return _this.data.Length += chunk.length;\n\t        };\n\t      })(this));\n\t      return this.deflate.on('end', this.finalize);\n\t    };\n\n\t    PDFReference.prototype.write = function(chunk) {\n\t      var _base;\n\t      if (!Buffer.isBuffer(chunk)) {\n\t        chunk = new Buffer(chunk + '\\n', 'binary');\n\t      }\n\t      this.uncompressedLength += chunk.length;\n\t      if ((_base = this.data).Length == null) {\n\t        _base.Length = 0;\n\t      }\n\t      if (this.compress) {\n\t        if (!this.deflate) {\n\t          this.initDeflate();\n\t        }\n\t        return this.deflate.write(chunk);\n\t      } else {\n\t        this.chunks.push(chunk);\n\t        return this.data.Length += chunk.length;\n\t      }\n\t    };\n\n\t    PDFReference.prototype.end = function(chunk) {\n\t      if (typeof chunk === 'string' || Buffer.isBuffer(chunk)) {\n\t        this.write(chunk);\n\t      }\n\t      if (this.deflate) {\n\t        return this.deflate.end();\n\t      } else {\n\t        return this.finalize();\n\t      }\n\t    };\n\n\t    PDFReference.prototype.finalize = function() {\n\t      var chunk, _i, _len, _ref;\n\t      this.offset = this.document._offset;\n\t      this.document._write(\"\" + this.id + \" \" + this.gen + \" obj\");\n\t      this.document._write(PDFObject.convert(this.data));\n\t      if (this.chunks.length) {\n\t        this.document._write('stream');\n\t        _ref = this.chunks;\n\t        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t          chunk = _ref[_i];\n\t          this.document._write(chunk);\n\t        }\n\t        this.chunks.length = 0;\n\t        this.document._write('\\nendstream');\n\t      }\n\t      this.document._write('endobj');\n\t      return this.document._refEnd(this);\n\t    };\n\n\t    PDFReference.prototype.toString = function() {\n\t      return \"\" + this.id + \" \" + this.gen + \" R\";\n\t    };\n\n\t    return PDFReference;\n\n\t  })();\n\n\t  module.exports = PDFReference;\n\n\t  PDFObject = __webpack_require__(32);\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar _ = __webpack_require__(11);\n\n\tfunction FontWrapper(pdfkitDoc, path, fontName){\n\t\tthis.MAX_CHAR_TYPES = 92;\n\n\t\tthis.pdfkitDoc = pdfkitDoc;\n\t\tthis.path = path;\n\t\tthis.pdfFonts = [];\n\t\tthis.charCatalogue = [];\n\t\tthis.name = fontName;\n\n\t  this.__defineGetter__('ascender', function(){\n\t    var font = this.getFont(0);\n\t    return font.ascender;\n\t  });\n\t  this.__defineGetter__('decender', function(){\n\t    var font = this.getFont(0);\n\t    return font.decender;\n\t  });\n\n\t}\n\t// private\n\n\tFontWrapper.prototype.getFont = function(index){\n\t\tif(!this.pdfFonts[index]){\n\n\t\t\tvar pseudoName = this.name + index;\n\n\t\t\tif(this.postscriptName){\n\t\t\t\tdelete this.pdfkitDoc._fontFamilies[this.postscriptName];\n\t\t\t}\n\n\t\t\tthis.pdfFonts[index] = this.pdfkitDoc.font(this.path, pseudoName)._font;\n\t\t\tif(!this.postscriptName){\n\t\t\t\tthis.postscriptName = this.pdfFonts[index].name;\n\t\t\t}\n\t\t}\n\n\t\treturn this.pdfFonts[index];\n\t};\n\n\t// public\n\tFontWrapper.prototype.widthOfString = function(){\n\t\tvar font = this.getFont(0);\n\t\treturn font.widthOfString.apply(font, arguments);\n\t};\n\n\tFontWrapper.prototype.lineHeight = function(){\n\t\tvar font = this.getFont(0);\n\t\treturn font.lineHeight.apply(font, arguments);\n\t};\n\n\tFontWrapper.prototype.ref = function(){\n\t\tvar font = this.getFont(0);\n\t\treturn font.ref.apply(font, arguments);\n\t};\n\n\tvar toCharCode = function(char){\n\t  return char.charCodeAt(0);\n\t};\n\n\tFontWrapper.prototype.encode = function(text){\n\t  var self = this;\n\n\t  var charTypesInInline = _.chain(text.split('')).map(toCharCode).uniq().value();\n\t\tif (charTypesInInline.length > self.MAX_CHAR_TYPES) {\n\t\t\tthrow new Error('Inline has more than '+ self.MAX_CHAR_TYPES + ': ' + text + ' different character types and therefore cannot be properly embedded into pdf.');\n\t\t}\n\n\n\t  var characterFitInFontWithIndex = function (charCatalogue) {\n\t    return _.uniq(charCatalogue.concat(charTypesInInline)).length <= self.MAX_CHAR_TYPES;\n\t  };\n\n\t  var index = _.findIndex(self.charCatalogue, characterFitInFontWithIndex);\n\n\t  if(index < 0){\n\t    index = self.charCatalogue.length;\n\t    self.charCatalogue[index] = [];\n\t  }\n\n\t\tvar font = this.getFont(index);\n\t\tfont.use(text);\n\n\t  _.each(charTypesInInline, function(charCode){\n\t    if(!_.includes(self.charCatalogue[index], charCode)){\n\t      self.charCatalogue[index].push(charCode);\n\t    }\n\t  });\n\n\t  var encodedText = _.map(font.encode(text), function (char) {\n\t    return char.charCodeAt(0).toString(16);\n\t  }).join('');\n\n\t  return {\n\t    encodedText: encodedText,\n\t    fontId: font.id\n\t  };\n\t};\n\n\n\tmodule.exports = FontWrapper;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFImage - embeds images in PDF documents\n\tBy Devon Govett\n\t */\n\n\t(function() {\n\t  var Data, JPEG, PDFImage, PNG, fs;\n\n\t  fs = __webpack_require__(10);\n\n\t  Data = __webpack_require__(34);\n\n\t  JPEG = __webpack_require__(35);\n\n\t  PNG = __webpack_require__(36);\n\n\t  PDFImage = (function() {\n\t    function PDFImage() {}\n\n\t    PDFImage.open = function(src, label) {\n\t      var data, match;\n\t      if (Buffer.isBuffer(src)) {\n\t        data = src;\n\t      } else {\n\t        if (match = /^data:.+;base64,(.*)$/.exec(src)) {\n\t          data = new Buffer(match[1], 'base64');\n\t        } else {\n\t          data = fs.readFileSync(src);\n\t          if (!data) {\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      if (data[0] === 0xff && data[1] === 0xd8) {\n\t        return new JPEG(data, label);\n\t      } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {\n\t        return new PNG(data, label);\n\t      } else {\n\t        throw new Error('Unknown image format.');\n\t      }\n\t    };\n\n\t    return PDFImage;\n\n\t  })();\n\n\t  module.exports = PDFImage;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\t/**\n\t* Creates an instance of TraversalTracker\n\t*\n\t* @constructor\n\t*/\n\tfunction TraversalTracker() {\n\t\tthis.events = {};\n\t}\n\n\tTraversalTracker.prototype.startTracking = function(event, cb) {\n\t\tvar callbacks = (this.events[event] || (this.events[event] = []));\n\n\t\tif (callbacks.indexOf(cb) < 0) {\n\t\t\tcallbacks.push(cb);\n\t\t}\n\t};\n\n\tTraversalTracker.prototype.stopTracking = function(event, cb) {\n\t\tvar callbacks = this.events[event];\n\n\t\tif (callbacks) {\n\t\t\tvar index = callbacks.indexOf(cb);\n\t\t\tif (index >= 0) {\n\t\t\t\tcallbacks.splice(index, 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tTraversalTracker.prototype.emit = function(event) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\t\tvar callbacks = this.events[event];\n\n\t\tif (callbacks) {\n\t\t\tcallbacks.forEach(function(cb) {\n\t\t\t\tcb.apply(this, args);\n\t\t\t});\n\t\t}\n\t};\n\n\tTraversalTracker.prototype.auto = function(event, cb, innerBlock) {\n\t\tthis.startTracking(event, cb);\n\t\tinnerBlock();\n\t\tthis.stopTracking(event, cb);\n\t};\n\n\tmodule.exports = TraversalTracker;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar TextTools = __webpack_require__(26);\n\tvar StyleContextStack = __webpack_require__(27);\n\tvar ColumnCalculator = __webpack_require__(22);\n\tvar fontStringify = __webpack_require__(25).fontStringify;\n\tvar pack = __webpack_require__(25).pack;\n\tvar qrEncoder = __webpack_require__(33);\n\n\t/**\n\t* @private\n\t*/\n\tfunction DocMeasure(fontProvider, styleDictionary, defaultStyle, imageMeasure, tableLayouts, images) {\n\t\tthis.textTools = new TextTools(fontProvider);\n\t\tthis.styleStack = new StyleContextStack(styleDictionary, defaultStyle);\n\t\tthis.imageMeasure = imageMeasure;\n\t\tthis.tableLayouts = tableLayouts;\n\t\tthis.images = images;\n\t\tthis.autoImageIndex = 1;\n\t}\n\n\t/**\n\t* Measures all nodes and sets min/max-width properties required for the second\n\t* layout-pass.\n\t* @param  {Object} docStructure document-definition-object\n\t* @return {Object}              document-measurement-object\n\t*/\n\tDocMeasure.prototype.measureDocument = function(docStructure) {\n\t\treturn this.measureNode(docStructure);\n\t};\n\n\tDocMeasure.prototype.measureNode = function(node) {\n\t\t// expand shortcuts\n\t\tif (node instanceof Array) {\n\t\t\tnode = { stack: node };\n\t\t} else if (typeof node == 'string' || node instanceof String) {\n\t\t\tnode = { text: node };\n\t\t}\n\n\t\tvar self = this;\n\n\t\treturn this.styleStack.auto(node, function() {\n\t\t\t// TODO: refactor + rethink whether this is the proper way to handle margins\n\t\t\tnode._margin = getNodeMargin(node);\n\n\t\t\tif (node.columns) {\n\t\t\t\treturn extendMargins(self.measureColumns(node));\n\t\t\t} else if (node.stack) {\n\t\t\t\treturn extendMargins(self.measureVerticalContainer(node));\n\t\t\t} else if (node.ul) {\n\t\t\t\treturn extendMargins(self.measureList(false, node));\n\t\t\t} else if (node.ol) {\n\t\t\t\treturn extendMargins(self.measureList(true, node));\n\t\t\t} else if (node.table) {\n\t\t\t\treturn extendMargins(self.measureTable(node));\n\t\t\t} else if (node.text !== undefined) {\n\t\t\t\treturn extendMargins(self.measureLeaf(node));\n\t\t\t} else if (node.image) {\n\t\t\t\treturn extendMargins(self.measureImage(node));\n\t\t\t} else if (node.canvas) {\n\t\t\t\treturn extendMargins(self.measureCanvas(node));\n\t\t\t} else if (node.qr) {\n\t\t\t\treturn extendMargins(self.measureQr(node));\n\t\t\t} else {\n\t\t\t\tthrow 'Unrecognized document structure: ' + JSON.stringify(node, fontStringify);\n\t\t\t}\n\t\t});\n\n\t\tfunction extendMargins(node) {\n\t\t\tvar margin = node._margin;\n\n\t\t\tif (margin) {\n\t\t\t\tnode._minWidth += margin[0] + margin[2];\n\t\t\t\tnode._maxWidth += margin[0] + margin[2];\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction getNodeMargin() {\n\n\t\t\tfunction processSingleMargins(node, currentMargin){\n\t\t\t\tif (node.marginLeft || node.marginTop || node.marginRight || node.marginBottom) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnode.marginLeft || currentMargin[0] || 0,\n\t\t\t\t\t\tnode.marginTop || currentMargin[1] || 0,\n\t\t\t\t\t\tnode.marginRight || currentMargin[2]  || 0,\n\t\t\t\t\t\tnode.marginBottom || currentMargin[3]  || 0\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn currentMargin;\n\t\t\t}\n\n\t\t\tfunction flattenStyleArray(styleArray){\n\t\t\t\tvar flattenedStyles = {};\n\t\t\t\tfor (var i = styleArray.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar styleName = styleArray[i];\n\t\t\t\t\tvar style = self.styleStack.styleDictionary[styleName];\n\t\t\t\t\tfor(var key in style){\n\t\t\t\t\t\tif(style.hasOwnProperty(key)){\n\t\t\t\t\t\t\tflattenedStyles[key] = style[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn flattenedStyles;\n\t\t\t}\n\n\t\t\tfunction convertMargin(margin) {\n\t\t\t\tif (typeof margin === 'number' || margin instanceof Number) {\n\t\t\t\t\tmargin = [ margin, margin, margin, margin ];\n\t\t\t\t} else if (margin instanceof Array) {\n\t\t\t\t\tif (margin.length === 2) {\n\t\t\t\t\t\tmargin = [ margin[0], margin[1], margin[0], margin[1] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn margin;\n\t\t\t}\n\n\t\t\tvar margin = [undefined, undefined, undefined, undefined];\n\n\t\t\tif(node.style) {\n\t\t\t\tvar styleArray = (node.style instanceof Array) ? node.style : [node.style];\n\t\t\t\tvar flattenedStyleArray = flattenStyleArray(styleArray);\n\n\t\t\t\tif(flattenedStyleArray) {\n\t\t\t\t\tmargin = processSingleMargins(flattenedStyleArray, margin);\n\t\t\t\t}\n\n\t\t\t\tif(flattenedStyleArray.margin){\n\t\t\t\t\tmargin = convertMargin(flattenedStyleArray.margin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmargin = processSingleMargins(node, margin);\n\n\t\t\tif(node.margin){\n\t\t\t\tmargin = convertMargin(node.margin);\n\t\t\t}\n\n\t\t\tif(margin[0] === undefined && margin[1] === undefined && margin[2] === undefined && margin[3] === undefined) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn margin;\n\t\t\t}\n\t\t}\n\t};\n\n\tDocMeasure.prototype.convertIfBase64Image = function(node) {\n\t\tif (/^data:image\\/(jpeg|jpg|png);base64,/.test(node.image)) {\n\t\t\tvar label = '$$pdfmake$$' + this.autoImageIndex++;\n\t\t\tthis.images[label] = node.image;\n\t\t\tnode.image = label;\n\t}\n\t};\n\n\tDocMeasure.prototype.measureImage = function(node) {\n\t\tif (this.images) {\n\t\t\tthis.convertIfBase64Image(node);\n\t\t}\n\n\t\tvar imageSize = this.imageMeasure.measureImage(node.image);\n\n\t\tif (node.fit) {\n\t\t\tvar factor = (imageSize.width / imageSize.height > node.fit[0] / node.fit[1]) ? node.fit[0] / imageSize.width : node.fit[1] / imageSize.height;\n\t\t\tnode._width = node._minWidth = node._maxWidth = imageSize.width * factor;\n\t\t\tnode._height = imageSize.height * factor;\n\t\t} else {\n\t\t\tnode._width = node._minWidth = node._maxWidth = node.width || imageSize.width;\n\t\t\tnode._height = node.height || (imageSize.height * node._width / imageSize.width);\n\t\t}\n\n\t\tnode._alignment = this.styleStack.getProperty('alignment');\n\t\treturn node;\n\t};\n\n\tDocMeasure.prototype.measureLeaf = function(node) {\n\t\tvar data = this.textTools.buildInlines(node.text, this.styleStack);\n\n\t\tnode._inlines = data.items;\n\t\tnode._minWidth = data.minWidth;\n\t\tnode._maxWidth = data.maxWidth;\n\n\t\treturn node;\n\t};\n\n\tDocMeasure.prototype.measureVerticalContainer = function(node) {\n\t\tvar items = node.stack;\n\n\t\tnode._minWidth = 0;\n\t\tnode._maxWidth = 0;\n\n\t\tfor(var i = 0, l = items.length; i < l; i++) {\n\t\t\titems[i] = this.measureNode(items[i]);\n\n\t\t\tnode._minWidth = Math.max(node._minWidth, items[i]._minWidth);\n\t\t\tnode._maxWidth = Math.max(node._maxWidth, items[i]._maxWidth);\n\t\t}\n\n\t\treturn node;\n\t};\n\n\tDocMeasure.prototype.gapSizeForList = function(isOrderedList, listItems) {\n\t\tif (isOrderedList) {\n\t\t\tvar longestNo = (listItems.length).toString().replace(/./g, '9');\n\t\t\treturn this.textTools.sizeOfString(longestNo + '. ', this.styleStack);\n\t\t} else {\n\t\t\treturn this.textTools.sizeOfString('9. ', this.styleStack);\n\t\t}\n\t};\n\n\tDocMeasure.prototype.buildMarker = function(isOrderedList, counter, styleStack, gapSize) {\n\t\tvar marker;\n\n\t\tif (isOrderedList) {\n\t\t\tmarker = { _inlines: this.textTools.buildInlines(counter, styleStack).items };\n\t\t}\n\t\telse {\n\t\t\t// TODO: ascender-based calculations\n\t\t\tvar radius = gapSize.fontSize / 6;\n\t\t\tmarker = {\n\t\t\t\tcanvas: [ {\n\t\t\t\t\tx: radius,\n\t\t\t\t\ty: (gapSize.height / gapSize.lineHeight) + gapSize.decender - gapSize.fontSize / 3,//0,// gapSize.fontSize * 2 / 3,\n\t\t\t\t\tr1: radius,\n\t\t\t\t\tr2: radius,\n\t\t\t\t\ttype: 'ellipse',\n\t\t\t\t\tcolor: 'black'\n\t\t\t\t} ]\n\t\t\t};\n\t\t}\n\n\t\tmarker._minWidth = marker._maxWidth = gapSize.width;\n\t\tmarker._minHeight = marker._maxHeight = gapSize.height;\n\n\t\treturn marker;\n\t};\n\n\tDocMeasure.prototype.measureList = function(isOrdered, node) {\n\t\tvar style = this.styleStack.clone();\n\n\t\tvar items = isOrdered ? node.ol : node.ul;\n\t\tnode._gapSize = this.gapSizeForList(isOrdered, items);\n\t\tnode._minWidth = 0;\n\t\tnode._maxWidth = 0;\n\n\t\tvar counter = 1;\n\n\t\tfor(var i = 0, l = items.length; i < l; i++) {\n\t\t\tvar nextItem = items[i] = this.measureNode(items[i]);\n\n\t\t\tvar marker = counter++ + '. ';\n\n\t\t\tif (!nextItem.ol && !nextItem.ul) {\n\t\t\t\tnextItem.listMarker = this.buildMarker(isOrdered, nextItem.counter || marker, style, node._gapSize);\n\t\t\t}  // TODO: else - nested lists numbering\n\n\t\t\tnode._minWidth = Math.max(node._minWidth, items[i]._minWidth + node._gapSize.width);\n\t\t\tnode._maxWidth = Math.max(node._maxWidth, items[i]._maxWidth + node._gapSize.width);\n\t\t}\n\n\t\treturn node;\n\t};\n\n\tDocMeasure.prototype.measureColumns = function(node) {\n\t\tvar columns = node.columns;\n\t\tnode._gap = this.styleStack.getProperty('columnGap') || 0;\n\n\t\tfor(var i = 0, l = columns.length; i < l; i++) {\n\t\t\tcolumns[i] = this.measureNode(columns[i]);\n\t\t}\n\n\t\tvar measures = ColumnCalculator.measureMinMax(columns);\n\n\t\tnode._minWidth = measures.min + node._gap * (columns.length - 1);\n\t\tnode._maxWidth = measures.max + node._gap * (columns.length - 1);\n\n\t\treturn node;\n\t};\n\n\tDocMeasure.prototype.measureTable = function(node) {\n\t\textendTableWidths(node);\n\t\tnode._layout = getLayout(this.tableLayouts);\n\t\tnode._offsets = getOffsets(node._layout);\n\n\t\tvar colSpans = [];\n\t\tvar col, row, cols, rows;\n\n\t\tfor(col = 0, cols = node.table.body[0].length; col < cols; col++) {\n\t\t\tvar c = node.table.widths[col];\n\t\t\tc._minWidth = 0;\n\t\t\tc._maxWidth = 0;\n\n\t\t\tfor(row = 0, rows = node.table.body.length; row < rows; row++) {\n\t\t\t\tvar rowData = node.table.body[row];\n\t\t\t\tvar data = rowData[col];\n\t\t\t\tif (!data._span) {\n\t\t\t\t\tvar _this = this;\n\t\t\t\t\tdata = rowData[col] = this.styleStack.auto(data, measureCb(this, data));\n\n\t\t\t\t\tif (data.colSpan && data.colSpan > 1) {\n\t\t\t\t\t\tmarkSpans(rowData, col, data.colSpan);\n\t\t\t\t\t\tcolSpans.push({ col: col, span: data.colSpan, minWidth: data._minWidth, maxWidth: data._maxWidth });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc._minWidth = Math.max(c._minWidth, data._minWidth);\n\t\t\t\t\t\tc._maxWidth = Math.max(c._maxWidth, data._maxWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (data.rowSpan && data.rowSpan > 1) {\n\t\t\t\t\tmarkVSpans(node.table, row, col, data.rowSpan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\textendWidthsForColSpans();\n\n\t\tvar measures = ColumnCalculator.measureMinMax(node.table.widths);\n\n\t\tnode._minWidth = measures.min + node._offsets.total;\n\t\tnode._maxWidth = measures.max + node._offsets.total;\n\n\t\treturn node;\n\n\t\tfunction measureCb(_this, data) {\n\t\t\treturn function() {\n\t\t\t\tif (data !== null && typeof data === 'object') {\n\t\t\t\t\tdata.fillColor = _this.styleStack.getProperty('fillColor');\n\t\t\t\t}\n\t\t\t\treturn _this.measureNode(data);\n\t\t\t};\n\t\t}\n\n\t\tfunction getLayout(tableLayouts) {\n\t\t\tvar layout = node.layout;\n\n\t\t\tif (typeof node.layout === 'string' || node instanceof String) {\n\t\t\t\tlayout = tableLayouts[layout];\n\t\t\t}\n\n\t\t\tvar defaultLayout = {\n\t\t\t\thLineWidth: function(i, node) { return 1; }, //return node.table.headerRows && i === node.table.headerRows && 3 || 0; },\n\t\t\t\tvLineWidth: function(i, node) { return 1; },\n\t\t\t\thLineColor: function(i, node) { return 'black'; },\n\t\t\t\tvLineColor: function(i, node) { return 'black'; },\n\t\t\t\tpaddingLeft: function(i, node) { return 4; }, //i && 4 || 0; },\n\t\t\t\tpaddingRight: function(i, node) { return 4; }, //(i < node.table.widths.length - 1) ? 4 : 0; },\n\t\t\t\tpaddingTop: function(i, node) { return 2; },\n\t\t\t\tpaddingBottom: function(i, node) { return 2; }\n\t\t\t};\n\n\t\t\treturn pack(defaultLayout, layout);\n\t\t}\n\n\t\tfunction getOffsets(layout) {\n\t\t\tvar offsets = [];\n\t\t\tvar totalOffset = 0;\n\t\t\tvar prevRightPadding = 0;\n\n\t\t\tfor(var i = 0, l = node.table.widths.length; i < l; i++) {\n\t\t\t\tvar lOffset = prevRightPadding + layout.vLineWidth(i, node) + layout.paddingLeft(i, node);\n\t\t\t\toffsets.push(lOffset);\n\t\t\t\ttotalOffset += lOffset;\n\t\t\t\tprevRightPadding = layout.paddingRight(i, node);\n\t\t\t}\n\n\t\t\ttotalOffset += prevRightPadding + layout.vLineWidth(node.table.widths.length, node);\n\n\t\t\treturn {\n\t\t\t\ttotal: totalOffset,\n\t\t\t\toffsets: offsets\n\t\t\t};\n\t\t}\n\n\t\tfunction extendWidthsForColSpans() {\n\t\t\tvar q, j;\n\n\t\t\tfor (var i = 0, l = colSpans.length; i < l; i++) {\n\t\t\t\tvar span = colSpans[i];\n\n\t\t\t\tvar currentMinMax = getMinMax(span.col, span.span, node._offsets);\n\t\t\t\tvar minDifference = span.minWidth - currentMinMax.minWidth;\n\t\t\t\tvar maxDifference = span.maxWidth - currentMinMax.maxWidth;\n\n\t\t\t\tif (minDifference > 0) {\n\t\t\t\t\tq = minDifference / span.span;\n\n\t\t\t\t\tfor(j = 0; j < span.span; j++) {\n\t\t\t\t\t\tnode.table.widths[span.col + j]._minWidth += q;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (maxDifference > 0) {\n\t\t\t\t\tq = maxDifference / span.span;\n\n\t\t\t\t\tfor(j = 0; j < span.span; j++) {\n\t\t\t\t\t\tnode.table.widths[span.col + j]._maxWidth += q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getMinMax(col, span, offsets) {\n\t\t\tvar result = { minWidth: 0, maxWidth: 0 };\n\n\t\t\tfor(var i = 0; i < span; i++) {\n\t\t\t\tresult.minWidth += node.table.widths[col + i]._minWidth + (i? offsets.offsets[col + i] : 0);\n\t\t\t\tresult.maxWidth += node.table.widths[col + i]._maxWidth + (i? offsets.offsets[col + i] : 0);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction markSpans(rowData, col, span) {\n\t\t\tfor (var i = 1; i < span; i++) {\n\t\t\t\trowData[col + i] = {\n\t\t\t\t\t_span: true,\n\t\t\t\t\t_minWidth: 0,\n\t\t\t\t\t_maxWidth: 0,\n\t\t\t\t\trowSpan: rowData[col].rowSpan\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfunction markVSpans(table, row, col, span) {\n\t\t\tfor (var i = 1; i < span; i++) {\n\t\t\t\ttable.body[row + i][col] = {\n\t\t\t\t\t_span: true,\n\t\t\t\t\t_minWidth: 0,\n\t\t\t\t\t_maxWidth: 0,\n\t\t\t\t\tfillColor: table.body[row][col].fillColor\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfunction extendTableWidths(node) {\n\t\t\tif (!node.table.widths) {\n\t\t\t\tnode.table.widths = 'auto';\n\t\t\t}\n\n\t\t\tif (typeof node.table.widths === 'string' || node.table.widths instanceof String) {\n\t\t\t\tnode.table.widths = [ node.table.widths ];\n\n\t\t\t\twhile(node.table.widths.length < node.table.body[0].length) {\n\t\t\t\t\tnode.table.widths.push(node.table.widths[node.table.widths.length - 1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(var i = 0, l = node.table.widths.length; i < l; i++) {\n\t\t\t\tvar w = node.table.widths[i];\n\t\t\t\tif (typeof w === 'number' || w instanceof Number || typeof w === 'string' || w instanceof String) {\n\t\t\t\t\tnode.table.widths[i] = { width: w };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tDocMeasure.prototype.measureCanvas = function(node) {\n\t\tvar w = 0, h = 0;\n\n\t\tfor(var i = 0, l = node.canvas.length; i < l; i++) {\n\t\t\tvar vector = node.canvas[i];\n\n\t\t\tswitch(vector.type) {\n\t\t\tcase 'ellipse':\n\t\t\t\tw = Math.max(w, vector.x + vector.r1);\n\t\t\t\th = Math.max(h, vector.y + vector.r2);\n\t\t\t\tbreak;\n\t\t\tcase 'rect':\n\t\t\t\tw = Math.max(w, vector.x + vector.w);\n\t\t\t\th = Math.max(h, vector.y + vector.h);\n\t\t\t\tbreak;\n\t\t\tcase 'line':\n\t\t\t\tw = Math.max(w, vector.x1, vector.x2);\n\t\t\t\th = Math.max(h, vector.y1, vector.y2);\n\t\t\t\tbreak;\n\t\t\tcase 'polyline':\n\t\t\t\tfor(var i2 = 0, l2 = vector.points.length; i2 < l2; i2++) {\n\t\t\t\t\tw = Math.max(w, vector.points[i2].x);\n\t\t\t\t\th = Math.max(h, vector.points[i2].y);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tnode._minWidth = node._maxWidth = w;\n\t\tnode._minHeight = node._maxHeight = h;\n\n\t\treturn node;\n\t};\n\n\tDocMeasure.prototype.measureQr = function(node) {\n\t\tnode = qrEncoder.measure(node);\n\t\tnode._alignment = this.styleStack.getProperty('alignment');\n\t\treturn node;\n\t};\n\n\tmodule.exports = DocMeasure;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar TraversalTracker = __webpack_require__(18);\n\n\t/**\n\t* Creates an instance of DocumentContext - a store for current x, y positions and available width/height.\n\t* It facilitates column divisions and vertical sync\n\t*/\n\tfunction DocumentContext(pageSize, pageMargins) {\n\t\tthis.pages = [];\n\n\t\tthis.pageMargins = pageMargins;\n\n\t\tthis.x = pageMargins.left;\n\t\tthis.availableWidth = pageSize.width - pageMargins.left - pageMargins.right;\n\t\tthis.availableHeight = 0;\n\t\tthis.page = -1;\n\n\t\tthis.snapshots = [];\n\n\t\tthis.endingCell = null;\n\n\t  this.tracker = new TraversalTracker();\n\n\t\tthis.addPage(pageSize);\n\t}\n\n\tDocumentContext.prototype.beginColumnGroup = function() {\n\t\tthis.snapshots.push({\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\tavailableHeight: this.availableHeight,\n\t\t\tavailableWidth: this.availableWidth,\n\t\t\tpage: this.page,\n\t\t\tbottomMost: { y: this.y, page: this.page },\n\t\t\tendingCell: this.endingCell,\n\t\t\tlastColumnWidth: this.lastColumnWidth\n\t\t});\n\n\t\tthis.lastColumnWidth = 0;\n\t};\n\n\tDocumentContext.prototype.beginColumn = function(width, offset, endingCell) {\n\t\tvar saved = this.snapshots[this.snapshots.length - 1];\n\n\t\tthis.calculateBottomMost(saved);\n\n\t  this.endingCell = endingCell;\n\t\tthis.page = saved.page;\n\t\tthis.x = this.x + this.lastColumnWidth + (offset || 0);\n\t\tthis.y = saved.y;\n\t\tthis.availableWidth = width;\t//saved.availableWidth - offset;\n\t\tthis.availableHeight = saved.availableHeight;\n\n\t\tthis.lastColumnWidth = width;\n\t};\n\n\tDocumentContext.prototype.calculateBottomMost = function(destContext) {\n\t\tif (this.endingCell) {\n\t\t\tthis.saveContextInEndingCell(this.endingCell);\n\t\t\tthis.endingCell = null;\n\t\t} else {\n\t\t\tdestContext.bottomMost = bottomMostContext(this, destContext.bottomMost);\n\t\t}\n\t};\n\n\tDocumentContext.prototype.markEnding = function(endingCell) {\n\t\tthis.page = endingCell._columnEndingContext.page;\n\t\tthis.x = endingCell._columnEndingContext.x;\n\t\tthis.y = endingCell._columnEndingContext.y;\n\t\tthis.availableWidth = endingCell._columnEndingContext.availableWidth;\n\t\tthis.availableHeight = endingCell._columnEndingContext.availableHeight;\n\t\tthis.lastColumnWidth = endingCell._columnEndingContext.lastColumnWidth;\n\t};\n\n\tDocumentContext.prototype.saveContextInEndingCell = function(endingCell) {\n\t\tendingCell._columnEndingContext = {\n\t\t\tpage: this.page,\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\tavailableHeight: this.availableHeight,\n\t\t\tavailableWidth: this.availableWidth,\n\t\t\tlastColumnWidth: this.lastColumnWidth\n\t\t};\n\t};\n\n\tDocumentContext.prototype.completeColumnGroup = function() {\n\t\tvar saved = this.snapshots.pop();\n\n\t\tthis.calculateBottomMost(saved);\n\n\t\tthis.endingCell = null;\n\t\tthis.x = saved.x;\n\t\tthis.y = saved.bottomMost.y;\n\t\tthis.page = saved.bottomMost.page;\n\t\tthis.availableWidth = saved.availableWidth;\n\t\tthis.availableHeight = saved.bottomMost.availableHeight;\n\t\tthis.lastColumnWidth = saved.lastColumnWidth;\n\t};\n\n\tDocumentContext.prototype.addMargin = function(left, right) {\n\t\tthis.x += left;\n\t\tthis.availableWidth -= left + (right || 0);\n\t};\n\n\tDocumentContext.prototype.moveDown = function(offset) {\n\t\tthis.y += offset;\n\t\tthis.availableHeight -= offset;\n\n\t\treturn this.availableHeight > 0;\n\t};\n\n\tDocumentContext.prototype.initializePage = function() {\n\t\tthis.y = this.pageMargins.top;\n\t\tthis.availableHeight = this.getCurrentPage().pageSize.height - this.pageMargins.top - this.pageMargins.bottom;\n\t\tthis.pageSnapshot().availableWidth = this.getCurrentPage().pageSize.width - this.pageMargins.left - this.pageMargins.right;\n\t};\n\n\tDocumentContext.prototype.pageSnapshot = function(){\n\t  if(this.snapshots[0]){\n\t    return this.snapshots[0];\n\t  } else {\n\t    return this;\n\t  }\n\t};\n\n\tDocumentContext.prototype.moveTo = function(x,y) {\n\t\tif(x !== undefined && x !== null) {\n\t\t\tthis.x = x;\n\t\t\tthis.availableWidth = this.getCurrentPage().pageSize.width - this.x - this.pageMargins.right;\n\t\t}\n\t\tif(y !== undefined && y !== null){\n\t\t\tthis.y = y;\n\t\t\tthis.availableHeight = this.getCurrentPage().pageSize.height - this.y - this.pageMargins.bottom;\n\t\t}\n\t};\n\n\tDocumentContext.prototype.beginDetachedBlock = function() {\n\t\tthis.snapshots.push({\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\tavailableHeight: this.availableHeight,\n\t\t\tavailableWidth: this.availableWidth,\n\t\t\tpage: this.page,\n\t\t\tendingCell: this.endingCell,\n\t\t\tlastColumnWidth: this.lastColumnWidth\n\t\t});\n\t};\n\n\tDocumentContext.prototype.endDetachedBlock = function() {\n\t\tvar saved = this.snapshots.pop();\n\n\t\tthis.x = saved.x;\n\t\tthis.y = saved.y;\n\t\tthis.availableWidth = saved.availableWidth;\n\t\tthis.availableHeight = saved.availableHeight;\n\t\tthis.page = saved.page;\n\t\tthis.endingCell = saved.endingCell;\n\t\tthis.lastColumnWidth = saved.lastColumnWidth;\n\t};\n\n\tfunction pageOrientation(pageOrientationString, currentPageOrientation){\n\t\tif(pageOrientationString === undefined) {\n\t\t\treturn currentPageOrientation;\n\t\t} else if(pageOrientationString === 'landscape'){\n\t\t\treturn 'landscape';\n\t\t} else {\n\t\t\treturn 'portrait';\n\t\t}\n\t}\n\n\tvar getPageSize = function (currentPage, newPageOrientation) {\n\n\t\tnewPageOrientation = pageOrientation(newPageOrientation, currentPage.pageSize.orientation);\n\n\t\tif(newPageOrientation !== currentPage.pageSize.orientation) {\n\t\t\treturn {\n\t\t\t\torientation: newPageOrientation,\n\t\t\t\twidth: currentPage.pageSize.height,\n\t\t\t\theight: currentPage.pageSize.width\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\torientation: currentPage.pageSize.orientation,\n\t\t\t\twidth: currentPage.pageSize.width,\n\t\t\t\theight: currentPage.pageSize.height\n\t\t\t};\n\t\t}\n\n\t};\n\n\n\tDocumentContext.prototype.moveToNextPage = function(pageOrientation) {\n\t\tvar nextPageIndex = this.page + 1;\n\n\t\tvar prevPage = this.page;\n\t\tvar prevY = this.y;\n\n\t\tvar createNewPage = nextPageIndex >= this.pages.length;\n\t\tif (createNewPage) {\n\t\t\tthis.addPage(getPageSize(this.getCurrentPage(), pageOrientation));\n\t\t} else {\n\t\t\tthis.page = nextPageIndex;\n\t\t\tthis.initializePage();\n\t\t}\n\n\t  return {\n\t\t\tnewPageCreated: createNewPage,\n\t\t\tprevPage: prevPage,\n\t\t\tprevY: prevY,\n\t\t\ty: this.y\n\t\t};\n\t};\n\n\n\tDocumentContext.prototype.addPage = function(pageSize) {\n\t\tvar page = { items: [], pageSize: pageSize };\n\t\tthis.pages.push(page);\n\t\tthis.page = this.pages.length - 1;\n\t\tthis.initializePage();\n\n\t\tthis.tracker.emit('pageAdded');\n\n\t\treturn page;\n\t};\n\n\tDocumentContext.prototype.getCurrentPage = function() {\n\t\tif (this.page < 0 || this.page >= this.pages.length) return null;\n\n\t\treturn this.pages[this.page];\n\t};\n\n\tDocumentContext.prototype.getCurrentPosition = function() {\n\t  var pageSize = this.getCurrentPage().pageSize;\n\t  var innerHeight = pageSize.height - this.pageMargins.top - this.pageMargins.bottom;\n\t  var innerWidth = pageSize.width - this.pageMargins.left - this.pageMargins.right;\n\n\t  return {\n\t    pageNumber: this.page + 1,\n\t    pageOrientation: pageSize.orientation,\n\t    pageInnerHeight: innerHeight,\n\t    pageInnerWidth: innerWidth,\n\t    left: this.x,\n\t    top: this.y,\n\t    verticalRatio: ((this.y - this.pageMargins.top) / innerHeight),\n\t    horizontalRatio: ((this.x - this.pageMargins.left) / innerWidth)\n\t  };\n\t};\n\n\tfunction bottomMostContext(c1, c2) {\n\t\tvar r;\n\n\t\tif (c1.page > c2.page) r = c1;\n\t\telse if (c2.page > c1.page) r = c2;\n\t\telse r = (c1.y > c2.y) ? c1 : c2;\n\n\t\treturn {\n\t\t\tpage: r.page,\n\t\t\tx: r.x,\n\t\t\ty: r.y,\n\t\t\tavailableHeight: r.availableHeight,\n\t\t\tavailableWidth: r.availableWidth\n\t\t};\n\t}\n\n\t/****TESTS**** (add a leading '/' to uncomment)\n\tDocumentContext.bottomMostContext = bottomMostContext;\n\t// */\n\n\tmodule.exports = DocumentContext;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar ElementWriter = __webpack_require__(37);\n\n\t/**\n\t* Creates an instance of PageElementWriter - an extended ElementWriter\n\t* which can handle:\n\t* - page-breaks (it adds new pages when there's not enough space left),\n\t* - repeatable fragments (like table-headers, which are repeated everytime\n\t*                         a page-break occurs)\n\t* - transactions (used for unbreakable-blocks when we want to make sure\n\t*                 whole block will be rendered on the same page)\n\t*/\n\tfunction PageElementWriter(context, tracker) {\n\t\tthis.transactionLevel = 0;\n\t\tthis.repeatables = [];\n\t\tthis.tracker = tracker;\n\t\tthis.writer = new ElementWriter(context, tracker);\n\t}\n\n\tfunction fitOnPage(self, addFct){\n\t  var position = addFct(self);\n\t  if (!position) {\n\t    self.moveToNextPage();\n\t    position = addFct(self);\n\t  }\n\t  return position;\n\t}\n\n\tPageElementWriter.prototype.addLine = function(line, dontUpdateContextPosition, index) {\n\t  return fitOnPage(this, function(self){\n\t    return self.writer.addLine(line, dontUpdateContextPosition, index);\n\t  });\n\t};\n\n\tPageElementWriter.prototype.addImage = function(image, index) {\n\t  return fitOnPage(this, function(self){\n\t    return self.writer.addImage(image, index);\n\t  });\n\t};\n\n\tPageElementWriter.prototype.addQr = function(qr, index) {\n\t  return fitOnPage(this, function(self){\n\t\t\treturn self.writer.addQr(qr, index);\n\t\t});\n\t};\n\n\tPageElementWriter.prototype.addVector = function(vector, ignoreContextX, ignoreContextY, index) {\n\t\treturn this.writer.addVector(vector, ignoreContextX, ignoreContextY, index);\n\t};\n\n\tPageElementWriter.prototype.addFragment = function(fragment, useBlockXOffset, useBlockYOffset, dontUpdateContextPosition) {\n\t\tif (!this.writer.addFragment(fragment, useBlockXOffset, useBlockYOffset, dontUpdateContextPosition)) {\n\t\t\tthis.moveToNextPage();\n\t\t\tthis.writer.addFragment(fragment, useBlockXOffset, useBlockYOffset, dontUpdateContextPosition);\n\t\t}\n\t};\n\n\tPageElementWriter.prototype.moveToNextPage = function(pageOrientation) {\n\n\t\tvar nextPage = this.writer.context.moveToNextPage(pageOrientation);\n\n\t  if (nextPage.newPageCreated) {\n\t\t\tthis.repeatables.forEach(function(rep) {\n\t\t\t\tthis.writer.addFragment(rep, true);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthis.repeatables.forEach(function(rep) {\n\t\t\t\tthis.writer.context.moveDown(rep.height);\n\t\t\t}, this);\n\t\t}\n\n\t\tthis.writer.tracker.emit('pageChanged', {\n\t\t\tprevPage: nextPage.prevPage,\n\t\t\tprevY: nextPage.prevY,\n\t\t\ty: nextPage.y\n\t\t});\n\t};\n\n\tPageElementWriter.prototype.beginUnbreakableBlock = function(width, height) {\n\t\tif (this.transactionLevel++ === 0) {\n\t\t\tthis.originalX = this.writer.context.x;\n\t\t\tthis.writer.pushContext(width, height);\n\t\t}\n\t};\n\n\tPageElementWriter.prototype.commitUnbreakableBlock = function(forcedX, forcedY) {\n\t\tif (--this.transactionLevel === 0) {\n\t\t\tvar unbreakableContext = this.writer.context;\n\t\t\tthis.writer.popContext();\n\n\t\t\tvar nbPages = unbreakableContext.pages.length;\n\t\t\tif(nbPages > 0) {\n\t\t\t\t// no support for multi-page unbreakableBlocks\n\t\t\t\tvar fragment = unbreakableContext.pages[0];\n\t\t\t\tfragment.xOffset = forcedX;\n\t\t\t\tfragment.yOffset = forcedY;\n\n\t\t\t\t//TODO: vectors can influence height in some situations\n\t\t\t\tif(nbPages > 1) {\n\t\t\t\t\t// on out-of-context blocs (headers, footers, background) height should be the whole DocumentContext height\n\t\t\t\t\tif (forcedX !== undefined || forcedY !== undefined) {\n\t\t\t\t\t\tfragment.height = unbreakableContext.getCurrentPage().pageSize.height - unbreakableContext.pageMargins.top - unbreakableContext.pageMargins.bottom;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfragment.height = this.writer.context.getCurrentPage().pageSize.height - this.writer.context.pageMargins.top - this.writer.context.pageMargins.bottom;\n\t\t\t\t\t\tfor (var i = 0, l = this.repeatables.length; i < l; i++) {\n\t\t\t\t\t\t\tfragment.height -= this.repeatables[i].height;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfragment.height = unbreakableContext.y;\n\t\t\t\t}\n\n\t\t\t\tif (forcedX !== undefined || forcedY !== undefined) {\n\t\t\t\t\tthis.writer.addFragment(fragment, true, true, true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addFragment(fragment);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tPageElementWriter.prototype.currentBlockToRepeatable = function() {\n\t\tvar unbreakableContext = this.writer.context;\n\t\tvar rep = { items: [] };\n\n\t    unbreakableContext.pages[0].items.forEach(function(item) {\n\t        rep.items.push(item);\n\t    });\n\n\t\trep.xOffset = this.originalX;\n\n\t\t//TODO: vectors can influence height in some situations\n\t\trep.height = unbreakableContext.y;\n\n\t\treturn rep;\n\t};\n\n\tPageElementWriter.prototype.pushToRepeatables = function(rep) {\n\t\tthis.repeatables.push(rep);\n\t};\n\n\tPageElementWriter.prototype.popFromRepeatables = function() {\n\t\tthis.repeatables.pop();\n\t};\n\n\tPageElementWriter.prototype.context = function() {\n\t\treturn this.writer.context;\n\t};\n\n\tmodule.exports = PageElementWriter;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tfunction buildColumnWidths(columns, availableWidth) {\n\t\tvar autoColumns = [],\n\t\t\tautoMin = 0, autoMax = 0,\n\t\t\tstarColumns = [],\n\t\t\tstarMaxMin = 0,\n\t\t\tstarMaxMax = 0,\n\t\t\tfixedColumns = [],\n\t\t\tinitial_availableWidth = availableWidth;\n\n\t\tcolumns.forEach(function(column) {\n\t\t\tif (isAutoColumn(column)) {\n\t\t\t\tautoColumns.push(column);\n\t\t\t\tautoMin += column._minWidth;\n\t\t\t\tautoMax += column._maxWidth;\n\t\t\t} else if (isStarColumn(column)) {\n\t\t\t\tstarColumns.push(column);\n\t\t\t\tstarMaxMin = Math.max(starMaxMin, column._minWidth);\n\t\t\t\tstarMaxMax = Math.max(starMaxMax, column._maxWidth);\n\t\t\t} else {\n\t\t\t\tfixedColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tfixedColumns.forEach(function(col) {\n\t\t\t// width specified as %\n\t\t\tif (typeof col.width === 'string' && /\\d+%/.test(col.width) ) {\n\t\t\t\tcol.width = parseFloat(col.width)*initial_availableWidth/100;\n\t\t\t}\n\t\t\tif (col.width < (col._minWidth) && col.elasticWidth) {\n\t\t\t\tcol._calcWidth = col._minWidth;\n\t\t\t} else {\n\t\t\t\tcol._calcWidth = col.width;\n\t\t\t}\n\n\t\t\tavailableWidth -= col._calcWidth;\n\t\t});\n\n\t\t// http://www.freesoft.org/CIE/RFC/1942/18.htm\n\t\t// http://www.w3.org/TR/CSS2/tables.html#width-layout\n\t\t// http://dev.w3.org/csswg/css3-tables-algorithms/Overview.src.htm\n\t\tvar minW = autoMin + starMaxMin * starColumns.length;\n\t\tvar maxW = autoMax + starMaxMax * starColumns.length;\n\t\tif (minW >= availableWidth) {\n\t\t\t// case 1 - there's no way to fit all columns within available width\n\t\t\t// that's actually pretty bad situation with PDF as we have no horizontal scroll\n\t\t\t// no easy workaround (unless we decide, in the future, to split single words)\n\t\t\t// currently we simply use minWidths for all columns\n\t\t\tautoColumns.forEach(function(col) {\n\t\t\t\tcol._calcWidth = col._minWidth;\n\t\t\t});\n\n\t\t\tstarColumns.forEach(function(col) {\n\t\t\t\tcol._calcWidth = starMaxMin; // starMaxMin already contains padding\n\t\t\t});\n\t\t} else {\n\t\t\tif (maxW < availableWidth) {\n\t\t\t\t// case 2 - we can fit rest of the table within available space\n\t\t\t\tautoColumns.forEach(function(col) {\n\t\t\t\t\tcol._calcWidth = col._maxWidth;\n\t\t\t\t\tavailableWidth -= col._calcWidth;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// maxW is too large, but minW fits within available width\n\t\t\t\tvar W = availableWidth - minW;\n\t\t\t\tvar D = maxW - minW;\n\n\t\t\t\tautoColumns.forEach(function(col) {\n\t\t\t\t\tvar d = col._maxWidth - col._minWidth;\n\t\t\t\t\tcol._calcWidth = col._minWidth + d * W / D;\n\t\t\t\t\tavailableWidth -= col._calcWidth;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (starColumns.length > 0) {\n\t\t\t\tvar starSize = availableWidth / starColumns.length;\n\n\t\t\t\tstarColumns.forEach(function(col) {\n\t\t\t\t\tcol._calcWidth = starSize;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction isAutoColumn(column) {\n\t\treturn column.width === 'auto';\n\t}\n\n\tfunction isStarColumn(column) {\n\t\treturn column.width === null || column.width === undefined || column.width === '*' || column.width === 'star';\n\t}\n\n\t//TODO: refactor and reuse in measureTable\n\tfunction measureMinMax(columns) {\n\t\tvar result = { min: 0, max: 0 };\n\n\t\tvar maxStar = { min: 0, max: 0 };\n\t\tvar starCount = 0;\n\n\t\tfor(var i = 0, l = columns.length; i < l; i++) {\n\t\t\tvar c = columns[i];\n\n\t\t\tif (isStarColumn(c)) {\n\t\t\t\tmaxStar.min = Math.max(maxStar.min, c._minWidth);\n\t\t\t\tmaxStar.max = Math.max(maxStar.max, c._maxWidth);\n\t\t\t\tstarCount++;\n\t\t\t} else if (isAutoColumn(c)) {\n\t\t\t\tresult.min += c._minWidth;\n\t\t\t\tresult.max += c._maxWidth;\n\t\t\t} else {\n\t\t\t\tresult.min += ((c.width !== undefined && c.width) || c._minWidth);\n\t\t\t\tresult.max += ((c.width  !== undefined && c.width) || c._maxWidth);\n\t\t\t}\n\t\t}\n\n\t\tif (starCount) {\n\t\t\tresult.min += starCount * maxStar.min;\n\t\t\tresult.max += starCount * maxStar.max;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t* Calculates column widths\n\t* @private\n\t*/\n\tmodule.exports = {\n\t\tbuildColumnWidths: buildColumnWidths,\n\t\tmeasureMinMax: measureMinMax,\n\t\tisAutoColumn: isAutoColumn,\n\t\tisStarColumn: isStarColumn\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar ColumnCalculator = __webpack_require__(22);\n\n\tfunction TableProcessor(tableNode) {\n\t  this.tableNode = tableNode;\n\t}\n\n\tTableProcessor.prototype.beginTable = function(writer) {\n\t  var tableNode;\n\t  var availableWidth;\n\t  var self = this;\n\n\t  tableNode = this.tableNode;\n\t  this.offsets = tableNode._offsets;\n\t  this.layout = tableNode._layout;\n\n\t  availableWidth = writer.context().availableWidth - this.offsets.total;\n\t  ColumnCalculator.buildColumnWidths(tableNode.table.widths, availableWidth);\n\n\t  this.tableWidth = tableNode._offsets.total + getTableInnerContentWidth();\n\t  this.rowSpanData = prepareRowSpanData();\n\t  this.cleanUpRepeatables = false;\n\n\t  this.headerRows = tableNode.table.headerRows || 0;\n\t  this.rowsWithoutPageBreak = this.headerRows + (tableNode.table.keepWithHeaderRows || 0);\n\t  this.dontBreakRows = tableNode.table.dontBreakRows || false;\n\n\t  if (this.rowsWithoutPageBreak) {\n\t    writer.beginUnbreakableBlock();\n\t  }\n\n\t  this.drawHorizontalLine(0, writer);\n\n\t  function getTableInnerContentWidth() {\n\t    var width = 0;\n\n\t    tableNode.table.widths.forEach(function(w) {\n\t      width += w._calcWidth;\n\t    });\n\n\t    return width;\n\t  }\n\n\t  function prepareRowSpanData() {\n\t    var rsd = [];\n\t    var x = 0;\n\t    var lastWidth = 0;\n\n\t    rsd.push({ left: 0, rowSpan: 0 });\n\n\t    for(var i = 0, l = self.tableNode.table.body[0].length; i < l; i++) {\n\t      var paddings = self.layout.paddingLeft(i, self.tableNode) + self.layout.paddingRight(i, self.tableNode);\n\t      var lBorder = self.layout.vLineWidth(i, self.tableNode);\n\t      lastWidth = paddings + lBorder + self.tableNode.table.widths[i]._calcWidth;\n\t      rsd[rsd.length - 1].width = lastWidth;\n\t      x += lastWidth;\n\t      rsd.push({ left: x, rowSpan: 0, width: 0 });\n\t    }\n\n\t    return rsd;\n\t  }\n\t};\n\n\tTableProcessor.prototype.onRowBreak = function(rowIndex, writer) {\n\t  var self = this;\n\t  return function() {\n\t    //console.log('moving by : ', topLineWidth, rowPaddingTop);\n\t    var offset = self.rowPaddingTop + (!self.headerRows ? self.topLineWidth : 0);\n\t    writer.context().moveDown(offset);\n\t  };\n\n\t};\n\n\tTableProcessor.prototype.beginRow = function(rowIndex, writer) {\n\t  this.topLineWidth = this.layout.hLineWidth(rowIndex, this.tableNode);\n\t  this.rowPaddingTop = this.layout.paddingTop(rowIndex, this.tableNode);\n\t  this.bottomLineWidth = this.layout.hLineWidth(rowIndex+1, this.tableNode);\n\t  this.rowPaddingBottom = this.layout.paddingBottom(rowIndex, this.tableNode);\n\n\t  this.rowCallback = this.onRowBreak(rowIndex, writer);\n\t  writer.tracker.startTracking('pageChanged', this.rowCallback );\n\t    if(this.dontBreakRows) {\n\t        writer.beginUnbreakableBlock();\n\t    }\n\t  this.rowTopY = writer.context().y;\n\t  this.reservedAtBottom = this.bottomLineWidth + this.rowPaddingBottom;\n\n\t  writer.context().availableHeight -= this.reservedAtBottom;\n\n\t  writer.context().moveDown(this.rowPaddingTop);\n\t};\n\n\tTableProcessor.prototype.drawHorizontalLine = function(lineIndex, writer, overrideY) {\n\t  var lineWidth = this.layout.hLineWidth(lineIndex, this.tableNode);\n\t  if (lineWidth) {\n\t    var offset = lineWidth / 2;\n\t    var currentLine = null;\n\n\t    for(var i = 0, l = this.rowSpanData.length; i < l; i++) {\n\t      var data = this.rowSpanData[i];\n\t      var shouldDrawLine = !data.rowSpan;\n\n\t      if (!currentLine && shouldDrawLine) {\n\t        currentLine = { left: data.left, width: 0 };\n\t      }\n\n\t      if (shouldDrawLine) {\n\t        currentLine.width += (data.width || 0);\n\t      }\n\n\t      var y = (overrideY || 0) + offset;\n\n\t      if (!shouldDrawLine || i === l - 1) {\n\t        if (currentLine) {\n\t          writer.addVector({\n\t            type: 'line',\n\t            x1: currentLine.left,\n\t            x2: currentLine.left + currentLine.width,\n\t            y1: y,\n\t            y2: y,\n\t            lineWidth: lineWidth,\n\t            lineColor: typeof this.layout.hLineColor === 'function' ? this.layout.hLineColor(lineIndex, this.tableNode) : this.layout.hLineColor\n\t          }, false, overrideY);\n\t          currentLine = null;\n\t        }\n\t      }\n\t    }\n\n\t    writer.context().moveDown(lineWidth);\n\t  }\n\t};\n\n\tTableProcessor.prototype.drawVerticalLine = function(x, y0, y1, vLineIndex, writer) {\n\t  var width = this.layout.vLineWidth(vLineIndex, this.tableNode);\n\t  if (width === 0) return;\n\t  writer.addVector({\n\t    type: 'line',\n\t    x1: x + width/2,\n\t    x2: x + width/2,\n\t    y1: y0,\n\t    y2: y1,\n\t    lineWidth: width,\n\t    lineColor: typeof this.layout.vLineColor === 'function' ? this.layout.vLineColor(vLineIndex, this.tableNode) : this.layout.vLineColor\n\t  }, false, true);\n\t};\n\n\tTableProcessor.prototype.endTable = function(writer) {\n\t  if (this.cleanUpRepeatables) {\n\t    writer.popFromRepeatables();\n\t  }\n\t};\n\n\tTableProcessor.prototype.endRow = function(rowIndex, writer, pageBreaks) {\n\t    var l, i;\n\t    var self = this;\n\t    writer.tracker.stopTracking('pageChanged', this.rowCallback);\n\t    writer.context().moveDown(this.layout.paddingBottom(rowIndex, this.tableNode));\n\t    writer.context().availableHeight += this.reservedAtBottom;\n\n\t    var endingPage = writer.context().page;\n\t    var endingY = writer.context().y;\n\n\t    var xs = getLineXs();\n\n\t    var ys = [];\n\n\t    var hasBreaks = pageBreaks && pageBreaks.length > 0;\n\n\t    ys.push({\n\t      y0: this.rowTopY,\n\t      page: hasBreaks ? pageBreaks[0].prevPage : endingPage\n\t    });\n\n\t    if (hasBreaks) {\n\t      for(i = 0, l = pageBreaks.length; i < l; i++) {\n\t        var pageBreak = pageBreaks[i];\n\t        ys[ys.length - 1].y1 = pageBreak.prevY;\n\n\t        ys.push({y0: pageBreak.y, page: pageBreak.prevPage + 1});\n\t      }\n\t    }\n\n\t    ys[ys.length - 1].y1 = endingY;\n\n\t    var skipOrphanePadding = (ys[0].y1 - ys[0].y0 === this.rowPaddingTop);\n\t    for(var yi = (skipOrphanePadding ? 1 : 0), yl = ys.length; yi < yl; yi++) {\n\t      var willBreak = yi < ys.length - 1;\n\t      var rowBreakWithoutHeader = (yi > 0 && !this.headerRows);\n\t      var hzLineOffset =  rowBreakWithoutHeader ? 0 : this.topLineWidth;\n\t      var y1 = ys[yi].y0;\n\t      var y2 = ys[yi].y1;\n\n\t\t\t\tif(willBreak) {\n\t\t\t\t\ty2 = y2 + this.rowPaddingBottom;\n\t\t\t\t}\n\n\t      if (writer.context().page != ys[yi].page) {\n\t        writer.context().page = ys[yi].page;\n\n\t        //TODO: buggy, availableHeight should be updated on every pageChanged event\n\t        // TableProcessor should be pageChanged listener, instead of processRow\n\t        this.reservedAtBottom = 0;\n\t      }\n\n\t      for(i = 0, l = xs.length; i < l; i++) {\n\t        this.drawVerticalLine(xs[i].x, y1 - hzLineOffset, y2 + this.bottomLineWidth, xs[i].index, writer);\n\t        if(i < l-1) {\n\t          var colIndex = xs[i].index;\n\t          var fillColor=  this.tableNode.table.body[rowIndex][colIndex].fillColor;\n\t          if(fillColor ) {\n\t            var wBorder = this.layout.vLineWidth(colIndex, this.tableNode);\n\t            var xf = xs[i].x+wBorder;\n\t            var yf = y1 - hzLineOffset;\n\t            writer.addVector({\n\t              type: 'rect',\n\t              x: xf,\n\t              y: yf,\n\t              w: xs[i+1].x-xf,\n\t              h: y2+this.bottomLineWidth-yf,\n\t              lineWidth: 0,\n\t              color: fillColor\n\t            }, false, true, 0);\n\t          }\n\t        }\n\t      }\n\n\t      if (willBreak && this.layout.hLineWhenBroken !== false) {\n\t        this.drawHorizontalLine(rowIndex + 1, writer, y2);\n\t      }\n\t      if(rowBreakWithoutHeader && this.layout.hLineWhenBroken !== false) {\n\t        this.drawHorizontalLine(rowIndex, writer, y1);\n\t      }\n\t    }\n\n\t    writer.context().page = endingPage;\n\t    writer.context().y = endingY;\n\n\t    var row = this.tableNode.table.body[rowIndex];\n\t    for(i = 0, l = row.length; i < l; i++) {\n\t      if (row[i].rowSpan) {\n\t        this.rowSpanData[i].rowSpan = row[i].rowSpan;\n\n\t        // fix colSpans\n\t        if (row[i].colSpan && row[i].colSpan > 1) {\n\t          for(var j = 1; j < row[i].rowSpan; j++) {\n\t            this.tableNode.table.body[rowIndex + j][i]._colSpan = row[i].colSpan;\n\t          }\n\t        }\n\t      }\n\n\t      if(this.rowSpanData[i].rowSpan > 0) {\n\t        this.rowSpanData[i].rowSpan--;\n\t      }\n\t    }\n\n\t    this.drawHorizontalLine(rowIndex + 1, writer);\n\n\t    if(this.headerRows && rowIndex === this.headerRows - 1) {\n\t      this.headerRepeatable = writer.currentBlockToRepeatable();\n\t    }\n\n\t    if(this.dontBreakRows) {\n\t      writer.tracker.auto('pageChanged',\n\t        function() {\n\t          self.drawHorizontalLine(rowIndex, writer);\n\t        },\n\t        function() {\n\t          writer.commitUnbreakableBlock();\n\t          self.drawHorizontalLine(rowIndex, writer);\n\t        }\n\t      );\n\t    }\n\n\t    if(this.headerRepeatable && (rowIndex === (this.rowsWithoutPageBreak - 1) || rowIndex === this.tableNode.table.body.length - 1)) {\n\t      writer.commitUnbreakableBlock();\n\t      writer.pushToRepeatables(this.headerRepeatable);\n\t      this.cleanUpRepeatables = true;\n\t      this.headerRepeatable = null;\n\t    }\n\n\t    function getLineXs() {\n\t      var result = [];\n\t      var cols = 0;\n\n\t      for(var i = 0, l = self.tableNode.table.body[rowIndex].length; i < l; i++) {\n\t        if (!cols) {\n\t          result.push({ x: self.rowSpanData[i].left, index: i});\n\n\t          var item = self.tableNode.table.body[rowIndex][i];\n\t          cols = (item._colSpan || item.colSpan || 0);\n\t        }\n\t        if (cols > 0) {\n\t          cols--;\n\t        }\n\t      }\n\n\t      result.push({ x: self.rowSpanData[self.rowSpanData.length - 1].left, index: self.rowSpanData.length - 1});\n\n\t      return result;\n\t    }\n\t};\n\n\tmodule.exports = TableProcessor;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\t/**\n\t* Creates an instance of Line\n\t*\n\t* @constructor\n\t* @this {Line}\n\t* @param {Number} Maximum width this line can have\n\t*/\n\tfunction Line(maxWidth) {\n\t\tthis.maxWidth = maxWidth;\n\t\tthis.leadingCut = 0;\n\t\tthis.trailingCut = 0;\n\t\tthis.inlineWidths = 0;\n\t\tthis.inlines = [];\n\t}\n\n\tLine.prototype.getAscenderHeight = function() {\n\t\tvar y = 0;\n\n\t\tthis.inlines.forEach(function(inline) {\n\t\t\ty = Math.max(y, inline.font.ascender / 1000 * inline.fontSize);\n\t\t});\n\t\treturn y;\n\t};\n\n\tLine.prototype.hasEnoughSpaceForInline = function(inline) {\n\t\tif (this.inlines.length === 0) return true;\n\t\tif (this.newLineForced) return false;\n\n\t\treturn this.inlineWidths + inline.width - this.leadingCut - (inline.trailingCut || 0) <= this.maxWidth;\n\t};\n\n\tLine.prototype.addInline = function(inline) {\n\t\tif (this.inlines.length === 0) {\n\t\t\tthis.leadingCut = inline.leadingCut || 0;\n\t\t}\n\t\tthis.trailingCut = inline.trailingCut || 0;\n\n\t\tinline.x = this.inlineWidths - this.leadingCut;\n\n\t\tthis.inlines.push(inline);\n\t\tthis.inlineWidths += inline.width;\n\n\t\tif (inline.lineEnd) {\n\t\t\tthis.newLineForced = true;\n\t\t}\n\t};\n\n\tLine.prototype.getWidth = function() {\n\t\treturn this.inlineWidths - this.leadingCut - this.trailingCut;\n\t};\n\n\t/**\n\t* Returns line height\n\t* @return {Number}\n\t*/\n\tLine.prototype.getHeight = function() {\n\t\tvar max = 0;\n\n\t\tthis.inlines.forEach(function(item) {\n\t\t\tmax = Math.max(max, item.height || 0);\n\t\t});\n\n\t\treturn max;\n\t};\n\n\tmodule.exports = Line;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tfunction pack() {\n\t\tvar result = {};\n\n\t\tfor(var i = 0, l = arguments.length; i < l; i++) {\n\t\t\tvar obj = arguments[i];\n\n\t\t\tif (obj) {\n\t\t\t\tfor(var key in obj) {\n\t\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\t\tresult[key] = obj[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction offsetVector(vector, x, y) {\n\t\tswitch(vector.type) {\n\t\tcase 'ellipse':\n\t\tcase 'rect':\n\t\t\tvector.x += x;\n\t\t\tvector.y += y;\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tvector.x1 += x;\n\t\t\tvector.x2 += x;\n\t\t\tvector.y1 += y;\n\t\t\tvector.y2 += y;\n\t\t\tbreak;\n\t\tcase 'polyline':\n\t\t\tfor(var i = 0, l = vector.points.length; i < l; i++) {\n\t\t\t\tvector.points[i].x += x;\n\t\t\t\tvector.points[i].y += y;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction fontStringify(key, val) {\n\t\tif (key === 'font') {\n\t\t\treturn 'font';\n\t\t}\n\t\treturn val;\n\t}\n\n\tfunction isFunction(functionToCheck) {\n\t\tvar getType = {};\n\t\treturn functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n\t}\n\n\n\tmodule.exports = {\n\t\tpack: pack,\n\t\tfontStringify: fontStringify,\n\t\toffsetVector: offsetVector,\n\t\tisFunction: isFunction\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar WORD_RE = /([^ ,\\/!.?:;\\-\\n]*[ ,\\/!.?:;\\-]*)|\\n/g;\n\t// /\\S*\\s*/g to be considered (I'm not sure however - we shouldn't split 'aaa !!!!')\n\n\tvar LEADING = /^(\\s)+/g;\n\tvar TRAILING = /(\\s)+$/g;\n\n\t/**\n\t* Creates an instance of TextTools - text measurement utility\n\t*\n\t* @constructor\n\t* @param {FontProvider} fontProvider\n\t*/\n\tfunction TextTools(fontProvider) {\n\t\tthis.fontProvider = fontProvider;\n\t}\n\n\t/**\n\t* Converts an array of strings (or inline-definition-objects) into a set of inlines\n\t* and their min/max widths\n\t* @param  {Object} textArray - an array of inline-definition-objects (or strings)\n\t* @param  {Number} maxWidth - max width a single Line should have\n\t* @return {Array} an array of Lines\n\t*/\n\tTextTools.prototype.buildInlines = function(textArray, styleContextStack) {\n\t\tvar measured = measure(this.fontProvider, textArray, styleContextStack);\n\n\t\tvar minWidth = 0,\n\t\t\tmaxWidth = 0,\n\t\t\tcurrentLineWidth;\n\n\t\tmeasured.forEach(function (inline) {\n\t\t\tminWidth = Math.max(minWidth, inline.width - inline.leadingCut - inline.trailingCut);\n\n\t\t\tif (!currentLineWidth) {\n\t\t\t\tcurrentLineWidth = { width: 0, leadingCut: inline.leadingCut, trailingCut: 0 };\n\t\t\t}\n\n\t\t\tcurrentLineWidth.width += inline.width;\n\t\t\tcurrentLineWidth.trailingCut = inline.trailingCut;\n\n\t\t\tmaxWidth = Math.max(maxWidth, getTrimmedWidth(currentLineWidth));\n\n\t\t\tif (inline.lineEnd) {\n\t\t\t\tcurrentLineWidth = null;\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\titems: measured,\n\t\t\tminWidth: minWidth,\n\t\t\tmaxWidth: maxWidth\n\t\t};\n\n\t\tfunction getTrimmedWidth(item) {\n\t\t\treturn Math.max(0, item.width - item.leadingCut - item.trailingCut);\n\t\t}\n\t};\n\n\t/**\n\t* Returns size of the specified string (without breaking it) using the current style\n\t* @param  {String} text              text to be measured\n\t* @param  {Object} styleContextStack current style stack\n\t* @return {Object}                   size of the specified string\n\t*/\n\tTextTools.prototype.sizeOfString = function(text, styleContextStack) {\n\t\ttext = text.replace('\\t', '    ');\n\n\t\t//TODO: refactor - extract from measure\n\t\tvar fontName = getStyleProperty({}, styleContextStack, 'font', 'Roboto');\n\t\tvar fontSize = getStyleProperty({}, styleContextStack, 'fontSize', 12);\n\t\tvar bold = getStyleProperty({}, styleContextStack, 'bold', false);\n\t\tvar italics = getStyleProperty({}, styleContextStack, 'italics', false);\n\t\tvar lineHeight = getStyleProperty({}, styleContextStack, 'lineHeight', 1);\n\n\t\tvar font = this.fontProvider.provideFont(fontName, bold, italics);\n\n\t\treturn {\n\t\t\twidth: font.widthOfString(removeDiacritics(text), fontSize),\n\t\t\theight: font.lineHeight(fontSize) * lineHeight,\n\t\t\tfontSize: fontSize,\n\t\t\tlineHeight: lineHeight,\n\t\t\tascender: font.ascender / 1000 * fontSize,\n\t\t\tdecender: font.decender / 1000 * fontSize\n\t\t};\n\t};\n\n\tfunction splitWords(text) {\n\t\tvar results = [];\n\t\ttext = text.replace('\\t', '    ');\n\n\t\tvar array = text.match(WORD_RE);\n\n\t\t// i < l - 1, because the last match is always an empty string\n\t\t// other empty strings however are treated as new-lines\n\t\tfor(var i = 0, l = array.length; i < l - 1; i++) {\n\t\t\tvar item = array[i];\n\n\t\t\tvar isNewLine = item.length === 0;\n\n\t\t\tif (!isNewLine) {\n\t\t\t\tresults.push({text: item});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar shouldAddLine = (results.length === 0 || results[results.length - 1].lineEnd);\n\n\t\t\t\tif (shouldAddLine) {\n\t\t\t\t\tresults.push({ text: '', lineEnd: true });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresults[results.length - 1].lineEnd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tfunction copyStyle(source, destination) {\n\t\tdestination = destination || {};\n\t\tsource = source || {}; //TODO: default style\n\n\t\tfor(var key in source) {\n\t\t\tif (key != 'text' && source.hasOwnProperty(key)) {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t}\n\n\t\treturn destination;\n\t}\n\n\tfunction normalizeTextArray(array) {\n\t\tvar results = [];\n\n\t\tif (typeof array == 'string' || array instanceof String) {\n\t\t\tarray = [ array ];\n\t\t}\n\n\t\tfor(var i = 0, l = array.length; i < l; i++) {\n\t\t\tvar item = array[i];\n\t\t\tvar style = null;\n\t\t\tvar words;\n\n\t\t\tif (typeof item == 'string' || item instanceof String) {\n\t\t\t\twords = splitWords(item);\n\t\t\t} else {\n\t\t\t\twords = splitWords(item.text);\n\t\t\t\tstyle = copyStyle(item);\n\t\t\t}\n\n\t\t\tfor(var i2 = 0, l2 = words.length; i2 < l2; i2++) {\n\t\t\t\tvar result = {\n\t\t\t\t\ttext: words[i2].text\n\t\t\t\t};\n\n\t\t\t\tif (words[i2].lineEnd) {\n\t\t\t\t\tresult.lineEnd = true;\n\t\t\t\t}\n\n\t\t\t\tcopyStyle(style, result);\n\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t//TODO: support for other languages (currently only polish is supported)\n\tvar diacriticsMap = { 'Ą': 'A', 'Ć': 'C', 'Ę': 'E', 'Ł': 'L', 'Ń': 'N', 'Ó': 'O', 'Ś': 'S', 'Ź': 'Z', 'Ż': 'Z', 'ą': 'a', 'ć': 'c', 'ę': 'e', 'ł': 'l', 'ń': 'n', 'ó': 'o', 'ś': 's', 'ź': 'z', 'ż': 'z' };\n\t// '  << atom.io workaround\n\n\tfunction removeDiacritics(text) {\n\t\treturn text.replace(/[^A-Za-z0-9\\[\\] ]/g, function(a) {\n\t\t\treturn diacriticsMap[a] || a;\n\t\t});\n\t}\n\n\tfunction getStyleProperty(item, styleContextStack, property, defaultValue) {\n\t\tvar value;\n\n\t\tif (item[property] !== undefined && item[property] !== null) {\n\t\t\t// item defines this property\n\t\t\treturn item[property];\n\t\t}\n\n\t\tif (!styleContextStack) return defaultValue;\n\n\t\tstyleContextStack.auto(item, function() {\n\t\t\tvalue = styleContextStack.getProperty(property);\n\t\t});\n\n\t\tif (value !== null && value !== undefined) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n\tfunction measure(fontProvider, textArray, styleContextStack) {\n\t\tvar normalized = normalizeTextArray(textArray);\n\n\t\tnormalized.forEach(function(item) {\n\t\t\tvar fontName = getStyleProperty(item, styleContextStack, 'font', 'Roboto');\n\t\t\tvar fontSize = getStyleProperty(item, styleContextStack, 'fontSize', 12);\n\t\t\tvar bold = getStyleProperty(item, styleContextStack, 'bold', false);\n\t\t\tvar italics = getStyleProperty(item, styleContextStack, 'italics', false);\n\t\t\tvar color = getStyleProperty(item, styleContextStack, 'color', 'black');\n\t\t\tvar decoration = getStyleProperty(item, styleContextStack, 'decoration', null);\n\t\t\tvar decorationColor = getStyleProperty(item, styleContextStack, 'decorationColor', null);\n\t\t\tvar decorationStyle = getStyleProperty(item, styleContextStack, 'decorationStyle', null);\n\t\t\tvar background = getStyleProperty(item, styleContextStack, 'background', null);\n\t\t\tvar lineHeight = getStyleProperty(item, styleContextStack, 'lineHeight', 1);\n\n\t\t\tvar font = fontProvider.provideFont(fontName, bold, italics);\n\n\t\t\t// TODO: character spacing\n\t\t\titem.width = font.widthOfString(removeDiacritics(item.text), fontSize);\n\t\t\titem.height = font.lineHeight(fontSize) * lineHeight;\n\n\t\t\tvar leadingSpaces = item.text.match(LEADING);\n\t\t\tvar trailingSpaces = item.text.match(TRAILING);\n\t\t\tif (leadingSpaces) {\n\t\t\t\titem.leadingCut = font.widthOfString(leadingSpaces[0], fontSize);\n\t\t\t}\n\t\t\telse {\n\t\t\t\titem.leadingCut = 0;\n\t\t\t}\n\n\t\t\tif (trailingSpaces) {\n\t\t\t\titem.trailingCut = font.widthOfString(trailingSpaces[0], fontSize);\n\t\t\t}\n\t\t\telse {\n\t\t\t\titem.trailingCut = 0;\n\t\t\t}\n\n\t\t\titem.alignment = getStyleProperty(item, styleContextStack, 'alignment', 'left');\n\t\t\titem.font = font;\n\t\t\titem.fontSize = fontSize;\n\t\t\titem.color = color;\n\t\t\titem.decoration = decoration;\n\t\t\titem.decorationColor = decorationColor;\n\t\t\titem.decorationStyle = decorationStyle;\n\t\t\titem.background = background;\n\t\t});\n\n\t\treturn normalized;\n\t}\n\n\t/****TESTS**** (add a leading '/' to uncomment)\n\tTextTools.prototype.splitWords = splitWords;\n\tTextTools.prototype.normalizeTextArray = normalizeTextArray;\n\tTextTools.prototype.measure = measure;\n\t// */\n\n\n\tmodule.exports = TextTools;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\t/**\n\t* Creates an instance of StyleContextStack used for style inheritance and style overrides\n\t*\n\t* @constructor\n\t* @this {StyleContextStack}\n\t* @param {Object} named styles dictionary\n\t* @param {Object} optional default style definition\n\t*/\n\tfunction StyleContextStack (styleDictionary, defaultStyle) {\n\t\tthis.defaultStyle = defaultStyle || {};\n\t\tthis.styleDictionary = styleDictionary;\n\t\tthis.styleOverrides = [];\n\t}\n\n\t/**\n\t* Creates cloned version of current stack\n\t* @return {StyleContextStack} current stack snapshot\n\t*/\n\tStyleContextStack.prototype.clone = function() {\n\t\tvar stack = new StyleContextStack(this.styleDictionary, this.defaultStyle);\n\n\t\tthis.styleOverrides.forEach(function(item) {\n\t\t\tstack.styleOverrides.push(item);\n\t\t});\n\n\t\treturn stack;\n\t};\n\n\t/**\n\t* Pushes style-name or style-overrides-object onto the stack for future evaluation\n\t*\n\t* @param {String|Object} styleNameOrOverride style-name (referring to styleDictionary) or\n\t*                                            a new dictionary defining overriding properties\n\t*/\n\tStyleContextStack.prototype.push = function(styleNameOrOverride) {\n\t\tthis.styleOverrides.push(styleNameOrOverride);\n\t};\n\n\t/**\n\t* Removes last style-name or style-overrides-object from the stack\n\t*\n\t* @param {Number} howMany - optional number of elements to be popped (if not specified,\n\t*                           one element will be removed from the stack)\n\t*/\n\tStyleContextStack.prototype.pop = function(howMany) {\n\t\thowMany = howMany || 1;\n\n\t\twhile(howMany-- > 0) {\n\t\t\tthis.styleOverrides.pop();\n\t\t}\n\t};\n\n\t/**\n\t* Creates a set of named styles or/and a style-overrides-object based on the item,\n\t* pushes those elements onto the stack for future evaluation and returns the number\n\t* of elements pushed, so they can be easily poped then.\n\t*\n\t* @param {Object} item - an object with optional style property and/or style overrides\n\t* @return the number of items pushed onto the stack\n\t*/\n\tStyleContextStack.prototype.autopush = function(item) {\n\t\tif (typeof item === 'string' || item instanceof String) return 0;\n\n\t\tvar styleNames = [];\n\n\t\tif (item.style) {\n\t\t\tif (item.style instanceof Array) {\n\t\t\t\tstyleNames = item.style;\n\t\t\t} else {\n\t\t\t\tstyleNames = [ item.style ];\n\t\t\t}\n\t\t}\n\n\t\tfor(var i = 0, l = styleNames.length; i < l; i++) {\n\t\t\tthis.push(styleNames[i]);\n\t\t}\n\n\t\tvar styleOverrideObject = {};\n\t\tvar pushSOO = false;\n\n\t\t[\n\t\t\t'font',\n\t\t\t'fontSize',\n\t\t\t'bold',\n\t\t\t'italics',\n\t\t\t'alignment',\n\t\t\t'color',\n\t\t\t'columnGap',\n\t\t\t'fillColor',\n\t\t\t'decoration',\n\t\t\t'decorationStyle',\n\t\t\t'decorationColor',\n\t\t\t'background',\n\t\t\t'lineHeight'\n\t\t\t//'tableCellPadding'\n\t\t\t// 'cellBorder',\n\t\t\t// 'headerCellBorder',\n\t\t\t// 'oddRowCellBorder',\n\t\t\t// 'evenRowCellBorder',\n\t\t\t// 'tableBorder'\n\t\t].forEach(function(key) {\n\t\t\tif (item[key] !== undefined && item[key] !== null) {\n\t\t\t\tstyleOverrideObject[key] = item[key];\n\t\t\t\tpushSOO = true;\n\t\t\t}\n\t\t});\n\n\t\tif (pushSOO) {\n\t\t\tthis.push(styleOverrideObject);\n\t\t}\n\n\t\treturn styleNames.length + (pushSOO ? 1 : 0);\n\t};\n\n\t/**\n\t* Automatically pushes elements onto the stack, using autopush based on item,\n\t* executes callback and then pops elements back. Returns value returned by callback\n\t*\n\t* @param  {Object}   item - an object with optional style property and/or style overrides\n\t* @param  {Function} function to be called between autopush and pop\n\t* @return {Object} value returned by callback\n\t*/\n\tStyleContextStack.prototype.auto = function(item, callback) {\n\t\tvar pushedItems = this.autopush(item);\n\t\tvar result = callback();\n\n\t\tif (pushedItems > 0) {\n\t\t\tthis.pop(pushedItems);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Evaluates stack and returns value of a named property\n\t*\n\t* @param {String} property - property name\n\t* @return property value or null if not found\n\t*/\n\tStyleContextStack.prototype.getProperty = function(property) {\n\t\tif (this.styleOverrides) {\n\t\t\tfor(var i = this.styleOverrides.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = this.styleOverrides[i];\n\n\t\t\t\tif (typeof item == 'string' || item instanceof String) {\n\t\t\t\t\t// named-style-override\n\n\t\t\t\t\tvar style = this.styleDictionary[item];\n\t\t\t\t\tif (style && style[property] !== null && style[property] !== undefined) {\n\t\t\t\t\t\treturn style[property];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// style-overrides-object\n\t\t\t\t\tif (item[property] !== undefined && item[property] !== null) {\n\t\t\t\t\t\treturn item[property];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.defaultStyle && this.defaultStyle[property];\n\t};\n\n\tmodule.exports = StyleContextStack;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFDocument - represents an entire PDF document\n\tBy Devon Govett\n\t */\n\n\t(function() {\n\t  var PDFDocument, PDFObject, PDFPage, PDFReference, fs, stream,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  stream = __webpack_require__(46);\n\n\t  fs = __webpack_require__(10);\n\n\t  PDFObject = __webpack_require__(32);\n\n\t  PDFReference = __webpack_require__(12);\n\n\t  PDFPage = __webpack_require__(38);\n\n\t  PDFDocument = (function(_super) {\n\t    var mixin;\n\n\t    __extends(PDFDocument, _super);\n\n\t    function PDFDocument(options) {\n\t      var key, val, _ref, _ref1;\n\t      this.options = options != null ? options : {};\n\t      PDFDocument.__super__.constructor.apply(this, arguments);\n\t      this.version = 1.3;\n\t      this.compress = (_ref = this.options.compress) != null ? _ref : true;\n\t      this._pageBuffer = [];\n\t      this._pageBufferStart = 0;\n\t      this._offsets = [];\n\t      this._waiting = 0;\n\t      this._ended = false;\n\t      this._offset = 0;\n\t      this._root = this.ref({\n\t        Type: 'Catalog',\n\t        Pages: this.ref({\n\t          Type: 'Pages',\n\t          Count: 0,\n\t          Kids: []\n\t        })\n\t      });\n\t      this.page = null;\n\t      this.initColor();\n\t      this.initVector();\n\t      this.initFonts();\n\t      this.initText();\n\t      this.initImages();\n\t      this.info = {\n\t        Producer: 'PDFKit',\n\t        Creator: 'PDFKit',\n\t        CreationDate: new Date()\n\t      };\n\t      if (this.options.info) {\n\t        _ref1 = this.options.info;\n\t        for (key in _ref1) {\n\t          val = _ref1[key];\n\t          this.info[key] = val;\n\t        }\n\t      }\n\t      this._write(\"%PDF-\" + this.version);\n\t      this._write(\"%\\xFF\\xFF\\xFF\\xFF\");\n\t      this.addPage();\n\t    }\n\n\t    mixin = function(methods) {\n\t      var method, name, _results;\n\t      _results = [];\n\t      for (name in methods) {\n\t        method = methods[name];\n\t        _results.push(PDFDocument.prototype[name] = method);\n\t      }\n\t      return _results;\n\t    };\n\n\t    mixin(__webpack_require__(41));\n\n\t    mixin(__webpack_require__(39));\n\n\t    mixin(__webpack_require__(44));\n\n\t    mixin(__webpack_require__(40));\n\n\t    mixin(__webpack_require__(42));\n\n\t    mixin(__webpack_require__(43));\n\n\t    PDFDocument.prototype.addPage = function(options) {\n\t      var pages;\n\t      if (options == null) {\n\t        options = this.options;\n\t      }\n\t      if (!this.options.bufferPages) {\n\t        this.flushPages();\n\t      }\n\t      this.page = new PDFPage(this, options);\n\t      this._pageBuffer.push(this.page);\n\t      pages = this._root.data.Pages.data;\n\t      pages.Kids.push(this.page.dictionary);\n\t      pages.Count++;\n\t      this.x = this.page.margins.left;\n\t      this.y = this.page.margins.top;\n\t      this._ctm = [1, 0, 0, 1, 0, 0];\n\t      this.transform(1, 0, 0, -1, 0, this.page.height);\n\t      return this;\n\t    };\n\n\t    PDFDocument.prototype.bufferedPageRange = function() {\n\t      return {\n\t        start: this._pageBufferStart,\n\t        count: this._pageBuffer.length\n\t      };\n\t    };\n\n\t    PDFDocument.prototype.switchToPage = function(n) {\n\t      var page;\n\t      if (!(page = this._pageBuffer[n - this._pageBufferStart])) {\n\t        throw new Error(\"switchToPage(\" + n + \") out of bounds, current buffer covers pages \" + this._pageBufferStart + \" to \" + (this._pageBufferStart + this._pageBuffer.length - 1));\n\t      }\n\t      return this.page = page;\n\t    };\n\n\t    PDFDocument.prototype.flushPages = function() {\n\t      var page, pages, _i, _len;\n\t      pages = this._pageBuffer;\n\t      this._pageBuffer = [];\n\t      this._pageBufferStart += pages.length;\n\t      for (_i = 0, _len = pages.length; _i < _len; _i++) {\n\t        page = pages[_i];\n\t        page.end();\n\t      }\n\t    };\n\n\t    PDFDocument.prototype.ref = function(data) {\n\t      var ref;\n\t      ref = new PDFReference(this, this._offsets.length + 1, data);\n\t      this._offsets.push(null);\n\t      this._waiting++;\n\t      return ref;\n\t    };\n\n\t    PDFDocument.prototype._read = function() {};\n\n\t    PDFDocument.prototype._write = function(data) {\n\t      if (!Buffer.isBuffer(data)) {\n\t        data = new Buffer(data + '\\n', 'binary');\n\t      }\n\t      this.push(data);\n\t      return this._offset += data.length;\n\t    };\n\n\t    PDFDocument.prototype.addContent = function(data) {\n\t      this.page.write(data);\n\t      return this;\n\t    };\n\n\t    PDFDocument.prototype._refEnd = function(ref) {\n\t      this._offsets[ref.id - 1] = ref.offset;\n\t      if (--this._waiting === 0 && this._ended) {\n\t        this._finalize();\n\t        return this._ended = false;\n\t      }\n\t    };\n\n\t    PDFDocument.prototype.write = function(filename, fn) {\n\t      var err;\n\t      err = new Error('PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.');\n\t      console.warn(err.stack);\n\t      this.pipe(fs.createWriteStream(filename));\n\t      this.end();\n\t      return this.once('end', fn);\n\t    };\n\n\t    PDFDocument.prototype.output = function(fn) {\n\t      throw new Error('PDFDocument#output is deprecated, and has been removed from PDFKit. Please pipe the document into a Node stream.');\n\t    };\n\n\t    PDFDocument.prototype.end = function() {\n\t      var font, key, name, val, _ref, _ref1;\n\t      this.flushPages();\n\t      this._info = this.ref();\n\t      _ref = this.info;\n\t      for (key in _ref) {\n\t        val = _ref[key];\n\t        if (typeof val === 'string') {\n\t          val = new String(val);\n\t        }\n\t        this._info.data[key] = val;\n\t      }\n\t      this._info.end();\n\t      _ref1 = this._fontFamilies;\n\t      for (name in _ref1) {\n\t        font = _ref1[name];\n\t        font.embed();\n\t      }\n\t      this._root.end();\n\t      this._root.data.Pages.end();\n\t      if (this._waiting === 0) {\n\t        return this._finalize();\n\t      } else {\n\t        return this._ended = true;\n\t      }\n\t    };\n\n\t    PDFDocument.prototype._finalize = function(fn) {\n\t      var offset, xRefOffset, _i, _len, _ref;\n\t      xRefOffset = this._offset;\n\t      this._write(\"xref\");\n\t      this._write(\"0 \" + (this._offsets.length + 1));\n\t      this._write(\"0000000000 65535 f \");\n\t      _ref = this._offsets;\n\t      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t        offset = _ref[_i];\n\t        offset = ('0000000000' + offset).slice(-10);\n\t        this._write(offset + ' 00000 n ');\n\t      }\n\t      this._write('trailer');\n\t      this._write(PDFObject.convert({\n\t        Size: this._offsets.length + 1,\n\t        Root: this._root,\n\t        Info: this._info\n\t      }));\n\t      this._write('startxref');\n\t      this._write(\"\" + xRefOffset);\n\t      this._write('%%EOF');\n\t      return this.push(null);\n\t    };\n\n\t    PDFDocument.prototype.toString = function() {\n\t      return \"[object PDFDocument]\";\n\t    };\n\n\t    return PDFDocument;\n\n\t  })(stream.Readable);\n\n\t  module.exports = PDFDocument;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.read = function(buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m,\n\t      eLen = nBytes * 8 - mLen - 1,\n\t      eMax = (1 << eLen) - 1,\n\t      eBias = eMax >> 1,\n\t      nBits = -7,\n\t      i = isLE ? (nBytes - 1) : 0,\n\t      d = isLE ? -1 : 1,\n\t      s = buffer[offset + i];\n\n\t  i += d;\n\n\t  e = s & ((1 << (-nBits)) - 1);\n\t  s >>= (-nBits);\n\t  nBits += eLen;\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n\t  m = e & ((1 << (-nBits)) - 1);\n\t  e >>= (-nBits);\n\t  nBits += mLen;\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n\t  if (e === 0) {\n\t    e = 1 - eBias;\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity);\n\t  } else {\n\t    m = m + Math.pow(2, mLen);\n\t    e = e - eBias;\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n\t};\n\n\texports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c,\n\t      eLen = nBytes * 8 - mLen - 1,\n\t      eMax = (1 << eLen) - 1,\n\t      eBias = eMax >> 1,\n\t      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n\t      i = isLE ? 0 : (nBytes - 1),\n\t      d = isLE ? 1 : -1,\n\t      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n\t  value = Math.abs(value);\n\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2);\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias);\n\t    }\n\t    if (value * c >= 2) {\n\t      e++;\n\t      c /= 2;\n\t    }\n\n\t    if (e + eBias >= eMax) {\n\t      m = 0;\n\t      e = eMax;\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n\t  e = (e << mLen) | m;\n\t  eLen += mLen;\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n\t  buffer[offset + i - d] |= s * 128;\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\n\t/**\n\t * isArray\n\t */\n\n\tvar isArray = Array.isArray;\n\n\t/**\n\t * toString\n\t */\n\n\tvar str = Object.prototype.toString;\n\n\t/**\n\t * Whether or not the given `val`\n\t * is an array.\n\t *\n\t * example:\n\t *\n\t *        isArray([]);\n\t *        // > true\n\t *        isArray(arguments);\n\t *        // > false\n\t *        isArray('');\n\t *        // > false\n\t *\n\t * @param {mixed} val\n\t * @return {bool}\n\t */\n\n\tmodule.exports = isArray || function (val) {\n\t  return !! val && '[object Array]' == str.call(val);\n\t};\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t;(function (exports) {\n\t\t'use strict';\n\n\t  var Arr = (typeof Uint8Array !== 'undefined')\n\t    ? Uint8Array\n\t    : Array\n\n\t\tvar PLUS   = '+'.charCodeAt(0)\n\t\tvar SLASH  = '/'.charCodeAt(0)\n\t\tvar NUMBER = '0'.charCodeAt(0)\n\t\tvar LOWER  = 'a'.charCodeAt(0)\n\t\tvar UPPER  = 'A'.charCodeAt(0)\n\t\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\t\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\t\tfunction decode (elt) {\n\t\t\tvar code = elt.charCodeAt(0)\n\t\t\tif (code === PLUS ||\n\t\t\t    code === PLUS_URL_SAFE)\n\t\t\t\treturn 62 // '+'\n\t\t\tif (code === SLASH ||\n\t\t\t    code === SLASH_URL_SAFE)\n\t\t\t\treturn 63 // '/'\n\t\t\tif (code < NUMBER)\n\t\t\t\treturn -1 //no match\n\t\t\tif (code < NUMBER + 10)\n\t\t\t\treturn code - NUMBER + 26 + 26\n\t\t\tif (code < UPPER + 26)\n\t\t\t\treturn code - UPPER\n\t\t\tif (code < LOWER + 26)\n\t\t\t\treturn code - LOWER + 26\n\t\t}\n\n\t\tfunction b64ToByteArray (b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\t\tif (b64.length % 4 > 0) {\n\t\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t\t}\n\n\t\t\t// the number of equal signs (place holders)\n\t\t\t// if there are two placeholders, than the two characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t\t// this is just a cheap hack to not do indexOf twice\n\t\t\tvar len = b64.length\n\t\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t\t// base64 is 4/3 + up to two characters of the original data\n\t\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\t\tvar L = 0\n\n\t\t\tfunction push (v) {\n\t\t\t\tarr[L++] = v\n\t\t\t}\n\n\t\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\tif (placeHolders === 2) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t} else if (placeHolders === 1) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\treturn arr\n\t\t}\n\n\t\tfunction uint8ToBase64 (uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput = \"\",\n\t\t\t\ttemp, length\n\n\t\t\tfunction encode (num) {\n\t\t\t\treturn lookup.charAt(num)\n\t\t\t}\n\n\t\t\tfunction tripletToBase64 (num) {\n\t\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t\t}\n\n\t\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\t\toutput += tripletToBase64(temp)\n\t\t\t}\n\n\t\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\t\tswitch (extraBytes) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\t\toutput += '=='\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\t\toutput += '='\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\treturn output\n\t\t}\n\n\t\texports.toByteArray = b64ToByteArray\n\t\texports.fromByteArray = uint8ToBase64\n\t}(false ? (this.base64js = {}) : exports))\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFObject - converts JavaScript types into their corrisponding PDF types.\n\tBy Devon Govett\n\t */\n\n\t(function() {\n\t  var PDFObject, PDFReference;\n\n\t  PDFObject = (function() {\n\t    var escapable, escapableRe, pad, swapBytes;\n\n\t    function PDFObject() {}\n\n\t    pad = function(str, length) {\n\t      return (Array(length + 1).join('0') + str).slice(-length);\n\t    };\n\n\t    escapableRe = /[\\n\\r\\t\\b\\f\\(\\)\\\\]/g;\n\n\t    escapable = {\n\t      '\\n': '\\\\n',\n\t      '\\r': '\\\\r',\n\t      '\\t': '\\\\t',\n\t      '\\b': '\\\\b',\n\t      '\\f': '\\\\f',\n\t      '\\\\': '\\\\\\\\',\n\t      '(': '\\\\(',\n\t      ')': '\\\\)'\n\t    };\n\n\t    swapBytes = function(buff) {\n\t      var a, i, l, _i, _ref;\n\t      l = buff.length;\n\t      if (l & 0x01) {\n\t        throw new Error(\"Buffer length must be even\");\n\t      } else {\n\t        for (i = _i = 0, _ref = l - 1; _i < _ref; i = _i += 2) {\n\t          a = buff[i];\n\t          buff[i] = buff[i + 1];\n\t          buff[i + 1] = a;\n\t        }\n\t      }\n\t      return buff;\n\t    };\n\n\t    PDFObject.convert = function(object) {\n\t      var e, i, isUnicode, items, key, out, string, val, _i, _ref;\n\t      if (typeof object === 'string') {\n\t        return '/' + object;\n\t      } else if (object instanceof String) {\n\t        string = object.replace(escapableRe, function(c) {\n\t          return escapable[c];\n\t        });\n\t        isUnicode = false;\n\t        for (i = _i = 0, _ref = string.length; _i < _ref; i = _i += 1) {\n\t          if (string.charCodeAt(i) > 0x7f) {\n\t            isUnicode = true;\n\t            break;\n\t          }\n\t        }\n\t        if (isUnicode) {\n\t          string = swapBytes(new Buffer('\\ufeff' + string, 'utf16le')).toString('binary');\n\t        }\n\t        return '(' + string + ')';\n\t      } else if (Buffer.isBuffer(object)) {\n\t        return '<' + object.toString('hex') + '>';\n\t      } else if (object instanceof PDFReference) {\n\t        return object.toString();\n\t      } else if (object instanceof Date) {\n\t        return '(D:' + pad(object.getUTCFullYear(), 4) + pad(object.getUTCMonth(), 2) + pad(object.getUTCDate(), 2) + pad(object.getUTCHours(), 2) + pad(object.getUTCMinutes(), 2) + pad(object.getUTCSeconds(), 2) + 'Z)';\n\t      } else if (Array.isArray(object)) {\n\t        items = ((function() {\n\t          var _j, _len, _results;\n\t          _results = [];\n\t          for (_j = 0, _len = object.length; _j < _len; _j++) {\n\t            e = object[_j];\n\t            _results.push(PDFObject.convert(e));\n\t          }\n\t          return _results;\n\t        })()).join(' ');\n\t        return '[' + items + ']';\n\t      } else if ({}.toString.call(object) === '[object Object]') {\n\t        out = ['<<'];\n\t        for (key in object) {\n\t          val = object[key];\n\t          out.push('/' + key + ' ' + PDFObject.convert(val));\n\t        }\n\t        out.push('>>');\n\t        return out.join('\\n');\n\t      } else {\n\t        return '' + object;\n\t      }\n\t    };\n\n\t    return PDFObject;\n\n\t  })();\n\n\t  module.exports = PDFObject;\n\n\t  PDFReference = __webpack_require__(12);\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\t/*jshint -W004 */\n\t/* qr.js -- QR code generator in Javascript (revision 2011-01-19)\n\t * Written by Kang Seonghoon <public+qrjs@mearie.org>.\n\t *\n\t * This source code is in the public domain; if your jurisdiction does not\n\t * recognize the public domain the terms of Creative Commons CC0 license\n\t * apply. In the other words, you can always do what you want.\n\t */\n\n\n\t// per-version information (cf. JIS X 0510:2004 pp. 30--36, 71)\n\t//\n\t// [0]: the degree of generator polynomial by ECC levels\n\t// [1]: # of code blocks by ECC levels\n\t// [2]: left-top positions of alignment patterns\n\t//\n\t// the number in this table (in particular, [0]) does not exactly match with\n\t// the numbers in the specficiation. see augumenteccs below for the reason.\n\tvar VERSIONS = [\n\t\tnull,\n\t\t[[10, 7,17,13], [ 1, 1, 1, 1], []],\n\t\t[[16,10,28,22], [ 1, 1, 1, 1], [4,16]],\n\t\t[[26,15,22,18], [ 1, 1, 2, 2], [4,20]],\n\t\t[[18,20,16,26], [ 2, 1, 4, 2], [4,24]],\n\t\t[[24,26,22,18], [ 2, 1, 4, 4], [4,28]],\n\t\t[[16,18,28,24], [ 4, 2, 4, 4], [4,32]],\n\t\t[[18,20,26,18], [ 4, 2, 5, 6], [4,20,36]],\n\t\t[[22,24,26,22], [ 4, 2, 6, 6], [4,22,40]],\n\t\t[[22,30,24,20], [ 5, 2, 8, 8], [4,24,44]],\n\t\t[[26,18,28,24], [ 5, 4, 8, 8], [4,26,48]],\n\t\t[[30,20,24,28], [ 5, 4,11, 8], [4,28,52]],\n\t\t[[22,24,28,26], [ 8, 4,11,10], [4,30,56]],\n\t\t[[22,26,22,24], [ 9, 4,16,12], [4,32,60]],\n\t\t[[24,30,24,20], [ 9, 4,16,16], [4,24,44,64]],\n\t\t[[24,22,24,30], [10, 6,18,12], [4,24,46,68]],\n\t\t[[28,24,30,24], [10, 6,16,17], [4,24,48,72]],\n\t\t[[28,28,28,28], [11, 6,19,16], [4,28,52,76]],\n\t\t[[26,30,28,28], [13, 6,21,18], [4,28,54,80]],\n\t\t[[26,28,26,26], [14, 7,25,21], [4,28,56,84]],\n\t\t[[26,28,28,30], [16, 8,25,20], [4,32,60,88]],\n\t\t[[26,28,30,28], [17, 8,25,23], [4,26,48,70,92]],\n\t\t[[28,28,24,30], [17, 9,34,23], [4,24,48,72,96]],\n\t\t[[28,30,30,30], [18, 9,30,25], [4,28,52,76,100]],\n\t\t[[28,30,30,30], [20,10,32,27], [4,26,52,78,104]],\n\t\t[[28,26,30,30], [21,12,35,29], [4,30,56,82,108]],\n\t\t[[28,28,30,28], [23,12,37,34], [4,28,56,84,112]],\n\t\t[[28,30,30,30], [25,12,40,34], [4,32,60,88,116]],\n\t\t[[28,30,30,30], [26,13,42,35], [4,24,48,72,96,120]],\n\t\t[[28,30,30,30], [28,14,45,38], [4,28,52,76,100,124]],\n\t\t[[28,30,30,30], [29,15,48,40], [4,24,50,76,102,128]],\n\t\t[[28,30,30,30], [31,16,51,43], [4,28,54,80,106,132]],\n\t\t[[28,30,30,30], [33,17,54,45], [4,32,58,84,110,136]],\n\t\t[[28,30,30,30], [35,18,57,48], [4,28,56,84,112,140]],\n\t\t[[28,30,30,30], [37,19,60,51], [4,32,60,88,116,144]],\n\t\t[[28,30,30,30], [38,19,63,53], [4,28,52,76,100,124,148]],\n\t\t[[28,30,30,30], [40,20,66,56], [4,22,48,74,100,126,152]],\n\t\t[[28,30,30,30], [43,21,70,59], [4,26,52,78,104,130,156]],\n\t\t[[28,30,30,30], [45,22,74,62], [4,30,56,82,108,134,160]],\n\t\t[[28,30,30,30], [47,24,77,65], [4,24,52,80,108,136,164]],\n\t\t[[28,30,30,30], [49,25,81,68], [4,28,56,84,112,140,168]]];\n\n\t// mode constants (cf. Table 2 in JIS X 0510:2004 p. 16)\n\tvar MODE_TERMINATOR = 0;\n\tvar MODE_NUMERIC = 1, MODE_ALPHANUMERIC = 2, MODE_OCTET = 4, MODE_KANJI = 8;\n\n\t// validation regexps\n\tvar NUMERIC_REGEXP = /^\\d*$/;\n\tvar ALPHANUMERIC_REGEXP = /^[A-Za-z0-9 $%*+\\-./:]*$/;\n\tvar ALPHANUMERIC_OUT_REGEXP = /^[A-Z0-9 $%*+\\-./:]*$/;\n\n\t// ECC levels (cf. Table 22 in JIS X 0510:2004 p. 45)\n\tvar ECCLEVEL_L = 1, ECCLEVEL_M = 0, ECCLEVEL_Q = 3, ECCLEVEL_H = 2;\n\n\t// GF(2^8)-to-integer mapping with a reducing polynomial x^8+x^4+x^3+x^2+1\n\t// invariant: GF256_MAP[GF256_INVMAP[i]] == i for all i in [1,256)\n\tvar GF256_MAP = [], GF256_INVMAP = [-1];\n\tfor (var i = 0, v = 1; i < 255; ++i) {\n\t\tGF256_MAP.push(v);\n\t\tGF256_INVMAP[v] = i;\n\t\tv = (v * 2) ^ (v >= 128 ? 0x11d : 0);\n\t}\n\n\t// generator polynomials up to degree 30\n\t// (should match with polynomials in JIS X 0510:2004 Appendix A)\n\t//\n\t// generator polynomial of degree K is product of (x-\\alpha^0), (x-\\alpha^1),\n\t// ..., (x-\\alpha^(K-1)). by convention, we omit the K-th coefficient (always 1)\n\t// from the result; also other coefficients are written in terms of the exponent\n\t// to \\alpha to avoid the redundant calculation. (see also calculateecc below.)\n\tvar GF256_GENPOLY = [[]];\n\tfor (var i = 0; i < 30; ++i) {\n\t\tvar prevpoly = GF256_GENPOLY[i], poly = [];\n\t\tfor (var j = 0; j <= i; ++j) {\n\t\t\tvar a = (j < i ? GF256_MAP[prevpoly[j]] : 0);\n\t\t\tvar b = GF256_MAP[(i + (prevpoly[j-1] || 0)) % 255];\n\t\t\tpoly.push(GF256_INVMAP[a ^ b]);\n\t\t}\n\t\tGF256_GENPOLY.push(poly);\n\t}\n\n\t// alphanumeric character mapping (cf. Table 5 in JIS X 0510:2004 p. 19)\n\tvar ALPHANUMERIC_MAP = {};\n\tfor (var i = 0; i < 45; ++i) {\n\t\tALPHANUMERIC_MAP['0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:'.charAt(i)] = i;\n\t}\n\n\t// mask functions in terms of row # and column #\n\t// (cf. Table 20 in JIS X 0510:2004 p. 42)\n\tvar MASKFUNCS = [\n\t\tfunction(i,j) { return (i+j) % 2 === 0; },\n\t\tfunction(i,j) { return i % 2 === 0; },\n\t\tfunction(i,j) { return j % 3 === 0; },\n\t\tfunction(i,j) { return (i+j) % 3 === 0; },\n\t\tfunction(i,j) { return (((i/2)|0) + ((j/3)|0)) % 2 === 0; },\n\t\tfunction(i,j) { return (i*j) % 2 + (i*j) % 3 === 0; },\n\t\tfunction(i,j) { return ((i*j) % 2 + (i*j) % 3) % 2 === 0; },\n\t\tfunction(i,j) { return ((i+j) % 2 + (i*j) % 3) % 2 === 0; }];\n\n\t// returns true when the version information has to be embeded.\n\tvar needsverinfo = function(ver) { return ver > 6; };\n\n\t// returns the size of entire QR code for given version.\n\tvar getsizebyver = function(ver) { return 4 * ver + 17; };\n\n\t// returns the number of bits available for code words in this version.\n\tvar nfullbits = function(ver) {\n\t\t/*\n\t\t * |<--------------- n --------------->|\n\t\t * |        |<----- n-17 ---->|        |\n\t\t * +-------+                ///+-------+ ----\n\t\t * |       |                ///|       |    ^\n\t\t * |  9x9  |       @@@@@    ///|  9x8  |    |\n\t\t * |       | # # # @5x5@ # # # |       |    |\n\t\t * +-------+       @@@@@       +-------+    |\n\t\t *       #                               ---|\n\t\t *                                        ^ |\n\t\t *       #                                |\n\t\t *     @@@@@       @@@@@       @@@@@      | n\n\t\t *     @5x5@       @5x5@       @5x5@   n-17\n\t\t *     @@@@@       @@@@@       @@@@@      | |\n\t\t *       #                                | |\n\t\t * //////                                 v |\n\t\t * //////#                               ---|\n\t\t * +-------+       @@@@@       @@@@@        |\n\t\t * |       |       @5x5@       @5x5@        |\n\t\t * |  8x9  |       @@@@@       @@@@@        |\n\t\t * |       |                                v\n\t\t * +-------+                             ----\n\t\t *\n\t\t * when the entire code has n^2 modules and there are m^2-3 alignment\n\t\t * patterns, we have:\n\t\t * - 225 (= 9x9 + 9x8 + 8x9) modules for finder patterns and\n\t\t *   format information;\n\t\t * - 2n-34 (= 2(n-17)) modules for timing patterns;\n\t\t * - 36 (= 3x6 + 6x3) modules for version information, if any;\n\t\t * - 25m^2-75 (= (m^2-3)(5x5)) modules for alignment patterns\n\t\t *   if any, but 10m-20 (= 2(m-2)x5) of them overlaps with\n\t\t *   timing patterns.\n\t\t */\n\t\tvar v = VERSIONS[ver];\n\t\tvar nbits = 16*ver*ver + 128*ver + 64; // finder, timing and format info.\n\t\tif (needsverinfo(ver)) nbits -= 36; // version information\n\t\tif (v[2].length) { // alignment patterns\n\t\t\tnbits -= 25 * v[2].length * v[2].length - 10 * v[2].length - 55;\n\t\t}\n\t\treturn nbits;\n\t};\n\n\t// returns the number of bits available for data portions (i.e. excludes ECC\n\t// bits but includes mode and length bits) in this version and ECC level.\n\tvar ndatabits = function(ver, ecclevel) {\n\t\tvar nbits = nfullbits(ver) & ~7; // no sub-octet code words\n\t\tvar v = VERSIONS[ver];\n\t\tnbits -= 8 * v[0][ecclevel] * v[1][ecclevel]; // ecc bits\n\t\treturn nbits;\n\t};\n\n\t// returns the number of bits required for the length of data.\n\t// (cf. Table 3 in JIS X 0510:2004 p. 16)\n\tvar ndatalenbits = function(ver, mode) {\n\t\tswitch (mode) {\n\t\tcase MODE_NUMERIC: return (ver < 10 ? 10 : ver < 27 ? 12 : 14);\n\t\tcase MODE_ALPHANUMERIC: return (ver < 10 ? 9 : ver < 27 ? 11 : 13);\n\t\tcase MODE_OCTET: return (ver < 10 ? 8 : 16);\n\t\tcase MODE_KANJI: return (ver < 10 ? 8 : ver < 27 ? 10 : 12);\n\t\t}\n\t};\n\n\t// returns the maximum length of data possible in given configuration.\n\tvar getmaxdatalen = function(ver, mode, ecclevel) {\n\t\tvar nbits = ndatabits(ver, ecclevel) - 4 - ndatalenbits(ver, mode); // 4 for mode bits\n\t\tswitch (mode) {\n\t\tcase MODE_NUMERIC:\n\t\t\treturn ((nbits/10) | 0) * 3 + (nbits%10 < 4 ? 0 : nbits%10 < 7 ? 1 : 2);\n\t\tcase MODE_ALPHANUMERIC:\n\t\t\treturn ((nbits/11) | 0) * 2 + (nbits%11 < 6 ? 0 : 1);\n\t\tcase MODE_OCTET:\n\t\t\treturn (nbits/8) | 0;\n\t\tcase MODE_KANJI:\n\t\t\treturn (nbits/13) | 0;\n\t\t}\n\t};\n\n\t// checks if the given data can be encoded in given mode, and returns\n\t// the converted data for the further processing if possible. otherwise\n\t// returns null.\n\t//\n\t// this function does not check the length of data; it is a duty of\n\t// encode function below (as it depends on the version and ECC level too).\n\tvar validatedata = function(mode, data) {\n\t\tswitch (mode) {\n\t\tcase MODE_NUMERIC:\n\t\t\tif (!data.match(NUMERIC_REGEXP)) return null;\n\t\t\treturn data;\n\n\t\tcase MODE_ALPHANUMERIC:\n\t\t\tif (!data.match(ALPHANUMERIC_REGEXP)) return null;\n\t\t\treturn data.toUpperCase();\n\n\t\tcase MODE_OCTET:\n\t\t\tif (typeof data === 'string') { // encode as utf-8 string\n\t\t\t\tvar newdata = [];\n\t\t\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t\t\tvar ch = data.charCodeAt(i);\n\t\t\t\t\tif (ch < 0x80) {\n\t\t\t\t\t\tnewdata.push(ch);\n\t\t\t\t\t} else if (ch < 0x800) {\n\t\t\t\t\t\tnewdata.push(0xc0 | (ch >> 6),\n\t\t\t\t\t\t\t0x80 | (ch & 0x3f));\n\t\t\t\t\t} else if (ch < 0x10000) {\n\t\t\t\t\t\tnewdata.push(0xe0 | (ch >> 12),\n\t\t\t\t\t\t\t0x80 | ((ch >> 6) & 0x3f),\n\t\t\t\t\t\t\t0x80 | (ch & 0x3f));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewdata.push(0xf0 | (ch >> 18),\n\t\t\t\t\t\t\t0x80 | ((ch >> 12) & 0x3f),\n\t\t\t\t\t\t\t0x80 | ((ch >> 6) & 0x3f),\n\t\t\t\t\t\t\t0x80 | (ch & 0x3f));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newdata;\n\t\t\t} else {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\t};\n\n\t// returns the code words (sans ECC bits) for given data and configurations.\n\t// requires data to be preprocessed by validatedata. no length check is\n\t// performed, and everything has to be checked before calling this function.\n\tvar encode = function(ver, mode, data, maxbuflen) {\n\t\tvar buf = [];\n\t\tvar bits = 0, remaining = 8;\n\t\tvar datalen = data.length;\n\n\t\t// this function is intentionally no-op when n=0.\n\t\tvar pack = function(x, n) {\n\t\t\tif (n >= remaining) {\n\t\t\t\tbuf.push(bits | (x >> (n -= remaining)));\n\t\t\t\twhile (n >= 8) buf.push((x >> (n -= 8)) & 255);\n\t\t\t\tbits = 0;\n\t\t\t\tremaining = 8;\n\t\t\t}\n\t\t\tif (n > 0) bits |= (x & ((1 << n) - 1)) << (remaining -= n);\n\t\t};\n\n\t\tvar nlenbits = ndatalenbits(ver, mode);\n\t\tpack(mode, 4);\n\t\tpack(datalen, nlenbits);\n\n\t\tswitch (mode) {\n\t\tcase MODE_NUMERIC:\n\t\t\tfor (var i = 2; i < datalen; i += 3) {\n\t\t\t\tpack(parseInt(data.substring(i-2,i+1), 10), 10);\n\t\t\t}\n\t\t\tpack(parseInt(data.substring(i-2), 10), [0,4,7][datalen%3]);\n\t\t\tbreak;\n\n\t\tcase MODE_ALPHANUMERIC:\n\t\t\tfor (var i = 1; i < datalen; i += 2) {\n\t\t\t\tpack(ALPHANUMERIC_MAP[data.charAt(i-1)] * 45 +\n\t\t\t\t\tALPHANUMERIC_MAP[data.charAt(i)], 11);\n\t\t\t}\n\t\t\tif (datalen % 2 == 1) {\n\t\t\t\tpack(ALPHANUMERIC_MAP[data.charAt(i-1)], 6);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase MODE_OCTET:\n\t\t\tfor (var i = 0; i < datalen; ++i) {\n\t\t\t\tpack(data[i], 8);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t// final bits. it is possible that adding terminator causes the buffer\n\t\t// to overflow, but then the buffer truncated to the maximum size will\n\t\t// be valid as the truncated terminator mode bits and padding is\n\t\t// identical in appearance (cf. JIS X 0510:2004 sec 8.4.8).\n\t\tpack(MODE_TERMINATOR, 4);\n\t\tif (remaining < 8) buf.push(bits);\n\n\t\t// the padding to fill up the remaining space. we should not add any\n\t\t// words when the overflow already occurred.\n\t\twhile (buf.length + 1 < maxbuflen) buf.push(0xec, 0x11);\n\t\tif (buf.length < maxbuflen) buf.push(0xec);\n\t\treturn buf;\n\t};\n\n\t// calculates ECC code words for given code words and generator polynomial.\n\t//\n\t// this is quite similar to CRC calculation as both Reed-Solomon and CRC use\n\t// the certain kind of cyclic codes, which is effectively the division of\n\t// zero-augumented polynomial by the generator polynomial. the only difference\n\t// is that Reed-Solomon uses GF(2^8), instead of CRC's GF(2), and Reed-Solomon\n\t// uses the different generator polynomial than CRC's.\n\tvar calculateecc = function(poly, genpoly) {\n\t\tvar modulus = poly.slice(0);\n\t\tvar polylen = poly.length, genpolylen = genpoly.length;\n\t\tfor (var i = 0; i < genpolylen; ++i) modulus.push(0);\n\t\tfor (var i = 0; i < polylen; ) {\n\t\t\tvar quotient = GF256_INVMAP[modulus[i++]];\n\t\t\tif (quotient >= 0) {\n\t\t\t\tfor (var j = 0; j < genpolylen; ++j) {\n\t\t\t\t\tmodulus[i+j] ^= GF256_MAP[(quotient + genpoly[j]) % 255];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn modulus.slice(polylen);\n\t};\n\n\t// auguments ECC code words to given code words. the resulting words are\n\t// ready to be encoded in the matrix.\n\t//\n\t// the much of actual augumenting procedure follows JIS X 0510:2004 sec 8.7.\n\t// the code is simplified using the fact that the size of each code & ECC\n\t// blocks is almost same; for example, when we have 4 blocks and 46 data words\n\t// the number of code words in those blocks are 11, 11, 12, 12 respectively.\n\tvar augumenteccs = function(poly, nblocks, genpoly) {\n\t\tvar subsizes = [];\n\t\tvar subsize = (poly.length / nblocks) | 0, subsize0 = 0;\n\t\tvar pivot = nblocks - poly.length % nblocks;\n\t\tfor (var i = 0; i < pivot; ++i) {\n\t\t\tsubsizes.push(subsize0);\n\t\t\tsubsize0 += subsize;\n\t\t}\n\t\tfor (var i = pivot; i < nblocks; ++i) {\n\t\t\tsubsizes.push(subsize0);\n\t\t\tsubsize0 += subsize+1;\n\t\t}\n\t\tsubsizes.push(subsize0);\n\n\t\tvar eccs = [];\n\t\tfor (var i = 0; i < nblocks; ++i) {\n\t\t\teccs.push(calculateecc(poly.slice(subsizes[i], subsizes[i+1]), genpoly));\n\t\t}\n\n\t\tvar result = [];\n\t\tvar nitemsperblock = (poly.length / nblocks) | 0;\n\t\tfor (var i = 0; i < nitemsperblock; ++i) {\n\t\t\tfor (var j = 0; j < nblocks; ++j) {\n\t\t\t\tresult.push(poly[subsizes[j] + i]);\n\t\t\t}\n\t\t}\n\t\tfor (var j = pivot; j < nblocks; ++j) {\n\t\t\tresult.push(poly[subsizes[j+1] - 1]);\n\t\t}\n\t\tfor (var i = 0; i < genpoly.length; ++i) {\n\t\t\tfor (var j = 0; j < nblocks; ++j) {\n\t\t\t\tresult.push(eccs[j][i]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\t// auguments BCH(p+q,q) code to the polynomial over GF(2), given the proper\n\t// genpoly. the both input and output are in binary numbers, and unlike\n\t// calculateecc genpoly should include the 1 bit for the highest degree.\n\t//\n\t// actual polynomials used for this procedure are as follows:\n\t// - p=10, q=5, genpoly=x^10+x^8+x^5+x^4+x^2+x+1 (JIS X 0510:2004 Appendix C)\n\t// - p=18, q=6, genpoly=x^12+x^11+x^10+x^9+x^8+x^5+x^2+1 (ibid. Appendix D)\n\tvar augumentbch = function(poly, p, genpoly, q) {\n\t\tvar modulus = poly << q;\n\t\tfor (var i = p - 1; i >= 0; --i) {\n\t\t\tif ((modulus >> (q+i)) & 1) modulus ^= genpoly << i;\n\t\t}\n\t\treturn (poly << q) | modulus;\n\t};\n\n\t// creates the base matrix for given version. it returns two matrices, one of\n\t// them is the actual one and the another represents the \"reserved\" portion\n\t// (e.g. finder and timing patterns) of the matrix.\n\t//\n\t// some entries in the matrix may be undefined, rather than 0 or 1. this is\n\t// intentional (no initialization needed!), and putdata below will fill\n\t// the remaining ones.\n\tvar makebasematrix = function(ver) {\n\t\tvar v = VERSIONS[ver], n = getsizebyver(ver);\n\t\tvar matrix = [], reserved = [];\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\tmatrix.push([]);\n\t\t\treserved.push([]);\n\t\t}\n\n\t\tvar blit = function(y, x, h, w, bits) {\n\t\t\tfor (var i = 0; i < h; ++i) {\n\t\t\t\tfor (var j = 0; j < w; ++j) {\n\t\t\t\t\tmatrix[y+i][x+j] = (bits[i] >> j) & 1;\n\t\t\t\t\treserved[y+i][x+j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// finder patterns and a part of timing patterns\n\t\t// will also mark the format information area (not yet written) as reserved.\n\t\tblit(0, 0, 9, 9, [0x7f, 0x41, 0x5d, 0x5d, 0x5d, 0x41, 0x17f, 0x00, 0x40]);\n\t\tblit(n-8, 0, 8, 9, [0x100, 0x7f, 0x41, 0x5d, 0x5d, 0x5d, 0x41, 0x7f]);\n\t\tblit(0, n-8, 9, 8, [0xfe, 0x82, 0xba, 0xba, 0xba, 0x82, 0xfe, 0x00, 0x00]);\n\n\t\t// the rest of timing patterns\n\t\tfor (var i = 9; i < n-8; ++i) {\n\t\t\tmatrix[6][i] = matrix[i][6] = ~i & 1;\n\t\t\treserved[6][i] = reserved[i][6] = 1;\n\t\t}\n\n\t\t// alignment patterns\n\t\tvar aligns = v[2], m = aligns.length;\n\t\tfor (var i = 0; i < m; ++i) {\n\t\t\tvar minj = (i===0 || i===m-1 ? 1 : 0), maxj = (i===0 ? m-1 : m);\n\t\t\tfor (var j = minj; j < maxj; ++j) {\n\t\t\t\tblit(aligns[i], aligns[j], 5, 5, [0x1f, 0x11, 0x15, 0x11, 0x1f]);\n\t\t\t}\n\t\t}\n\n\t\t// version information\n\t\tif (needsverinfo(ver)) {\n\t\t\tvar code = augumentbch(ver, 6, 0x1f25, 12);\n\t\t\tvar k = 0;\n\t\t\tfor (var i = 0; i < 6; ++i) {\n\t\t\t\tfor (var j = 0; j < 3; ++j) {\n\t\t\t\t\tmatrix[i][(n-11)+j] = matrix[(n-11)+j][i] = (code >> k++) & 1;\n\t\t\t\t\treserved[i][(n-11)+j] = reserved[(n-11)+j][i] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {matrix: matrix, reserved: reserved};\n\t};\n\n\t// fills the data portion (i.e. unmarked in reserved) of the matrix with given\n\t// code words. the size of code words should be no more than available bits,\n\t// and remaining bits are padded to 0 (cf. JIS X 0510:2004 sec 8.7.3).\n\tvar putdata = function(matrix, reserved, buf) {\n\t\tvar n = matrix.length;\n\t\tvar k = 0, dir = -1;\n\t\tfor (var i = n-1; i >= 0; i -= 2) {\n\t\t\tif (i == 6) --i; // skip the entire timing pattern column\n\t\t\tvar jj = (dir < 0 ? n-1 : 0);\n\t\t\tfor (var j = 0; j < n; ++j) {\n\t\t\t\tfor (var ii = i; ii > i-2; --ii) {\n\t\t\t\t\tif (!reserved[jj][ii]) {\n\t\t\t\t\t\t// may overflow, but (undefined >> x)\n\t\t\t\t\t\t// is 0 so it will auto-pad to zero.\n\t\t\t\t\t\tmatrix[jj][ii] = (buf[k >> 3] >> (~k&7)) & 1;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjj += dir;\n\t\t\t}\n\t\t\tdir = -dir;\n\t\t}\n\t\treturn matrix;\n\t};\n\n\t// XOR-masks the data portion of the matrix. repeating the call with the same\n\t// arguments will revert the prior call (convenient in the matrix evaluation).\n\tvar maskdata = function(matrix, reserved, mask) {\n\t\tvar maskf = MASKFUNCS[mask];\n\t\tvar n = matrix.length;\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\tfor (var j = 0; j < n; ++j) {\n\t\t\t\tif (!reserved[i][j]) matrix[i][j] ^= maskf(i,j);\n\t\t\t}\n\t\t}\n\t\treturn matrix;\n\t};\n\n\t// puts the format information.\n\tvar putformatinfo = function(matrix, reserved, ecclevel, mask) {\n\t\tvar n = matrix.length;\n\t\tvar code = augumentbch((ecclevel << 3) | mask, 5, 0x537, 10) ^ 0x5412;\n\t\tfor (var i = 0; i < 15; ++i) {\n\t\t\tvar r = [0,1,2,3,4,5,7,8,n-7,n-6,n-5,n-4,n-3,n-2,n-1][i];\n\t\t\tvar c = [n-1,n-2,n-3,n-4,n-5,n-6,n-7,n-8,7,5,4,3,2,1,0][i];\n\t\t\tmatrix[r][8] = matrix[8][c] = (code >> i) & 1;\n\t\t\t// we don't have to mark those bits reserved; always done\n\t\t\t// in makebasematrix above.\n\t\t}\n\t\treturn matrix;\n\t};\n\n\t// evaluates the resulting matrix and returns the score (lower is better).\n\t// (cf. JIS X 0510:2004 sec 8.8.2)\n\t//\n\t// the evaluation procedure tries to avoid the problematic patterns naturally\n\t// occuring from the original matrix. for example, it penaltizes the patterns\n\t// which just look like the finder pattern which will confuse the decoder.\n\t// we choose the mask which results in the lowest score among 8 possible ones.\n\t//\n\t// note: zxing seems to use the same procedure and in many cases its choice\n\t// agrees to ours, but sometimes it does not. practically it doesn't matter.\n\tvar evaluatematrix = function(matrix) {\n\t\t// N1+(k-5) points for each consecutive row of k same-colored modules,\n\t\t// where k >= 5. no overlapping row counts.\n\t\tvar PENALTY_CONSECUTIVE = 3;\n\t\t// N2 points for each 2x2 block of same-colored modules.\n\t\t// overlapping block does count.\n\t\tvar PENALTY_TWOBYTWO = 3;\n\t\t// N3 points for each pattern with >4W:1B:1W:3B:1W:1B or\n\t\t// 1B:1W:3B:1W:1B:>4W, or their multiples (e.g. highly unlikely,\n\t\t// but 13W:3B:3W:9B:3W:3B counts).\n\t\tvar PENALTY_FINDERLIKE = 40;\n\t\t// N4*k points for every (5*k)% deviation from 50% black density.\n\t\t// i.e. k=1 for 55~60% and 40~45%, k=2 for 60~65% and 35~40%, etc.\n\t\tvar PENALTY_DENSITY = 10;\n\n\t\tvar evaluategroup = function(groups) { // assumes [W,B,W,B,W,...,B,W]\n\t\t\tvar score = 0;\n\t\t\tfor (var i = 0; i < groups.length; ++i) {\n\t\t\t\tif (groups[i] >= 5) score += PENALTY_CONSECUTIVE + (groups[i]-5);\n\t\t\t}\n\t\t\tfor (var i = 5; i < groups.length; i += 2) {\n\t\t\t\tvar p = groups[i];\n\t\t\t\tif (groups[i-1] == p && groups[i-2] == 3*p && groups[i-3] == p &&\n\t\t\t\t\t\tgroups[i-4] == p && (groups[i-5] >= 4*p || groups[i+1] >= 4*p)) {\n\t\t\t\t\t// this part differs from zxing...\n\t\t\t\t\tscore += PENALTY_FINDERLIKE;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn score;\n\t\t};\n\n\t\tvar n = matrix.length;\n\t\tvar score = 0, nblacks = 0;\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\tvar row = matrix[i];\n\t\t\tvar groups;\n\n\t\t\t// evaluate the current row\n\t\t\tgroups = [0]; // the first empty group of white\n\t\t\tfor (var j = 0; j < n; ) {\n\t\t\t\tvar k;\n\t\t\t\tfor (k = 0; j < n && row[j]; ++k) ++j;\n\t\t\t\tgroups.push(k);\n\t\t\t\tfor (k = 0; j < n && !row[j]; ++k) ++j;\n\t\t\t\tgroups.push(k);\n\t\t\t}\n\t\t\tscore += evaluategroup(groups);\n\n\t\t\t// evaluate the current column\n\t\t\tgroups = [0];\n\t\t\tfor (var j = 0; j < n; ) {\n\t\t\t\tvar k;\n\t\t\t\tfor (k = 0; j < n && matrix[j][i]; ++k) ++j;\n\t\t\t\tgroups.push(k);\n\t\t\t\tfor (k = 0; j < n && !matrix[j][i]; ++k) ++j;\n\t\t\t\tgroups.push(k);\n\t\t\t}\n\t\t\tscore += evaluategroup(groups);\n\n\t\t\t// check the 2x2 box and calculate the density\n\t\t\tvar nextrow = matrix[i+1] || [];\n\t\t\tnblacks += row[0];\n\t\t\tfor (var j = 1; j < n; ++j) {\n\t\t\t\tvar p = row[j];\n\t\t\t\tnblacks += p;\n\t\t\t\t// at least comparison with next row should be strict...\n\t\t\t\tif (row[j-1] == p && nextrow[j] === p && nextrow[j-1] === p) {\n\t\t\t\t\tscore += PENALTY_TWOBYTWO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tscore += PENALTY_DENSITY * ((Math.abs(nblacks / n / n - 0.5) / 0.05) | 0);\n\t\treturn score;\n\t};\n\n\t// returns the fully encoded QR code matrix which contains given data.\n\t// it also chooses the best mask automatically when mask is -1.\n\tvar generate = function(data, ver, mode, ecclevel, mask) {\n\t\tvar v = VERSIONS[ver];\n\t\tvar buf = encode(ver, mode, data, ndatabits(ver, ecclevel) >> 3);\n\t\tbuf = augumenteccs(buf, v[1][ecclevel], GF256_GENPOLY[v[0][ecclevel]]);\n\n\t\tvar result = makebasematrix(ver);\n\t\tvar matrix = result.matrix, reserved = result.reserved;\n\t\tputdata(matrix, reserved, buf);\n\n\t\tif (mask < 0) {\n\t\t\t// find the best mask\n\t\t\tmaskdata(matrix, reserved, 0);\n\t\t\tputformatinfo(matrix, reserved, ecclevel, 0);\n\t\t\tvar bestmask = 0, bestscore = evaluatematrix(matrix);\n\t\t\tmaskdata(matrix, reserved, 0);\n\t\t\tfor (mask = 1; mask < 8; ++mask) {\n\t\t\t\tmaskdata(matrix, reserved, mask);\n\t\t\t\tputformatinfo(matrix, reserved, ecclevel, mask);\n\t\t\t\tvar score = evaluatematrix(matrix);\n\t\t\t\tif (bestscore > score) {\n\t\t\t\t\tbestscore = score;\n\t\t\t\t\tbestmask = mask;\n\t\t\t\t}\n\t\t\t\tmaskdata(matrix, reserved, mask);\n\t\t\t}\n\t\t\tmask = bestmask;\n\t\t}\n\n\t\tmaskdata(matrix, reserved, mask);\n\t\tputformatinfo(matrix, reserved, ecclevel, mask);\n\t\treturn matrix;\n\t};\n\n\t// the public interface is trivial; the options available are as follows:\n\t//\n\t// - version: an integer in [1,40]. when omitted (or -1) the smallest possible\n\t//   version is chosen.\n\t// - mode: one of 'numeric', 'alphanumeric', 'octet'. when omitted the smallest\n\t//   possible mode is chosen.\n\t// - eccLevel: one of 'L', 'M', 'Q', 'H'. defaults to 'L'.\n\t// - mask: an integer in [0,7]. when omitted (or -1) the best mask is chosen.\n\t//\n\n\tfunction generateFrame(data, options) {\n\t\t\tvar MODES = {'numeric': MODE_NUMERIC, 'alphanumeric': MODE_ALPHANUMERIC,\n\t\t\t\t'octet': MODE_OCTET};\n\t\t\tvar ECCLEVELS = {'L': ECCLEVEL_L, 'M': ECCLEVEL_M, 'Q': ECCLEVEL_Q,\n\t\t\t\t'H': ECCLEVEL_H};\n\n\t\t\toptions = options || {};\n\t\t\tvar ver = options.version || -1;\n\t\t\tvar ecclevel = ECCLEVELS[(options.eccLevel || 'L').toUpperCase()];\n\t\t\tvar mode = options.mode ? MODES[options.mode.toLowerCase()] : -1;\n\t\t\tvar mask = 'mask' in options ? options.mask : -1;\n\n\t\t\tif (mode < 0) {\n\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\tif (data.match(NUMERIC_REGEXP)) {\n\t\t\t\t\t\tmode = MODE_NUMERIC;\n\t\t\t\t\t} else if (data.match(ALPHANUMERIC_OUT_REGEXP)) {\n\t\t\t\t\t\t// while encode supports case-insensitive encoding, we restrict the data to be uppercased when auto-selecting the mode.\n\t\t\t\t\t\tmode = MODE_ALPHANUMERIC;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmode = MODE_OCTET;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmode = MODE_OCTET;\n\t\t\t\t}\n\t\t\t} else if (!(mode == MODE_NUMERIC || mode == MODE_ALPHANUMERIC ||\n\t\t\t\t\tmode == MODE_OCTET)) {\n\t\t\t\tthrow 'invalid or unsupported mode';\n\t\t\t}\n\n\t\t\tdata = validatedata(mode, data);\n\t\t\tif (data === null) throw 'invalid data format';\n\n\t\t\tif (ecclevel < 0 || ecclevel > 3) throw 'invalid ECC level';\n\n\t\t\tif (ver < 0) {\n\t\t\t\tfor (ver = 1; ver <= 40; ++ver) {\n\t\t\t\t\tif (data.length <= getmaxdatalen(ver, mode, ecclevel)) break;\n\t\t\t\t}\n\t\t\t\tif (ver > 40) throw 'too large data for the Qr format';\n\t\t\t} else if (ver < 1 || ver > 40) {\n\t\t\t\tthrow 'invalid Qr version! should be between 1 and 40';\n\t\t\t}\n\n\t\t\tif (mask != -1 && (mask < 0 || mask > 8)) throw 'invalid mask';\n\t        //console.log('version:', ver, 'mode:', mode, 'ECC:', ecclevel, 'mask:', mask )\n\t\t\treturn generate(data, ver, mode, ecclevel, mask);\n\t\t}\n\n\n\t// options\n\t// - modulesize: a number. this is a size of each modules in pixels, and\n\t//   defaults to 5px.\n\t// - margin: a number. this is a size of margin in *modules*, and defaults to\n\t//   4 (white modules). the specficiation mandates the margin no less than 4\n\t//   modules, so it is better not to alter this value unless you know what\n\t//   you're doing.\n\tfunction buildCanvas(data, options) {\n\n\t    var canvas = [];\n\t    var background = data.background || '#fff';\n\t    var foreground = data.foreground || '#000';\n\t    //var margin = options.margin || 4;\n\t\tvar matrix = generateFrame(data, options);\n\t\tvar n = matrix.length;\n\t\tvar modSize = Math.floor( options.fit ? options.fit/n : 5 );\n\t\tvar size = n * modSize;\n\n\t    canvas.push({\n\t      type: 'rect',\n\t      x: 0, y: 0, w: size, h: size, lineWidth: 0, color: background\n\t    });\n\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\tfor (var j = 0; j < n; ++j) {\n\t            if(matrix[i][j]) {\n\t              canvas.push({\n\t                type: 'rect',\n\t                x: modSize * i,\n\t                y: modSize * j,\n\t                w: modSize,\n\t                h: modSize,\n\t                lineWidth: 0,\n\t                color: foreground\n\t              });\n\t            }\n\t        }\n\t    }\n\n\t    return {\n\t        canvas: canvas,\n\t        size: size\n\t    };\n\n\t}\n\n\tfunction measure(node) {\n\t    var cd = buildCanvas(node.qr, node);\n\t    node._canvas = cd.canvas;\n\t    node._width = node._height = node._minWidth = node._maxWidth = node._minHeight = node._maxHeight = cd.size;\n\t    return node;\n\t}\n\n\tmodule.exports = {\n\t  measure: measure\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data;\n\n\t  Data = (function() {\n\t    function Data(data) {\n\t      this.data = data != null ? data : [];\n\t      this.pos = 0;\n\t      this.length = this.data.length;\n\t    }\n\n\t    Data.prototype.readByte = function() {\n\t      return this.data[this.pos++];\n\t    };\n\n\t    Data.prototype.writeByte = function(byte) {\n\t      return this.data[this.pos++] = byte;\n\t    };\n\n\t    Data.prototype.byteAt = function(index) {\n\t      return this.data[index];\n\t    };\n\n\t    Data.prototype.readBool = function() {\n\t      return !!this.readByte();\n\t    };\n\n\t    Data.prototype.writeBool = function(val) {\n\t      return this.writeByte(val ? 1 : 0);\n\t    };\n\n\t    Data.prototype.readUInt32 = function() {\n\t      var b1, b2, b3, b4;\n\t      b1 = this.readByte() * 0x1000000;\n\t      b2 = this.readByte() << 16;\n\t      b3 = this.readByte() << 8;\n\t      b4 = this.readByte();\n\t      return b1 + b2 + b3 + b4;\n\t    };\n\n\t    Data.prototype.writeUInt32 = function(val) {\n\t      this.writeByte((val >>> 24) & 0xff);\n\t      this.writeByte((val >> 16) & 0xff);\n\t      this.writeByte((val >> 8) & 0xff);\n\t      return this.writeByte(val & 0xff);\n\t    };\n\n\t    Data.prototype.readInt32 = function() {\n\t      var int;\n\t      int = this.readUInt32();\n\t      if (int >= 0x80000000) {\n\t        return int - 0x100000000;\n\t      } else {\n\t        return int;\n\t      }\n\t    };\n\n\t    Data.prototype.writeInt32 = function(val) {\n\t      if (val < 0) {\n\t        val += 0x100000000;\n\t      }\n\t      return this.writeUInt32(val);\n\t    };\n\n\t    Data.prototype.readUInt16 = function() {\n\t      var b1, b2;\n\t      b1 = this.readByte() << 8;\n\t      b2 = this.readByte();\n\t      return b1 | b2;\n\t    };\n\n\t    Data.prototype.writeUInt16 = function(val) {\n\t      this.writeByte((val >> 8) & 0xff);\n\t      return this.writeByte(val & 0xff);\n\t    };\n\n\t    Data.prototype.readInt16 = function() {\n\t      var int;\n\t      int = this.readUInt16();\n\t      if (int >= 0x8000) {\n\t        return int - 0x10000;\n\t      } else {\n\t        return int;\n\t      }\n\t    };\n\n\t    Data.prototype.writeInt16 = function(val) {\n\t      if (val < 0) {\n\t        val += 0x10000;\n\t      }\n\t      return this.writeUInt16(val);\n\t    };\n\n\t    Data.prototype.readString = function(length) {\n\t      var i, ret, _i;\n\t      ret = [];\n\t      for (i = _i = 0; 0 <= length ? _i < length : _i > length; i = 0 <= length ? ++_i : --_i) {\n\t        ret[i] = String.fromCharCode(this.readByte());\n\t      }\n\t      return ret.join('');\n\t    };\n\n\t    Data.prototype.writeString = function(val) {\n\t      var i, _i, _ref, _results;\n\t      _results = [];\n\t      for (i = _i = 0, _ref = val.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        _results.push(this.writeByte(val.charCodeAt(i)));\n\t      }\n\t      return _results;\n\t    };\n\n\t    Data.prototype.stringAt = function(pos, length) {\n\t      this.pos = pos;\n\t      return this.readString(length);\n\t    };\n\n\t    Data.prototype.readShort = function() {\n\t      return this.readInt16();\n\t    };\n\n\t    Data.prototype.writeShort = function(val) {\n\t      return this.writeInt16(val);\n\t    };\n\n\t    Data.prototype.readLongLong = function() {\n\t      var b1, b2, b3, b4, b5, b6, b7, b8;\n\t      b1 = this.readByte();\n\t      b2 = this.readByte();\n\t      b3 = this.readByte();\n\t      b4 = this.readByte();\n\t      b5 = this.readByte();\n\t      b6 = this.readByte();\n\t      b7 = this.readByte();\n\t      b8 = this.readByte();\n\t      if (b1 & 0x80) {\n\t        return ((b1 ^ 0xff) * 0x100000000000000 + (b2 ^ 0xff) * 0x1000000000000 + (b3 ^ 0xff) * 0x10000000000 + (b4 ^ 0xff) * 0x100000000 + (b5 ^ 0xff) * 0x1000000 + (b6 ^ 0xff) * 0x10000 + (b7 ^ 0xff) * 0x100 + (b8 ^ 0xff) + 1) * -1;\n\t      }\n\t      return b1 * 0x100000000000000 + b2 * 0x1000000000000 + b3 * 0x10000000000 + b4 * 0x100000000 + b5 * 0x1000000 + b6 * 0x10000 + b7 * 0x100 + b8;\n\t    };\n\n\t    Data.prototype.writeLongLong = function(val) {\n\t      var high, low;\n\t      high = Math.floor(val / 0x100000000);\n\t      low = val & 0xffffffff;\n\t      this.writeByte((high >> 24) & 0xff);\n\t      this.writeByte((high >> 16) & 0xff);\n\t      this.writeByte((high >> 8) & 0xff);\n\t      this.writeByte(high & 0xff);\n\t      this.writeByte((low >> 24) & 0xff);\n\t      this.writeByte((low >> 16) & 0xff);\n\t      this.writeByte((low >> 8) & 0xff);\n\t      return this.writeByte(low & 0xff);\n\t    };\n\n\t    Data.prototype.readInt = function() {\n\t      return this.readInt32();\n\t    };\n\n\t    Data.prototype.writeInt = function(val) {\n\t      return this.writeInt32(val);\n\t    };\n\n\t    Data.prototype.slice = function(start, end) {\n\t      return this.data.slice(start, end);\n\t    };\n\n\t    Data.prototype.read = function(bytes) {\n\t      var buf, i, _i;\n\t      buf = [];\n\t      for (i = _i = 0; 0 <= bytes ? _i < bytes : _i > bytes; i = 0 <= bytes ? ++_i : --_i) {\n\t        buf.push(this.readByte());\n\t      }\n\t      return buf;\n\t    };\n\n\t    Data.prototype.write = function(bytes) {\n\t      var byte, _i, _len, _results;\n\t      _results = [];\n\t      for (_i = 0, _len = bytes.length; _i < _len; _i++) {\n\t        byte = bytes[_i];\n\t        _results.push(this.writeByte(byte));\n\t      }\n\t      return _results;\n\t    };\n\n\t    return Data;\n\n\t  })();\n\n\t  module.exports = Data;\n\n\t}).call(this);\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var JPEG, fs,\n\t    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n\t  fs = __webpack_require__(10);\n\n\t  JPEG = (function() {\n\t    var MARKERS;\n\n\t    MARKERS = [0xFFC0, 0xFFC1, 0xFFC2, 0xFFC3, 0xFFC5, 0xFFC6, 0xFFC7, 0xFFC8, 0xFFC9, 0xFFCA, 0xFFCB, 0xFFCC, 0xFFCD, 0xFFCE, 0xFFCF];\n\n\t    function JPEG(data, label) {\n\t      var channels, marker, pos;\n\t      this.data = data;\n\t      this.label = label;\n\t      if (this.data.readUInt16BE(0) !== 0xFFD8) {\n\t        throw \"SOI not found in JPEG\";\n\t      }\n\t      pos = 2;\n\t      while (pos < this.data.length) {\n\t        marker = this.data.readUInt16BE(pos);\n\t        pos += 2;\n\t        if (__indexOf.call(MARKERS, marker) >= 0) {\n\t          break;\n\t        }\n\t        pos += this.data.readUInt16BE(pos);\n\t      }\n\t      if (__indexOf.call(MARKERS, marker) < 0) {\n\t        throw \"Invalid JPEG.\";\n\t      }\n\t      pos += 2;\n\t      this.bits = this.data[pos++];\n\t      this.height = this.data.readUInt16BE(pos);\n\t      pos += 2;\n\t      this.width = this.data.readUInt16BE(pos);\n\t      pos += 2;\n\t      channels = this.data[pos++];\n\t      this.colorSpace = (function() {\n\t        switch (channels) {\n\t          case 1:\n\t            return 'DeviceGray';\n\t          case 3:\n\t            return 'DeviceRGB';\n\t          case 4:\n\t            return 'DeviceCMYK';\n\t        }\n\t      })();\n\t      this.obj = null;\n\t    }\n\n\t    JPEG.prototype.embed = function(document) {\n\t      if (this.obj) {\n\t        return;\n\t      }\n\t      this.obj = document.ref({\n\t        Type: 'XObject',\n\t        Subtype: 'Image',\n\t        BitsPerComponent: this.bits,\n\t        Width: this.width,\n\t        Height: this.height,\n\t        ColorSpace: this.colorSpace,\n\t        Filter: 'DCTDecode'\n\t      });\n\t      if (this.colorSpace === 'DeviceCMYK') {\n\t        this.obj.data['Decode'] = [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0];\n\t      }\n\t      this.obj.end(this.data);\n\t      return this.data = null;\n\t    };\n\n\t    return JPEG;\n\n\t  })();\n\n\t  module.exports = JPEG;\n\n\t}).call(this);\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var PNG, PNGImage, zlib;\n\n\t  zlib = __webpack_require__(45);\n\n\t  PNG = __webpack_require__(51);\n\n\t  PNGImage = (function() {\n\t    function PNGImage(data, label) {\n\t      this.label = label;\n\t      this.image = new PNG(data);\n\t      this.width = this.image.width;\n\t      this.height = this.image.height;\n\t      this.imgData = this.image.imgData;\n\t      this.obj = null;\n\t    }\n\n\t    PNGImage.prototype.embed = function(document) {\n\t      var mask, palette, params, rgb, val, x, _i, _len;\n\t      this.document = document;\n\t      if (this.obj) {\n\t        return;\n\t      }\n\t      this.obj = document.ref({\n\t        Type: 'XObject',\n\t        Subtype: 'Image',\n\t        BitsPerComponent: this.image.bits,\n\t        Width: this.width,\n\t        Height: this.height,\n\t        Filter: 'FlateDecode'\n\t      });\n\t      if (!this.image.hasAlphaChannel) {\n\t        params = document.ref({\n\t          Predictor: 15,\n\t          Colors: this.image.colors,\n\t          BitsPerComponent: this.image.bits,\n\t          Columns: this.width\n\t        });\n\t        this.obj.data['DecodeParms'] = params;\n\t        params.end();\n\t      }\n\t      if (this.image.palette.length === 0) {\n\t        this.obj.data['ColorSpace'] = this.image.colorSpace;\n\t      } else {\n\t        palette = document.ref();\n\t        palette.end(new Buffer(this.image.palette));\n\t        this.obj.data['ColorSpace'] = ['Indexed', 'DeviceRGB', (this.image.palette.length / 3) - 1, palette];\n\t      }\n\t      if (this.image.transparency.grayscale) {\n\t        val = this.image.transparency.greyscale;\n\t        return this.obj.data['Mask'] = [val, val];\n\t      } else if (this.image.transparency.rgb) {\n\t        rgb = this.image.transparency.rgb;\n\t        mask = [];\n\t        for (_i = 0, _len = rgb.length; _i < _len; _i++) {\n\t          x = rgb[_i];\n\t          mask.push(x, x);\n\t        }\n\t        return this.obj.data['Mask'] = mask;\n\t      } else if (this.image.transparency.indexed) {\n\t        return this.loadIndexedAlphaChannel();\n\t      } else if (this.image.hasAlphaChannel) {\n\t        return this.splitAlphaChannel();\n\t      } else {\n\t        return this.finalize();\n\t      }\n\t    };\n\n\t    PNGImage.prototype.finalize = function() {\n\t      var sMask;\n\t      if (this.alphaChannel) {\n\t        sMask = this.document.ref({\n\t          Type: 'XObject',\n\t          Subtype: 'Image',\n\t          Height: this.height,\n\t          Width: this.width,\n\t          BitsPerComponent: 8,\n\t          Filter: 'FlateDecode',\n\t          ColorSpace: 'DeviceGray',\n\t          Decode: [0, 1]\n\t        });\n\t        sMask.end(this.alphaChannel);\n\t        this.obj.data['SMask'] = sMask;\n\t      }\n\t      this.obj.end(this.imgData);\n\t      this.image = null;\n\t      return this.imgData = null;\n\t    };\n\n\t    PNGImage.prototype.splitAlphaChannel = function() {\n\t      return this.image.decodePixels((function(_this) {\n\t        return function(pixels) {\n\t          var a, alphaChannel, colorByteSize, done, i, imgData, len, p, pixelCount;\n\t          colorByteSize = _this.image.colors * _this.image.bits / 8;\n\t          pixelCount = _this.width * _this.height;\n\t          imgData = new Buffer(pixelCount * colorByteSize);\n\t          alphaChannel = new Buffer(pixelCount);\n\t          i = p = a = 0;\n\t          len = pixels.length;\n\t          while (i < len) {\n\t            imgData[p++] = pixels[i++];\n\t            imgData[p++] = pixels[i++];\n\t            imgData[p++] = pixels[i++];\n\t            alphaChannel[a++] = pixels[i++];\n\t          }\n\t          done = 0;\n\t          zlib.deflate(imgData, function(err, imgData) {\n\t            _this.imgData = imgData;\n\t            if (err) {\n\t              throw err;\n\t            }\n\t            if (++done === 2) {\n\t              return _this.finalize();\n\t            }\n\t          });\n\t          return zlib.deflate(alphaChannel, function(err, alphaChannel) {\n\t            _this.alphaChannel = alphaChannel;\n\t            if (err) {\n\t              throw err;\n\t            }\n\t            if (++done === 2) {\n\t              return _this.finalize();\n\t            }\n\t          });\n\t        };\n\t      })(this));\n\t    };\n\n\t    PNGImage.prototype.loadIndexedAlphaChannel = function(fn) {\n\t      var transparency;\n\t      transparency = this.image.transparency.indexed;\n\t      return this.image.decodePixels((function(_this) {\n\t        return function(pixels) {\n\t          var alphaChannel, i, j, _i, _ref;\n\t          alphaChannel = new Buffer(_this.width * _this.height);\n\t          i = 0;\n\t          for (j = _i = 0, _ref = pixels.length; _i < _ref; j = _i += 1) {\n\t            alphaChannel[i++] = transparency[pixels[j]];\n\t          }\n\t          return zlib.deflate(alphaChannel, function(err, alphaChannel) {\n\t            _this.alphaChannel = alphaChannel;\n\t            if (err) {\n\t              throw err;\n\t            }\n\t            return _this.finalize();\n\t          });\n\t        };\n\t      })(this));\n\t    };\n\n\t    return PNGImage;\n\n\t  })();\n\n\t  module.exports = PNGImage;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jslint node: true */\n\t'use strict';\n\n\tvar Line = __webpack_require__(24);\n\tvar pack = __webpack_require__(25).pack;\n\tvar offsetVector = __webpack_require__(25).offsetVector;\n\tvar DocumentContext = __webpack_require__(20);\n\n\t/**\n\t* Creates an instance of ElementWriter - a line/vector writer, which adds\n\t* elements to current page and sets their positions based on the context\n\t*/\n\tfunction ElementWriter(context, tracker) {\n\t\tthis.context = context;\n\t\tthis.contextStack = [];\n\t\tthis.tracker = tracker;\n\t}\n\n\tfunction addPageItem(page, item, index) {\n\t\tif(index === null || index === undefined || index < 0 || index > page.items.length) {\n\t\t\tpage.items.push(item);\n\t\t} else {\n\t\t\tpage.items.splice(index, 0, item);\n\t\t}\n\t}\n\n\tElementWriter.prototype.addLine = function(line, dontUpdateContextPosition, index) {\n\t\tvar height = line.getHeight();\n\t\tvar context = this.context;\n\t\tvar page = context.getCurrentPage(),\n\t      position = this.getCurrentPositionOnPage();\n\n\t\tif (context.availableHeight < height || !page) {\n\t\t\treturn false;\n\t\t}\n\n\t\tline.x = context.x + (line.x || 0);\n\t\tline.y = context.y + (line.y || 0);\n\n\t\tthis.alignLine(line);\n\n\t    addPageItem(page, {\n\t        type: 'line',\n\t        item: line\n\t    }, index);\n\t\tthis.tracker.emit('lineAdded', line);\n\n\t\tif (!dontUpdateContextPosition) context.moveDown(height);\n\n\t\treturn position;\n\t};\n\n\tElementWriter.prototype.alignLine = function(line) {\n\t\tvar width = this.context.availableWidth;\n\t\tvar lineWidth = line.getWidth();\n\n\t\tvar alignment = line.inlines && line.inlines.length > 0 && line.inlines[0].alignment;\n\n\t\tvar offset = 0;\n\t\tswitch(alignment) {\n\t\t\tcase 'right':\n\t\t\t\toffset = width - lineWidth;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\toffset = (width - lineWidth) / 2;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (offset) {\n\t\t\tline.x = (line.x || 0) + offset;\n\t\t}\n\n\t\tif (alignment === 'justify' &&\n\t\t\t!line.newLineForced &&\n\t\t\t!line.lastLineInParagraph &&\n\t\t\tline.inlines.length > 1) {\n\t\t\tvar additionalSpacing = (width - lineWidth) / (line.inlines.length - 1);\n\n\t\t\tfor(var i = 1, l = line.inlines.length; i < l; i++) {\n\t\t\t\toffset = i * additionalSpacing;\n\n\t\t\t\tline.inlines[i].x += offset;\n\t\t\t}\n\t\t}\n\t};\n\n\tElementWriter.prototype.addImage = function(image, index) {\n\t\tvar context = this.context;\n\t\tvar page = context.getCurrentPage(),\n\t      position = this.getCurrentPositionOnPage();\n\n\t\tif (context.availableHeight < image._height || !page) {\n\t\t\treturn false;\n\t\t}\n\n\t\timage.x = context.x + (image.x || 0);\n\t\timage.y = context.y;\n\n\t\tthis.alignImage(image);\n\n\t\taddPageItem(page, {\n\t        type: 'image',\n\t        item: image\n\t    }, index);\n\n\t\tcontext.moveDown(image._height);\n\n\t\treturn position;\n\t};\n\n\tElementWriter.prototype.addQr = function(qr, index) {\n\t\tvar context = this.context;\n\t\tvar page = context.getCurrentPage(),\n\t      position = this.getCurrentPositionOnPage();\n\n\t\tif (context.availableHeight < qr._height || !page) {\n\t\t\treturn false;\n\t\t}\n\n\t\tqr.x = context.x + (qr.x || 0);\n\t\tqr.y = context.y;\n\n\t\tthis.alignImage(qr);\n\n\t\tfor (var i=0, l=qr._canvas.length; i < l; i++) {\n\t\t\tvar vector = qr._canvas[i];\n\t\t\tvector.x += qr.x;\n\t\t\tvector.y += qr.y;\n\t\t\tthis.addVector(vector, true, true, index);\n\t\t}\n\n\t\tcontext.moveDown(qr._height);\n\n\t\treturn position;\n\t};\n\n\tElementWriter.prototype.alignImage = function(image) {\n\t\tvar width = this.context.availableWidth;\n\t\tvar imageWidth = image._minWidth;\n\t\tvar offset = 0;\n\t\tswitch(image._alignment) {\n\t\t\tcase 'right':\n\t\t\t\toffset = width - imageWidth;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\toffset = (width - imageWidth) / 2;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (offset) {\n\t\t\timage.x = (image.x || 0) + offset;\n\t\t}\n\t};\n\n\tElementWriter.prototype.addVector = function(vector, ignoreContextX, ignoreContextY, index) {\n\t\tvar context = this.context;\n\t\tvar page = context.getCurrentPage(),\n\t      position = this.getCurrentPositionOnPage();\n\n\t\tif (page) {\n\t\t\toffsetVector(vector, ignoreContextX ? 0 : context.x, ignoreContextY ? 0 : context.y);\n\t        addPageItem(page, {\n\t            type: 'vector',\n\t            item: vector\n\t        }, index);\n\t\t\treturn position;\n\t\t}\n\t};\n\n\tfunction cloneLine(line) {\n\t\tvar result = new Line(line.maxWidth);\n\n\t\tfor(var key in line) {\n\t\t\tif (line.hasOwnProperty(key)) {\n\t\t\t\tresult[key] = line[key];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tElementWriter.prototype.addFragment = function(block, useBlockXOffset, useBlockYOffset, dontUpdateContextPosition) {\n\t\tvar ctx = this.context;\n\t\tvar page = ctx.getCurrentPage();\n\n\t\tif (!useBlockXOffset && block.height > ctx.availableHeight) return false;\n\n\t\tblock.items.forEach(function(item) {\n\t        switch(item.type) {\n\t            case 'line':\n\t                var l = cloneLine(item.item);\n\n\t                l.x = (l.x || 0) + (useBlockXOffset ? (block.xOffset || 0) : ctx.x);\n\t                l.y = (l.y || 0) + (useBlockYOffset ? (block.yOffset || 0) : ctx.y);\n\n\t                page.items.push({\n\t                    type: 'line',\n\t                    item: l\n\t                });\n\t                break;\n\n\t            case 'vector':\n\t                var v = pack(item.item);\n\n\t                offsetVector(v, useBlockXOffset ? (block.xOffset || 0) : ctx.x, useBlockYOffset ? (block.yOffset || 0) : ctx.y);\n\t                page.items.push({\n\t                    type: 'vector',\n\t                    item: v\n\t                });\n\t                break;\n\n\t            case 'image':\n\t                var img = pack(item.item);\n\n\t                img.x = (img.x || 0) + (useBlockXOffset ? (block.xOffset || 0) : ctx.x);\n\t                img.y = (img.y || 0) + (useBlockYOffset ? (block.yOffset || 0) : ctx.y);\n\n\t                page.items.push({\n\t                    type: 'image',\n\t                    item: img\n\t                });\n\t                break;\n\t        }\n\t\t});\n\n\t\tif (!dontUpdateContextPosition) ctx.moveDown(block.height);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t* Pushes the provided context onto the stack or creates a new one\n\t*\n\t* pushContext(context) - pushes the provided context and makes it current\n\t* pushContext(width, height) - creates and pushes a new context with the specified width and height\n\t* pushContext() - creates a new context for unbreakable blocks (with current availableWidth and full-page-height)\n\t*/\n\tElementWriter.prototype.pushContext = function(contextOrWidth, height) {\n\t\tif (contextOrWidth === undefined) {\n\t\t\theight = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom;\n\t\t\tcontextOrWidth = this.context.availableWidth;\n\t\t}\n\n\t\tif (typeof contextOrWidth === 'number' || contextOrWidth instanceof Number) {\n\t\t\tcontextOrWidth = new DocumentContext({ width: contextOrWidth, height: height }, { left: 0, right: 0, top: 0, bottom: 0 });\n\t\t}\n\n\t\tthis.contextStack.push(this.context);\n\t\tthis.context = contextOrWidth;\n\t};\n\n\tElementWriter.prototype.popContext = function() {\n\t\tthis.context = this.contextStack.pop();\n\t};\n\n\tElementWriter.prototype.getCurrentPositionOnPage = function(){\n\t\treturn (this.contextStack[0] || this.context).getCurrentPosition();\n\t};\n\n\n\tmodule.exports = ElementWriter;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFPage - represents a single page in the PDF document\n\tBy Devon Govett\n\t */\n\n\t(function() {\n\t  var PDFPage;\n\n\t  PDFPage = (function() {\n\t    var DEFAULT_MARGINS, SIZES;\n\n\t    function PDFPage(document, options) {\n\t      var dimensions;\n\t      this.document = document;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      this.size = options.size || 'letter';\n\t      this.layout = options.layout || 'portrait';\n\t      if (typeof options.margin === 'number') {\n\t        this.margins = {\n\t          top: options.margin,\n\t          left: options.margin,\n\t          bottom: options.margin,\n\t          right: options.margin\n\t        };\n\t      } else {\n\t        this.margins = options.margins || DEFAULT_MARGINS;\n\t      }\n\t      dimensions = Array.isArray(this.size) ? this.size : SIZES[this.size.toUpperCase()];\n\t      this.width = dimensions[this.layout === 'portrait' ? 0 : 1];\n\t      this.height = dimensions[this.layout === 'portrait' ? 1 : 0];\n\t      this.content = this.document.ref();\n\t      this.resources = this.document.ref({\n\t        ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI']\n\t      });\n\t      Object.defineProperties(this, {\n\t        fonts: {\n\t          get: (function(_this) {\n\t            return function() {\n\t              var _base;\n\t              return (_base = _this.resources.data).Font != null ? _base.Font : _base.Font = {};\n\t            };\n\t          })(this)\n\t        },\n\t        xobjects: {\n\t          get: (function(_this) {\n\t            return function() {\n\t              var _base;\n\t              return (_base = _this.resources.data).XObject != null ? _base.XObject : _base.XObject = {};\n\t            };\n\t          })(this)\n\t        },\n\t        ext_gstates: {\n\t          get: (function(_this) {\n\t            return function() {\n\t              var _base;\n\t              return (_base = _this.resources.data).ExtGState != null ? _base.ExtGState : _base.ExtGState = {};\n\t            };\n\t          })(this)\n\t        },\n\t        patterns: {\n\t          get: (function(_this) {\n\t            return function() {\n\t              var _base;\n\t              return (_base = _this.resources.data).Pattern != null ? _base.Pattern : _base.Pattern = {};\n\t            };\n\t          })(this)\n\t        },\n\t        annotations: {\n\t          get: (function(_this) {\n\t            return function() {\n\t              var _base;\n\t              return (_base = _this.dictionary.data).Annots != null ? _base.Annots : _base.Annots = [];\n\t            };\n\t          })(this)\n\t        }\n\t      });\n\t      this.dictionary = this.document.ref({\n\t        Type: 'Page',\n\t        Parent: this.document._root.data.Pages,\n\t        MediaBox: [0, 0, this.width, this.height],\n\t        Contents: this.content,\n\t        Resources: this.resources\n\t      });\n\t    }\n\n\t    PDFPage.prototype.maxY = function() {\n\t      return this.height - this.margins.bottom;\n\t    };\n\n\t    PDFPage.prototype.write = function(chunk) {\n\t      return this.content.write(chunk);\n\t    };\n\n\t    PDFPage.prototype.end = function() {\n\t      this.dictionary.end();\n\t      this.resources.end();\n\t      return this.content.end();\n\t    };\n\n\t    DEFAULT_MARGINS = {\n\t      top: 72,\n\t      left: 72,\n\t      bottom: 72,\n\t      right: 72\n\t    };\n\n\t    SIZES = {\n\t      '4A0': [4767.87, 6740.79],\n\t      '2A0': [3370.39, 4767.87],\n\t      A0: [2383.94, 3370.39],\n\t      A1: [1683.78, 2383.94],\n\t      A2: [1190.55, 1683.78],\n\t      A3: [841.89, 1190.55],\n\t      A4: [595.28, 841.89],\n\t      A5: [419.53, 595.28],\n\t      A6: [297.64, 419.53],\n\t      A7: [209.76, 297.64],\n\t      A8: [147.40, 209.76],\n\t      A9: [104.88, 147.40],\n\t      A10: [73.70, 104.88],\n\t      B0: [2834.65, 4008.19],\n\t      B1: [2004.09, 2834.65],\n\t      B2: [1417.32, 2004.09],\n\t      B3: [1000.63, 1417.32],\n\t      B4: [708.66, 1000.63],\n\t      B5: [498.90, 708.66],\n\t      B6: [354.33, 498.90],\n\t      B7: [249.45, 354.33],\n\t      B8: [175.75, 249.45],\n\t      B9: [124.72, 175.75],\n\t      B10: [87.87, 124.72],\n\t      C0: [2599.37, 3676.54],\n\t      C1: [1836.85, 2599.37],\n\t      C2: [1298.27, 1836.85],\n\t      C3: [918.43, 1298.27],\n\t      C4: [649.13, 918.43],\n\t      C5: [459.21, 649.13],\n\t      C6: [323.15, 459.21],\n\t      C7: [229.61, 323.15],\n\t      C8: [161.57, 229.61],\n\t      C9: [113.39, 161.57],\n\t      C10: [79.37, 113.39],\n\t      RA0: [2437.80, 3458.27],\n\t      RA1: [1729.13, 2437.80],\n\t      RA2: [1218.90, 1729.13],\n\t      RA3: [864.57, 1218.90],\n\t      RA4: [609.45, 864.57],\n\t      SRA0: [2551.18, 3628.35],\n\t      SRA1: [1814.17, 2551.18],\n\t      SRA2: [1275.59, 1814.17],\n\t      SRA3: [907.09, 1275.59],\n\t      SRA4: [637.80, 907.09],\n\t      EXECUTIVE: [521.86, 756.00],\n\t      FOLIO: [612.00, 936.00],\n\t      LEGAL: [612.00, 1008.00],\n\t      LETTER: [612.00, 792.00],\n\t      TABLOID: [792.00, 1224.00]\n\t    };\n\n\t    return PDFPage;\n\n\t  })();\n\n\t  module.exports = PDFPage;\n\n\t}).call(this);\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var KAPPA, SVGPath,\n\t    __slice = [].slice;\n\n\t  SVGPath = __webpack_require__(47);\n\n\t  KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\n\t  module.exports = {\n\t    initVector: function() {\n\t      this._ctm = [1, 0, 0, 1, 0, 0];\n\t      return this._ctmStack = [];\n\t    },\n\t    save: function() {\n\t      this._ctmStack.push(this._ctm.slice());\n\t      return this.addContent('q');\n\t    },\n\t    restore: function() {\n\t      this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];\n\t      return this.addContent('Q');\n\t    },\n\t    closePath: function() {\n\t      return this.addContent('h');\n\t    },\n\t    lineWidth: function(w) {\n\t      return this.addContent(\"\" + w + \" w\");\n\t    },\n\t    _CAP_STYLES: {\n\t      BUTT: 0,\n\t      ROUND: 1,\n\t      SQUARE: 2\n\t    },\n\t    lineCap: function(c) {\n\t      if (typeof c === 'string') {\n\t        c = this._CAP_STYLES[c.toUpperCase()];\n\t      }\n\t      return this.addContent(\"\" + c + \" J\");\n\t    },\n\t    _JOIN_STYLES: {\n\t      MITER: 0,\n\t      ROUND: 1,\n\t      BEVEL: 2\n\t    },\n\t    lineJoin: function(j) {\n\t      if (typeof j === 'string') {\n\t        j = this._JOIN_STYLES[j.toUpperCase()];\n\t      }\n\t      return this.addContent(\"\" + j + \" j\");\n\t    },\n\t    miterLimit: function(m) {\n\t      return this.addContent(\"\" + m + \" M\");\n\t    },\n\t    dash: function(length, options) {\n\t      var phase, space, _ref;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      if (length == null) {\n\t        return this;\n\t      }\n\t      space = (_ref = options.space) != null ? _ref : length;\n\t      phase = options.phase || 0;\n\t      return this.addContent(\"[\" + length + \" \" + space + \"] \" + phase + \" d\");\n\t    },\n\t    undash: function() {\n\t      return this.addContent(\"[] 0 d\");\n\t    },\n\t    moveTo: function(x, y) {\n\t      return this.addContent(\"\" + x + \" \" + y + \" m\");\n\t    },\n\t    lineTo: function(x, y) {\n\t      return this.addContent(\"\" + x + \" \" + y + \" l\");\n\t    },\n\t    bezierCurveTo: function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t      return this.addContent(\"\" + cp1x + \" \" + cp1y + \" \" + cp2x + \" \" + cp2y + \" \" + x + \" \" + y + \" c\");\n\t    },\n\t    quadraticCurveTo: function(cpx, cpy, x, y) {\n\t      return this.addContent(\"\" + cpx + \" \" + cpy + \" \" + x + \" \" + y + \" v\");\n\t    },\n\t    rect: function(x, y, w, h) {\n\t      return this.addContent(\"\" + x + \" \" + y + \" \" + w + \" \" + h + \" re\");\n\t    },\n\t    roundedRect: function(x, y, w, h, r) {\n\t      if (r == null) {\n\t        r = 0;\n\t      }\n\t      this.moveTo(x + r, y);\n\t      this.lineTo(x + w - r, y);\n\t      this.quadraticCurveTo(x + w, y, x + w, y + r);\n\t      this.lineTo(x + w, y + h - r);\n\t      this.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n\t      this.lineTo(x + r, y + h);\n\t      this.quadraticCurveTo(x, y + h, x, y + h - r);\n\t      this.lineTo(x, y + r);\n\t      return this.quadraticCurveTo(x, y, x + r, y);\n\t    },\n\t    ellipse: function(x, y, r1, r2) {\n\t      var ox, oy, xe, xm, ye, ym;\n\t      if (r2 == null) {\n\t        r2 = r1;\n\t      }\n\t      x -= r1;\n\t      y -= r2;\n\t      ox = r1 * KAPPA;\n\t      oy = r2 * KAPPA;\n\t      xe = x + r1 * 2;\n\t      ye = y + r2 * 2;\n\t      xm = x + r1;\n\t      ym = y + r2;\n\t      this.moveTo(x, ym);\n\t      this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n\t      this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n\t      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n\t      this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\t      return this.closePath();\n\t    },\n\t    circle: function(x, y, radius) {\n\t      return this.ellipse(x, y, radius);\n\t    },\n\t    polygon: function() {\n\t      var point, points, _i, _len;\n\t      points = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t      this.moveTo.apply(this, points.shift());\n\t      for (_i = 0, _len = points.length; _i < _len; _i++) {\n\t        point = points[_i];\n\t        this.lineTo.apply(this, point);\n\t      }\n\t      return this.closePath();\n\t    },\n\t    path: function(path) {\n\t      SVGPath.apply(this, path);\n\t      return this;\n\t    },\n\t    _windingRule: function(rule) {\n\t      if (/even-?odd/.test(rule)) {\n\t        return '*';\n\t      }\n\t      return '';\n\t    },\n\t    fill: function(color, rule) {\n\t      if (/(even-?odd)|(non-?zero)/.test(color)) {\n\t        rule = color;\n\t        color = null;\n\t      }\n\t      if (color) {\n\t        this.fillColor(color);\n\t      }\n\t      return this.addContent('f' + this._windingRule(rule));\n\t    },\n\t    stroke: function(color) {\n\t      if (color) {\n\t        this.strokeColor(color);\n\t      }\n\t      return this.addContent('S');\n\t    },\n\t    fillAndStroke: function(fillColor, strokeColor, rule) {\n\t      var isFillRule;\n\t      if (strokeColor == null) {\n\t        strokeColor = fillColor;\n\t      }\n\t      isFillRule = /(even-?odd)|(non-?zero)/;\n\t      if (isFillRule.test(fillColor)) {\n\t        rule = fillColor;\n\t        fillColor = null;\n\t      }\n\t      if (isFillRule.test(strokeColor)) {\n\t        rule = strokeColor;\n\t        strokeColor = fillColor;\n\t      }\n\t      if (fillColor) {\n\t        this.fillColor(fillColor);\n\t        this.strokeColor(strokeColor);\n\t      }\n\t      return this.addContent('B' + this._windingRule(rule));\n\t    },\n\t    clip: function(rule) {\n\t      return this.addContent('W' + this._windingRule(rule) + ' n');\n\t    },\n\t    transform: function(m11, m12, m21, m22, dx, dy) {\n\t      var m, m0, m1, m2, m3, m4, m5, v, values;\n\t      m = this._ctm;\n\t      m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];\n\t      m[0] = m0 * m11 + m2 * m12;\n\t      m[1] = m1 * m11 + m3 * m12;\n\t      m[2] = m0 * m21 + m2 * m22;\n\t      m[3] = m1 * m21 + m3 * m22;\n\t      m[4] = m0 * dx + m2 * dy + m4;\n\t      m[5] = m1 * dx + m3 * dy + m5;\n\t      values = ((function() {\n\t        var _i, _len, _ref, _results;\n\t        _ref = [m11, m12, m21, m22, dx, dy];\n\t        _results = [];\n\t        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t          v = _ref[_i];\n\t          _results.push(+v.toFixed(5));\n\t        }\n\t        return _results;\n\t      })()).join(' ');\n\t      return this.addContent(\"\" + values + \" cm\");\n\t    },\n\t    translate: function(x, y) {\n\t      return this.transform(1, 0, 0, 1, x, y);\n\t    },\n\t    rotate: function(angle, options) {\n\t      var cos, rad, sin, x, x1, y, y1, _ref;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      rad = angle * Math.PI / 180;\n\t      cos = Math.cos(rad);\n\t      sin = Math.sin(rad);\n\t      x = y = 0;\n\t      if (options.origin != null) {\n\t        _ref = options.origin, x = _ref[0], y = _ref[1];\n\t        x1 = x * cos - y * sin;\n\t        y1 = x * sin + y * cos;\n\t        x -= x1;\n\t        y -= y1;\n\t      }\n\t      return this.transform(cos, sin, -sin, cos, x, y);\n\t    },\n\t    scale: function(xFactor, yFactor, options) {\n\t      var x, y, _ref;\n\t      if (yFactor == null) {\n\t        yFactor = xFactor;\n\t      }\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      if (arguments.length === 2) {\n\t        yFactor = xFactor;\n\t        options = yFactor;\n\t      }\n\t      x = y = 0;\n\t      if (options.origin != null) {\n\t        _ref = options.origin, x = _ref[0], y = _ref[1];\n\t        x -= xFactor * x;\n\t        y -= yFactor * y;\n\t      }\n\t      return this.transform(xFactor, 0, 0, yFactor, x, y);\n\t    }\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var LineWrapper;\n\n\t  LineWrapper = __webpack_require__(48);\n\n\t  module.exports = {\n\t    initText: function() {\n\t      this.x = 0;\n\t      this.y = 0;\n\t      return this._lineGap = 0;\n\t    },\n\t    lineGap: function(_lineGap) {\n\t      this._lineGap = _lineGap;\n\t      return this;\n\t    },\n\t    moveDown: function(lines) {\n\t      if (lines == null) {\n\t        lines = 1;\n\t      }\n\t      this.y += this.currentLineHeight(true) * lines + this._lineGap;\n\t      return this;\n\t    },\n\t    moveUp: function(lines) {\n\t      if (lines == null) {\n\t        lines = 1;\n\t      }\n\t      this.y -= this.currentLineHeight(true) * lines + this._lineGap;\n\t      return this;\n\t    },\n\t    _text: function(text, x, y, options, lineCallback) {\n\t      var line, wrapper, _i, _len, _ref;\n\t      options = this._initOptions(x, y, options);\n\t      text = '' + text;\n\t      if (options.wordSpacing) {\n\t        text = text.replace(/\\s{2,}/g, ' ');\n\t      }\n\t      if (options.width) {\n\t        wrapper = this._wrapper;\n\t        if (!wrapper) {\n\t          wrapper = new LineWrapper(this, options);\n\t          wrapper.on('line', lineCallback);\n\t        }\n\t        this._wrapper = options.continued ? wrapper : null;\n\t        this._textOptions = options.continued ? options : null;\n\t        wrapper.wrap(text, options);\n\t      } else {\n\t        _ref = text.split('\\n');\n\t        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t          line = _ref[_i];\n\t          lineCallback(line, options);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    text: function(text, x, y, options) {\n\t      return this._text(text, x, y, options, this._line.bind(this));\n\t    },\n\t    widthOfString: function(string, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      return this._font.widthOfString(string, this._fontSize) + (options.characterSpacing || 0) * (string.length - 1);\n\t    },\n\t    heightOfString: function(text, options) {\n\t      var height, lineGap, x, y;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      x = this.x, y = this.y;\n\t      options = this._initOptions(options);\n\t      options.height = Infinity;\n\t      lineGap = options.lineGap || this._lineGap || 0;\n\t      this._text(text, this.x, this.y, options, (function(_this) {\n\t        return function(line, options) {\n\t          return _this.y += _this.currentLineHeight(true) + lineGap;\n\t        };\n\t      })(this));\n\t      height = this.y - y;\n\t      this.x = x;\n\t      this.y = y;\n\t      return height;\n\t    },\n\t    list: function(list, x, y, options, wrapper) {\n\t      var flatten, i, indent, itemIndent, items, level, levels, r;\n\t      options = this._initOptions(x, y, options);\n\t      r = Math.round((this._font.ascender / 1000 * this._fontSize) / 3);\n\t      indent = options.textIndent || r * 5;\n\t      itemIndent = options.bulletIndent || r * 8;\n\t      level = 1;\n\t      items = [];\n\t      levels = [];\n\t      flatten = function(list) {\n\t        var i, item, _i, _len, _results;\n\t        _results = [];\n\t        for (i = _i = 0, _len = list.length; _i < _len; i = ++_i) {\n\t          item = list[i];\n\t          if (Array.isArray(item)) {\n\t            level++;\n\t            flatten(item);\n\t            _results.push(level--);\n\t          } else {\n\t            items.push(item);\n\t            _results.push(levels.push(level));\n\t          }\n\t        }\n\t        return _results;\n\t      };\n\t      flatten(list);\n\t      wrapper = new LineWrapper(this, options);\n\t      wrapper.on('line', this._line.bind(this));\n\t      level = 1;\n\t      i = 0;\n\t      wrapper.on('firstLine', (function(_this) {\n\t        return function() {\n\t          var diff, l;\n\t          if ((l = levels[i++]) !== level) {\n\t            diff = itemIndent * (l - level);\n\t            _this.x += diff;\n\t            wrapper.lineWidth -= diff;\n\t            level = l;\n\t          }\n\t          _this.circle(_this.x - indent + r, _this.y + r + (r / 2), r);\n\t          return _this.fill();\n\t        };\n\t      })(this));\n\t      wrapper.on('sectionStart', (function(_this) {\n\t        return function() {\n\t          var pos;\n\t          pos = indent + itemIndent * (level - 1);\n\t          _this.x += pos;\n\t          return wrapper.lineWidth -= pos;\n\t        };\n\t      })(this));\n\t      wrapper.on('sectionEnd', (function(_this) {\n\t        return function() {\n\t          var pos;\n\t          pos = indent + itemIndent * (level - 1);\n\t          _this.x -= pos;\n\t          return wrapper.lineWidth += pos;\n\t        };\n\t      })(this));\n\t      wrapper.wrap(items.join('\\n'), options);\n\t      return this;\n\t    },\n\t    _initOptions: function(x, y, options) {\n\t      var key, margins, val, _ref;\n\t      if (x == null) {\n\t        x = {};\n\t      }\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      if (typeof x === 'object') {\n\t        options = x;\n\t        x = null;\n\t      }\n\t      options = (function() {\n\t        var k, opts, v;\n\t        opts = {};\n\t        for (k in options) {\n\t          v = options[k];\n\t          opts[k] = v;\n\t        }\n\t        return opts;\n\t      })();\n\t      if (this._textOptions) {\n\t        _ref = this._textOptions;\n\t        for (key in _ref) {\n\t          val = _ref[key];\n\t          if (key !== 'continued') {\n\t            if (options[key] == null) {\n\t              options[key] = val;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (x != null) {\n\t        this.x = x;\n\t      }\n\t      if (y != null) {\n\t        this.y = y;\n\t      }\n\t      if (options.lineBreak !== false) {\n\t        margins = this.page.margins;\n\t        if (options.width == null) {\n\t          options.width = this.page.width - this.x - margins.right;\n\t        }\n\t      }\n\t      options.columns || (options.columns = 0);\n\t      if (options.columnGap == null) {\n\t        options.columnGap = 18;\n\t      }\n\t      return options;\n\t    },\n\t    _line: function(text, options, wrapper) {\n\t      var lineGap;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      this._fragment(text, this.x, this.y, options);\n\t      lineGap = options.lineGap || this._lineGap || 0;\n\t      if (!wrapper) {\n\t        return this.x += this.widthOfString(text);\n\t      } else {\n\t        return this.y += this.currentLineHeight(true) + lineGap;\n\t      }\n\t    },\n\t    _fragment: function(text, x, y, options) {\n\t      var align, characterSpacing, commands, d, encoded, i, lineWidth, lineY, mode, renderedWidth, spaceWidth, textWidth, word, wordSpacing, words, _base, _i, _len, _name;\n\t      text = '' + text;\n\t      if (text.length === 0) {\n\t        return;\n\t      }\n\t      align = options.align || 'left';\n\t      wordSpacing = options.wordSpacing || 0;\n\t      characterSpacing = options.characterSpacing || 0;\n\t      if (options.width) {\n\t        switch (align) {\n\t          case 'right':\n\t            textWidth = this.widthOfString(text.replace(/\\s+$/, ''), options);\n\t            x += options.lineWidth - textWidth;\n\t            break;\n\t          case 'center':\n\t            x += options.lineWidth / 2 - options.textWidth / 2;\n\t            break;\n\t          case 'justify':\n\t            words = text.trim().split(/\\s+/);\n\t            textWidth = this.widthOfString(text.replace(/\\s+/g, ''), options);\n\t            spaceWidth = this.widthOfString(' ') + characterSpacing;\n\t            wordSpacing = Math.max(0, (options.lineWidth - textWidth) / Math.max(1, words.length - 1) - spaceWidth);\n\t        }\n\t      }\n\t      renderedWidth = options.textWidth + (wordSpacing * (options.wordCount - 1)) + (characterSpacing * (text.length - 1));\n\t      if (options.link) {\n\t        this.link(x, y, renderedWidth, this.currentLineHeight(), options.link);\n\t      }\n\t      if (options.underline || options.strike) {\n\t        this.save();\n\t        if (!options.stroke) {\n\t          this.strokeColor.apply(this, this._fillColor);\n\t        }\n\t        lineWidth = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);\n\t        this.lineWidth(lineWidth);\n\t        d = options.underline ? 1 : 2;\n\t        lineY = y + this.currentLineHeight() / d;\n\t        if (options.underline) {\n\t          lineY -= lineWidth;\n\t        }\n\t        this.moveTo(x, lineY);\n\t        this.lineTo(x + renderedWidth, lineY);\n\t        this.stroke();\n\t        this.restore();\n\t      }\n\t      this.save();\n\t      this.transform(1, 0, 0, -1, 0, this.page.height);\n\t      y = this.page.height - y - (this._font.ascender / 1000 * this._fontSize);\n\t      if ((_base = this.page.fonts)[_name = this._font.id] == null) {\n\t        _base[_name] = this._font.ref();\n\t      }\n\t      this._font.use(text);\n\t      this.addContent(\"BT\");\n\t      this.addContent(\"\" + x + \" \" + y + \" Td\");\n\t      this.addContent(\"/\" + this._font.id + \" \" + this._fontSize + \" Tf\");\n\t      mode = options.fill && options.stroke ? 2 : options.stroke ? 1 : 0;\n\t      if (mode) {\n\t        this.addContent(\"\" + mode + \" Tr\");\n\t      }\n\t      if (characterSpacing) {\n\t        this.addContent(\"\" + characterSpacing + \" Tc\");\n\t      }\n\t      if (wordSpacing) {\n\t        words = text.trim().split(/\\s+/);\n\t        wordSpacing += this.widthOfString(' ') + characterSpacing;\n\t        wordSpacing *= 1000 / this._fontSize;\n\t        commands = [];\n\t        for (_i = 0, _len = words.length; _i < _len; _i++) {\n\t          word = words[_i];\n\t          encoded = this._font.encode(word);\n\t          encoded = ((function() {\n\t            var _j, _ref, _results;\n\t            _results = [];\n\t            for (i = _j = 0, _ref = encoded.length; _j < _ref; i = _j += 1) {\n\t              _results.push(encoded.charCodeAt(i).toString(16));\n\t            }\n\t            return _results;\n\t          })()).join('');\n\t          commands.push(\"<\" + encoded + \"> \" + (-wordSpacing));\n\t        }\n\t        this.addContent(\"[\" + (commands.join(' ')) + \"] TJ\");\n\t      } else {\n\t        encoded = this._font.encode(text);\n\t        encoded = ((function() {\n\t          var _j, _ref, _results;\n\t          _results = [];\n\t          for (i = _j = 0, _ref = encoded.length; _j < _ref; i = _j += 1) {\n\t            _results.push(encoded.charCodeAt(i).toString(16));\n\t          }\n\t          return _results;\n\t        })()).join('');\n\t        this.addContent(\"<\" + encoded + \"> Tj\");\n\t      }\n\t      this.addContent(\"ET\");\n\t      return this.restore();\n\t    }\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var PDFGradient, PDFLinearGradient, PDFRadialGradient, namedColors, _ref;\n\n\t  _ref = __webpack_require__(49), PDFGradient = _ref.PDFGradient, PDFLinearGradient = _ref.PDFLinearGradient, PDFRadialGradient = _ref.PDFRadialGradient;\n\n\t  module.exports = {\n\t    initColor: function() {\n\t      this._opacityRegistry = {};\n\t      this._opacityCount = 0;\n\t      return this._gradCount = 0;\n\t    },\n\t    _normalizeColor: function(color) {\n\t      var hex, part;\n\t      if (color instanceof PDFGradient) {\n\t        return color;\n\t      }\n\t      if (typeof color === 'string') {\n\t        if (color.charAt(0) === '#') {\n\t          if (color.length === 4) {\n\t            color = color.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, \"#$1$1$2$2$3$3\");\n\t          }\n\t          hex = parseInt(color.slice(1), 16);\n\t          color = [hex >> 16, hex >> 8 & 0xff, hex & 0xff];\n\t        } else if (namedColors[color]) {\n\t          color = namedColors[color];\n\t        }\n\t      }\n\t      if (Array.isArray(color)) {\n\t        if (color.length === 3) {\n\t          color = (function() {\n\t            var _i, _len, _results;\n\t            _results = [];\n\t            for (_i = 0, _len = color.length; _i < _len; _i++) {\n\t              part = color[_i];\n\t              _results.push(part / 255);\n\t            }\n\t            return _results;\n\t          })();\n\t        } else if (color.length === 4) {\n\t          color = (function() {\n\t            var _i, _len, _results;\n\t            _results = [];\n\t            for (_i = 0, _len = color.length; _i < _len; _i++) {\n\t              part = color[_i];\n\t              _results.push(part / 100);\n\t            }\n\t            return _results;\n\t          })();\n\t        }\n\t        return color;\n\t      }\n\t      return null;\n\t    },\n\t    _setColor: function(color, stroke) {\n\t      var gstate, name, op, space;\n\t      color = this._normalizeColor(color);\n\t      if (!color) {\n\t        return false;\n\t      }\n\t      if (this._sMasked) {\n\t        gstate = this.ref({\n\t          Type: 'ExtGState',\n\t          SMask: 'None'\n\t        });\n\t        gstate.end();\n\t        name = \"Gs\" + (++this._opacityCount);\n\t        this.page.ext_gstates[name] = gstate;\n\t        this.addContent(\"/\" + name + \" gs\");\n\t        this._sMasked = false;\n\t      }\n\t      op = stroke ? 'SCN' : 'scn';\n\t      if (color instanceof PDFGradient) {\n\t        this._setColorSpace('Pattern', stroke);\n\t        color.apply(op);\n\t      } else {\n\t        space = color.length === 4 ? 'DeviceCMYK' : 'DeviceRGB';\n\t        this._setColorSpace(space, stroke);\n\t        color = color.join(' ');\n\t        this.addContent(\"\" + color + \" \" + op);\n\t      }\n\t      return true;\n\t    },\n\t    _setColorSpace: function(space, stroke) {\n\t      var op;\n\t      op = stroke ? 'CS' : 'cs';\n\t      return this.addContent(\"/\" + space + \" \" + op);\n\t    },\n\t    fillColor: function(color, opacity) {\n\t      var set;\n\t      if (opacity == null) {\n\t        opacity = 1;\n\t      }\n\t      set = this._setColor(color, false);\n\t      if (set) {\n\t        this.fillOpacity(opacity);\n\t      }\n\t      this._fillColor = [color, opacity];\n\t      return this;\n\t    },\n\t    strokeColor: function(color, opacity) {\n\t      var set;\n\t      if (opacity == null) {\n\t        opacity = 1;\n\t      }\n\t      set = this._setColor(color, true);\n\t      if (set) {\n\t        this.strokeOpacity(opacity);\n\t      }\n\t      return this;\n\t    },\n\t    opacity: function(opacity) {\n\t      this._doOpacity(opacity, opacity);\n\t      return this;\n\t    },\n\t    fillOpacity: function(opacity) {\n\t      this._doOpacity(opacity, null);\n\t      return this;\n\t    },\n\t    strokeOpacity: function(opacity) {\n\t      this._doOpacity(null, opacity);\n\t      return this;\n\t    },\n\t    _doOpacity: function(fillOpacity, strokeOpacity) {\n\t      var dictionary, id, key, name, _ref1;\n\t      if (!((fillOpacity != null) || (strokeOpacity != null))) {\n\t        return;\n\t      }\n\t      if (fillOpacity != null) {\n\t        fillOpacity = Math.max(0, Math.min(1, fillOpacity));\n\t      }\n\t      if (strokeOpacity != null) {\n\t        strokeOpacity = Math.max(0, Math.min(1, strokeOpacity));\n\t      }\n\t      key = \"\" + fillOpacity + \"_\" + strokeOpacity;\n\t      if (this._opacityRegistry[key]) {\n\t        _ref1 = this._opacityRegistry[key], dictionary = _ref1[0], name = _ref1[1];\n\t      } else {\n\t        dictionary = {\n\t          Type: 'ExtGState'\n\t        };\n\t        if (fillOpacity != null) {\n\t          dictionary.ca = fillOpacity;\n\t        }\n\t        if (strokeOpacity != null) {\n\t          dictionary.CA = strokeOpacity;\n\t        }\n\t        dictionary = this.ref(dictionary);\n\t        dictionary.end();\n\t        id = ++this._opacityCount;\n\t        name = \"Gs\" + id;\n\t        this._opacityRegistry[key] = [dictionary, name];\n\t      }\n\t      this.page.ext_gstates[name] = dictionary;\n\t      return this.addContent(\"/\" + name + \" gs\");\n\t    },\n\t    linearGradient: function(x1, y1, x2, y2) {\n\t      return new PDFLinearGradient(this, x1, y1, x2, y2);\n\t    },\n\t    radialGradient: function(x1, y1, r1, x2, y2, r2) {\n\t      return new PDFRadialGradient(this, x1, y1, r1, x2, y2, r2);\n\t    }\n\t  };\n\n\t  namedColors = {\n\t    aliceblue: [240, 248, 255],\n\t    antiquewhite: [250, 235, 215],\n\t    aqua: [0, 255, 255],\n\t    aquamarine: [127, 255, 212],\n\t    azure: [240, 255, 255],\n\t    beige: [245, 245, 220],\n\t    bisque: [255, 228, 196],\n\t    black: [0, 0, 0],\n\t    blanchedalmond: [255, 235, 205],\n\t    blue: [0, 0, 255],\n\t    blueviolet: [138, 43, 226],\n\t    brown: [165, 42, 42],\n\t    burlywood: [222, 184, 135],\n\t    cadetblue: [95, 158, 160],\n\t    chartreuse: [127, 255, 0],\n\t    chocolate: [210, 105, 30],\n\t    coral: [255, 127, 80],\n\t    cornflowerblue: [100, 149, 237],\n\t    cornsilk: [255, 248, 220],\n\t    crimson: [220, 20, 60],\n\t    cyan: [0, 255, 255],\n\t    darkblue: [0, 0, 139],\n\t    darkcyan: [0, 139, 139],\n\t    darkgoldenrod: [184, 134, 11],\n\t    darkgray: [169, 169, 169],\n\t    darkgreen: [0, 100, 0],\n\t    darkgrey: [169, 169, 169],\n\t    darkkhaki: [189, 183, 107],\n\t    darkmagenta: [139, 0, 139],\n\t    darkolivegreen: [85, 107, 47],\n\t    darkorange: [255, 140, 0],\n\t    darkorchid: [153, 50, 204],\n\t    darkred: [139, 0, 0],\n\t    darksalmon: [233, 150, 122],\n\t    darkseagreen: [143, 188, 143],\n\t    darkslateblue: [72, 61, 139],\n\t    darkslategray: [47, 79, 79],\n\t    darkslategrey: [47, 79, 79],\n\t    darkturquoise: [0, 206, 209],\n\t    darkviolet: [148, 0, 211],\n\t    deeppink: [255, 20, 147],\n\t    deepskyblue: [0, 191, 255],\n\t    dimgray: [105, 105, 105],\n\t    dimgrey: [105, 105, 105],\n\t    dodgerblue: [30, 144, 255],\n\t    firebrick: [178, 34, 34],\n\t    floralwhite: [255, 250, 240],\n\t    forestgreen: [34, 139, 34],\n\t    fuchsia: [255, 0, 255],\n\t    gainsboro: [220, 220, 220],\n\t    ghostwhite: [248, 248, 255],\n\t    gold: [255, 215, 0],\n\t    goldenrod: [218, 165, 32],\n\t    gray: [128, 128, 128],\n\t    grey: [128, 128, 128],\n\t    green: [0, 128, 0],\n\t    greenyellow: [173, 255, 47],\n\t    honeydew: [240, 255, 240],\n\t    hotpink: [255, 105, 180],\n\t    indianred: [205, 92, 92],\n\t    indigo: [75, 0, 130],\n\t    ivory: [255, 255, 240],\n\t    khaki: [240, 230, 140],\n\t    lavender: [230, 230, 250],\n\t    lavenderblush: [255, 240, 245],\n\t    lawngreen: [124, 252, 0],\n\t    lemonchiffon: [255, 250, 205],\n\t    lightblue: [173, 216, 230],\n\t    lightcoral: [240, 128, 128],\n\t    lightcyan: [224, 255, 255],\n\t    lightgoldenrodyellow: [250, 250, 210],\n\t    lightgray: [211, 211, 211],\n\t    lightgreen: [144, 238, 144],\n\t    lightgrey: [211, 211, 211],\n\t    lightpink: [255, 182, 193],\n\t    lightsalmon: [255, 160, 122],\n\t    lightseagreen: [32, 178, 170],\n\t    lightskyblue: [135, 206, 250],\n\t    lightslategray: [119, 136, 153],\n\t    lightslategrey: [119, 136, 153],\n\t    lightsteelblue: [176, 196, 222],\n\t    lightyellow: [255, 255, 224],\n\t    lime: [0, 255, 0],\n\t    limegreen: [50, 205, 50],\n\t    linen: [250, 240, 230],\n\t    magenta: [255, 0, 255],\n\t    maroon: [128, 0, 0],\n\t    mediumaquamarine: [102, 205, 170],\n\t    mediumblue: [0, 0, 205],\n\t    mediumorchid: [186, 85, 211],\n\t    mediumpurple: [147, 112, 219],\n\t    mediumseagreen: [60, 179, 113],\n\t    mediumslateblue: [123, 104, 238],\n\t    mediumspringgreen: [0, 250, 154],\n\t    mediumturquoise: [72, 209, 204],\n\t    mediumvioletred: [199, 21, 133],\n\t    midnightblue: [25, 25, 112],\n\t    mintcream: [245, 255, 250],\n\t    mistyrose: [255, 228, 225],\n\t    moccasin: [255, 228, 181],\n\t    navajowhite: [255, 222, 173],\n\t    navy: [0, 0, 128],\n\t    oldlace: [253, 245, 230],\n\t    olive: [128, 128, 0],\n\t    olivedrab: [107, 142, 35],\n\t    orange: [255, 165, 0],\n\t    orangered: [255, 69, 0],\n\t    orchid: [218, 112, 214],\n\t    palegoldenrod: [238, 232, 170],\n\t    palegreen: [152, 251, 152],\n\t    paleturquoise: [175, 238, 238],\n\t    palevioletred: [219, 112, 147],\n\t    papayawhip: [255, 239, 213],\n\t    peachpuff: [255, 218, 185],\n\t    peru: [205, 133, 63],\n\t    pink: [255, 192, 203],\n\t    plum: [221, 160, 221],\n\t    powderblue: [176, 224, 230],\n\t    purple: [128, 0, 128],\n\t    red: [255, 0, 0],\n\t    rosybrown: [188, 143, 143],\n\t    royalblue: [65, 105, 225],\n\t    saddlebrown: [139, 69, 19],\n\t    salmon: [250, 128, 114],\n\t    sandybrown: [244, 164, 96],\n\t    seagreen: [46, 139, 87],\n\t    seashell: [255, 245, 238],\n\t    sienna: [160, 82, 45],\n\t    silver: [192, 192, 192],\n\t    skyblue: [135, 206, 235],\n\t    slateblue: [106, 90, 205],\n\t    slategray: [112, 128, 144],\n\t    slategrey: [112, 128, 144],\n\t    snow: [255, 250, 250],\n\t    springgreen: [0, 255, 127],\n\t    steelblue: [70, 130, 180],\n\t    tan: [210, 180, 140],\n\t    teal: [0, 128, 128],\n\t    thistle: [216, 191, 216],\n\t    tomato: [255, 99, 71],\n\t    turquoise: [64, 224, 208],\n\t    violet: [238, 130, 238],\n\t    wheat: [245, 222, 179],\n\t    white: [255, 255, 255],\n\t    whitesmoke: [245, 245, 245],\n\t    yellow: [255, 255, 0],\n\t    yellowgreen: [154, 205, 50]\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var PDFImage;\n\n\t  PDFImage = __webpack_require__(17);\n\n\t  module.exports = {\n\t    initImages: function() {\n\t      this._imageRegistry = {};\n\t      return this._imageCount = 0;\n\t    },\n\t    image: function(src, x, y, options) {\n\t      var bh, bp, bw, h, hp, image, ip, w, wp, _base, _name, _ref, _ref1, _ref2;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      if (typeof x === 'object') {\n\t        options = x;\n\t        x = null;\n\t      }\n\t      x = (_ref = x != null ? x : options.x) != null ? _ref : this.x;\n\t      y = (_ref1 = y != null ? y : options.y) != null ? _ref1 : this.y;\n\t      if (!Buffer.isBuffer(src)) {\n\t        image = this._imageRegistry[src];\n\t      }\n\t      if (!image) {\n\t        image = PDFImage.open(src, 'I' + (++this._imageCount));\n\t        image.embed(this);\n\t        if (!Buffer.isBuffer(src)) {\n\t          this._imageRegistry[src] = image;\n\t        }\n\t      }\n\t      if ((_base = this.page.xobjects)[_name = image.label] == null) {\n\t        _base[_name] = image.obj;\n\t      }\n\t      w = options.width || image.width;\n\t      h = options.height || image.height;\n\t      if (options.width && !options.height) {\n\t        wp = w / image.width;\n\t        w = image.width * wp;\n\t        h = image.height * wp;\n\t      } else if (options.height && !options.width) {\n\t        hp = h / image.height;\n\t        w = image.width * hp;\n\t        h = image.height * hp;\n\t      } else if (options.scale) {\n\t        w = image.width * options.scale;\n\t        h = image.height * options.scale;\n\t      } else if (options.fit) {\n\t        _ref2 = options.fit, bw = _ref2[0], bh = _ref2[1];\n\t        bp = bw / bh;\n\t        ip = image.width / image.height;\n\t        if (ip > bp) {\n\t          w = bw;\n\t          h = bw / ip;\n\t        } else {\n\t          h = bh;\n\t          w = bh * ip;\n\t        }\n\t        if (options.align === 'center') {\n\t          x = x + bw / 2 - w / 2;\n\t        } else if (options.align === 'right') {\n\t          x = x + bw - w;\n\t        }\n\t        if (options.valign === 'center') {\n\t          y = y + bh / 2 - h / 2;\n\t        } else if (options.valign === 'bottom') {\n\t          y = y + bh - h;\n\t        }\n\t      }\n\t      if (this.y === y) {\n\t        this.y += h;\n\t      }\n\t      this.save();\n\t      this.transform(w, 0, 0, -h, x, y + h);\n\t      this.addContent(\"/\" + image.label + \" Do\");\n\t      this.restore();\n\t      return this;\n\t    }\n\t  };\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  module.exports = {\n\t    annotate: function(x, y, w, h, options) {\n\t      var key, ref, val;\n\t      options.Type = 'Annot';\n\t      options.Rect = this._convertRect(x, y, w, h);\n\t      options.Border = [0, 0, 0];\n\t      if (options.Subtype !== 'Link') {\n\t        if (options.C == null) {\n\t          options.C = this._normalizeColor(options.color || [0, 0, 0]);\n\t        }\n\t      }\n\t      delete options.color;\n\t      if (typeof options.Dest === 'string') {\n\t        options.Dest = new String(options.Dest);\n\t      }\n\t      for (key in options) {\n\t        val = options[key];\n\t        options[key[0].toUpperCase() + key.slice(1)] = val;\n\t      }\n\t      ref = this.ref(options);\n\t      this.page.annotations.push(ref);\n\t      ref.end();\n\t      return this;\n\t    },\n\t    note: function(x, y, w, h, contents, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'Text';\n\t      options.Contents = new String(contents);\n\t      options.Name = 'Comment';\n\t      if (options.color == null) {\n\t        options.color = [243, 223, 92];\n\t      }\n\t      return this.annotate(x, y, w, h, options);\n\t    },\n\t    link: function(x, y, w, h, url, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'Link';\n\t      options.A = this.ref({\n\t        S: 'URI',\n\t        URI: new String(url)\n\t      });\n\t      options.A.end();\n\t      return this.annotate(x, y, w, h, options);\n\t    },\n\t    _markup: function(x, y, w, h, options) {\n\t      var x1, x2, y1, y2, _ref;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      _ref = this._convertRect(x, y, w, h), x1 = _ref[0], y1 = _ref[1], x2 = _ref[2], y2 = _ref[3];\n\t      options.QuadPoints = [x1, y2, x2, y2, x1, y1, x2, y1];\n\t      options.Contents = new String;\n\t      return this.annotate(x, y, w, h, options);\n\t    },\n\t    highlight: function(x, y, w, h, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'Highlight';\n\t      if (options.color == null) {\n\t        options.color = [241, 238, 148];\n\t      }\n\t      return this._markup(x, y, w, h, options);\n\t    },\n\t    underline: function(x, y, w, h, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'Underline';\n\t      return this._markup(x, y, w, h, options);\n\t    },\n\t    strike: function(x, y, w, h, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'StrikeOut';\n\t      return this._markup(x, y, w, h, options);\n\t    },\n\t    lineAnnotation: function(x1, y1, x2, y2, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'Line';\n\t      options.Contents = new String;\n\t      options.L = [x1, this.page.height - y1, x2, this.page.height - y2];\n\t      return this.annotate(x1, y1, x2, y2, options);\n\t    },\n\t    rectAnnotation: function(x, y, w, h, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'Square';\n\t      options.Contents = new String;\n\t      return this.annotate(x, y, w, h, options);\n\t    },\n\t    ellipseAnnotation: function(x, y, w, h, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'Circle';\n\t      options.Contents = new String;\n\t      return this.annotate(x, y, w, h, options);\n\t    },\n\t    textAnnotation: function(x, y, w, h, text, options) {\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      options.Subtype = 'FreeText';\n\t      options.Contents = new String(text);\n\t      options.DA = new String;\n\t      return this.annotate(x, y, w, h, options);\n\t    },\n\t    _convertRect: function(x1, y1, w, h) {\n\t      var m0, m1, m2, m3, m4, m5, x2, y2, _ref;\n\t      y2 = y1;\n\t      y1 += h;\n\t      x2 = x1 + w;\n\t      _ref = this._ctm, m0 = _ref[0], m1 = _ref[1], m2 = _ref[2], m3 = _ref[3], m4 = _ref[4], m5 = _ref[5];\n\t      x1 = m0 * x1 + m2 * y1 + m4;\n\t      y1 = m1 * x1 + m3 * y1 + m5;\n\t      x2 = m0 * x2 + m2 * y2 + m4;\n\t      y2 = m1 * x2 + m3 * y2 + m5;\n\t      return [x1, y1, x2, y2];\n\t    }\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var PDFFont;\n\n\t  PDFFont = __webpack_require__(52);\n\n\t  module.exports = {\n\t    initFonts: function() {\n\t      this._fontFamilies = {};\n\t      this._fontCount = 0;\n\t      this._fontSize = 12;\n\t      this._font = null;\n\t      this._registeredFonts = {};\n\n\t    },\n\t    font: function(src, family, size) {\n\t      var cacheKey, font, id, _ref;\n\t      if (typeof family === 'number') {\n\t        size = family;\n\t        family = null;\n\t      }\n\t      if (typeof src === 'string' && this._registeredFonts[src]) {\n\t        cacheKey = src;\n\t        _ref = this._registeredFonts[src], src = _ref.src, family = _ref.family;\n\t      } else {\n\t        cacheKey = family || src;\n\t        if (typeof cacheKey !== 'string') {\n\t          cacheKey = null;\n\t        }\n\t      }\n\t      if (size != null) {\n\t        this.fontSize(size);\n\t      }\n\t      if (font = this._fontFamilies[cacheKey]) {\n\t        this._font = font;\n\t        return this;\n\t      }\n\t      id = 'F' + (++this._fontCount);\n\t      this._font = new PDFFont(this, src, family, id);\n\t      if (font = this._fontFamilies[this._font.name]) {\n\t        this._font = font;\n\t        return this;\n\t      }\n\t      if (cacheKey) {\n\t        this._fontFamilies[cacheKey] = this._font;\n\t      }\n\t      this._fontFamilies[this._font.name] = this._font;\n\t      return this;\n\t    },\n\t    fontSize: function(_fontSize) {\n\t      this._fontSize = _fontSize;\n\t      return this;\n\t    },\n\t    currentLineHeight: function(includeGap) {\n\t      if (includeGap == null) {\n\t        includeGap = false;\n\t      }\n\t      return this._font.lineHeight(this._fontSize, includeGap);\n\t    },\n\t    registerFont: function(name, src, family) {\n\t      this._registeredFonts[name] = {\n\t        src: src,\n\t        family: family\n\t      };\n\t      return this;\n\t    }\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tvar Transform = __webpack_require__(55);\n\n\tvar binding = __webpack_require__(50);\n\tvar util = __webpack_require__(60);\n\tvar assert = __webpack_require__(53).ok;\n\n\t// zlib doesn't provide these, so kludge them in following the same\n\t// const naming scheme zlib uses.\n\tbinding.Z_MIN_WINDOWBITS = 8;\n\tbinding.Z_MAX_WINDOWBITS = 15;\n\tbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n\t// fewer than 64 bytes per chunk is stupid.\n\t// technically it could work with as few as 8, but even 64 bytes\n\t// is absurdly low.  Usually a MB or more is best.\n\tbinding.Z_MIN_CHUNK = 64;\n\tbinding.Z_MAX_CHUNK = Infinity;\n\tbinding.Z_DEFAULT_CHUNK = (16 * 1024);\n\n\tbinding.Z_MIN_MEMLEVEL = 1;\n\tbinding.Z_MAX_MEMLEVEL = 9;\n\tbinding.Z_DEFAULT_MEMLEVEL = 8;\n\n\tbinding.Z_MIN_LEVEL = -1;\n\tbinding.Z_MAX_LEVEL = 9;\n\tbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n\t// expose all the zlib constants\n\tObject.keys(binding).forEach(function(k) {\n\t  if (k.match(/^Z/)) exports[k] = binding[k];\n\t});\n\n\t// translation table for return codes.\n\texports.codes = {\n\t  Z_OK: binding.Z_OK,\n\t  Z_STREAM_END: binding.Z_STREAM_END,\n\t  Z_NEED_DICT: binding.Z_NEED_DICT,\n\t  Z_ERRNO: binding.Z_ERRNO,\n\t  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n\t  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n\t  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n\t  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n\t  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n\t};\n\n\tObject.keys(exports.codes).forEach(function(k) {\n\t  exports.codes[exports.codes[k]] = k;\n\t});\n\n\texports.Deflate = Deflate;\n\texports.Inflate = Inflate;\n\texports.Gzip = Gzip;\n\texports.Gunzip = Gunzip;\n\texports.DeflateRaw = DeflateRaw;\n\texports.InflateRaw = InflateRaw;\n\texports.Unzip = Unzip;\n\n\texports.createDeflate = function(o) {\n\t  return new Deflate(o);\n\t};\n\n\texports.createInflate = function(o) {\n\t  return new Inflate(o);\n\t};\n\n\texports.createDeflateRaw = function(o) {\n\t  return new DeflateRaw(o);\n\t};\n\n\texports.createInflateRaw = function(o) {\n\t  return new InflateRaw(o);\n\t};\n\n\texports.createGzip = function(o) {\n\t  return new Gzip(o);\n\t};\n\n\texports.createGunzip = function(o) {\n\t  return new Gunzip(o);\n\t};\n\n\texports.createUnzip = function(o) {\n\t  return new Unzip(o);\n\t};\n\n\n\t// Convenience methods.\n\t// compress/decompress a string or buffer in one step.\n\texports.deflate = function(buffer, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return zlibBuffer(new Deflate(opts), buffer, callback);\n\t};\n\n\texports.deflateSync = function(buffer, opts) {\n\t  return zlibBufferSync(new Deflate(opts), buffer);\n\t};\n\n\texports.gzip = function(buffer, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return zlibBuffer(new Gzip(opts), buffer, callback);\n\t};\n\n\texports.gzipSync = function(buffer, opts) {\n\t  return zlibBufferSync(new Gzip(opts), buffer);\n\t};\n\n\texports.deflateRaw = function(buffer, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n\t};\n\n\texports.deflateRawSync = function(buffer, opts) {\n\t  return zlibBufferSync(new DeflateRaw(opts), buffer);\n\t};\n\n\texports.unzip = function(buffer, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return zlibBuffer(new Unzip(opts), buffer, callback);\n\t};\n\n\texports.unzipSync = function(buffer, opts) {\n\t  return zlibBufferSync(new Unzip(opts), buffer);\n\t};\n\n\texports.inflate = function(buffer, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return zlibBuffer(new Inflate(opts), buffer, callback);\n\t};\n\n\texports.inflateSync = function(buffer, opts) {\n\t  return zlibBufferSync(new Inflate(opts), buffer);\n\t};\n\n\texports.gunzip = function(buffer, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return zlibBuffer(new Gunzip(opts), buffer, callback);\n\t};\n\n\texports.gunzipSync = function(buffer, opts) {\n\t  return zlibBufferSync(new Gunzip(opts), buffer);\n\t};\n\n\texports.inflateRaw = function(buffer, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n\t};\n\n\texports.inflateRawSync = function(buffer, opts) {\n\t  return zlibBufferSync(new InflateRaw(opts), buffer);\n\t};\n\n\tfunction zlibBuffer(engine, buffer, callback) {\n\t  var buffers = [];\n\t  var nread = 0;\n\n\t  engine.on('error', onError);\n\t  engine.on('end', onEnd);\n\n\t  engine.end(buffer);\n\t  flow();\n\n\t  function flow() {\n\t    var chunk;\n\t    while (null !== (chunk = engine.read())) {\n\t      buffers.push(chunk);\n\t      nread += chunk.length;\n\t    }\n\t    engine.once('readable', flow);\n\t  }\n\n\t  function onError(err) {\n\t    engine.removeListener('end', onEnd);\n\t    engine.removeListener('readable', flow);\n\t    callback(err);\n\t  }\n\n\t  function onEnd() {\n\t    var buf = Buffer.concat(buffers, nread);\n\t    buffers = [];\n\t    callback(null, buf);\n\t    engine.close();\n\t  }\n\t}\n\n\tfunction zlibBufferSync(engine, buffer) {\n\t  if (typeof buffer === 'string')\n\t    buffer = new Buffer(buffer);\n\t  if (!Buffer.isBuffer(buffer))\n\t    throw new TypeError('Not a string or buffer');\n\n\t  var flushFlag = binding.Z_FINISH;\n\n\t  return engine._processChunk(buffer, flushFlag);\n\t}\n\n\t// generic zlib\n\t// minimal 2-byte header\n\tfunction Deflate(opts) {\n\t  if (!(this instanceof Deflate)) return new Deflate(opts);\n\t  Zlib.call(this, opts, binding.DEFLATE);\n\t}\n\n\tfunction Inflate(opts) {\n\t  if (!(this instanceof Inflate)) return new Inflate(opts);\n\t  Zlib.call(this, opts, binding.INFLATE);\n\t}\n\n\n\n\t// gzip - bigger header, same deflate compression\n\tfunction Gzip(opts) {\n\t  if (!(this instanceof Gzip)) return new Gzip(opts);\n\t  Zlib.call(this, opts, binding.GZIP);\n\t}\n\n\tfunction Gunzip(opts) {\n\t  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n\t  Zlib.call(this, opts, binding.GUNZIP);\n\t}\n\n\n\n\t// raw - no header\n\tfunction DeflateRaw(opts) {\n\t  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n\t  Zlib.call(this, opts, binding.DEFLATERAW);\n\t}\n\n\tfunction InflateRaw(opts) {\n\t  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n\t  Zlib.call(this, opts, binding.INFLATERAW);\n\t}\n\n\n\t// auto-detect header.\n\tfunction Unzip(opts) {\n\t  if (!(this instanceof Unzip)) return new Unzip(opts);\n\t  Zlib.call(this, opts, binding.UNZIP);\n\t}\n\n\n\t// the Zlib class they all inherit from\n\t// This thing manages the queue of requests, and returns\n\t// true or false if there is anything in the queue when\n\t// you call the .write() method.\n\n\tfunction Zlib(opts, mode) {\n\t  this._opts = opts = opts || {};\n\t  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n\t  Transform.call(this, opts);\n\n\t  if (opts.flush) {\n\t    if (opts.flush !== binding.Z_NO_FLUSH &&\n\t        opts.flush !== binding.Z_PARTIAL_FLUSH &&\n\t        opts.flush !== binding.Z_SYNC_FLUSH &&\n\t        opts.flush !== binding.Z_FULL_FLUSH &&\n\t        opts.flush !== binding.Z_FINISH &&\n\t        opts.flush !== binding.Z_BLOCK) {\n\t      throw new Error('Invalid flush flag: ' + opts.flush);\n\t    }\n\t  }\n\t  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n\n\t  if (opts.chunkSize) {\n\t    if (opts.chunkSize < exports.Z_MIN_CHUNK ||\n\t        opts.chunkSize > exports.Z_MAX_CHUNK) {\n\t      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n\t    }\n\t  }\n\n\t  if (opts.windowBits) {\n\t    if (opts.windowBits < exports.Z_MIN_WINDOWBITS ||\n\t        opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n\t      throw new Error('Invalid windowBits: ' + opts.windowBits);\n\t    }\n\t  }\n\n\t  if (opts.level) {\n\t    if (opts.level < exports.Z_MIN_LEVEL ||\n\t        opts.level > exports.Z_MAX_LEVEL) {\n\t      throw new Error('Invalid compression level: ' + opts.level);\n\t    }\n\t  }\n\n\t  if (opts.memLevel) {\n\t    if (opts.memLevel < exports.Z_MIN_MEMLEVEL ||\n\t        opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n\t      throw new Error('Invalid memLevel: ' + opts.memLevel);\n\t    }\n\t  }\n\n\t  if (opts.strategy) {\n\t    if (opts.strategy != exports.Z_FILTERED &&\n\t        opts.strategy != exports.Z_HUFFMAN_ONLY &&\n\t        opts.strategy != exports.Z_RLE &&\n\t        opts.strategy != exports.Z_FIXED &&\n\t        opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n\t      throw new Error('Invalid strategy: ' + opts.strategy);\n\t    }\n\t  }\n\n\t  if (opts.dictionary) {\n\t    if (!Buffer.isBuffer(opts.dictionary)) {\n\t      throw new Error('Invalid dictionary: it should be a Buffer instance');\n\t    }\n\t  }\n\n\t  this._binding = new binding.Zlib(mode);\n\n\t  var self = this;\n\t  this._hadError = false;\n\t  this._binding.onerror = function(message, errno) {\n\t    // there is no way to cleanly recover.\n\t    // continuing only obscures problems.\n\t    self._binding = null;\n\t    self._hadError = true;\n\n\t    var error = new Error(message);\n\t    error.errno = errno;\n\t    error.code = exports.codes[errno];\n\t    self.emit('error', error);\n\t  };\n\n\t  var level = exports.Z_DEFAULT_COMPRESSION;\n\t  if (typeof opts.level === 'number') level = opts.level;\n\n\t  var strategy = exports.Z_DEFAULT_STRATEGY;\n\t  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n\t  this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,\n\t                     level,\n\t                     opts.memLevel || exports.Z_DEFAULT_MEMLEVEL,\n\t                     strategy,\n\t                     opts.dictionary);\n\n\t  this._buffer = new Buffer(this._chunkSize);\n\t  this._offset = 0;\n\t  this._closed = false;\n\t  this._level = level;\n\t  this._strategy = strategy;\n\n\t  this.once('end', this.close);\n\t}\n\n\tutil.inherits(Zlib, Transform);\n\n\tZlib.prototype.params = function(level, strategy, callback) {\n\t  if (level < exports.Z_MIN_LEVEL ||\n\t      level > exports.Z_MAX_LEVEL) {\n\t    throw new RangeError('Invalid compression level: ' + level);\n\t  }\n\t  if (strategy != exports.Z_FILTERED &&\n\t      strategy != exports.Z_HUFFMAN_ONLY &&\n\t      strategy != exports.Z_RLE &&\n\t      strategy != exports.Z_FIXED &&\n\t      strategy != exports.Z_DEFAULT_STRATEGY) {\n\t    throw new TypeError('Invalid strategy: ' + strategy);\n\t  }\n\n\t  if (this._level !== level || this._strategy !== strategy) {\n\t    var self = this;\n\t    this.flush(binding.Z_SYNC_FLUSH, function() {\n\t      self._binding.params(level, strategy);\n\t      if (!self._hadError) {\n\t        self._level = level;\n\t        self._strategy = strategy;\n\t        if (callback) callback();\n\t      }\n\t    });\n\t  } else {\n\t    process.nextTick(callback);\n\t  }\n\t};\n\n\tZlib.prototype.reset = function() {\n\t  return this._binding.reset();\n\t};\n\n\t// This is the _flush function called by the transform class,\n\t// internally, when the last chunk has been written.\n\tZlib.prototype._flush = function(callback) {\n\t  this._transform(new Buffer(0), '', callback);\n\t};\n\n\tZlib.prototype.flush = function(kind, callback) {\n\t  var ws = this._writableState;\n\n\t  if (typeof kind === 'function' || (kind === void 0 && !callback)) {\n\t    callback = kind;\n\t    kind = binding.Z_FULL_FLUSH;\n\t  }\n\n\t  if (ws.ended) {\n\t    if (callback)\n\t      process.nextTick(callback);\n\t  } else if (ws.ending) {\n\t    if (callback)\n\t      this.once('end', callback);\n\t  } else if (ws.needDrain) {\n\t    var self = this;\n\t    this.once('drain', function() {\n\t      self.flush(callback);\n\t    });\n\t  } else {\n\t    this._flushFlag = kind;\n\t    this.write(new Buffer(0), '', callback);\n\t  }\n\t};\n\n\tZlib.prototype.close = function(callback) {\n\t  if (callback)\n\t    process.nextTick(callback);\n\n\t  if (this._closed)\n\t    return;\n\n\t  this._closed = true;\n\n\t  this._binding.close();\n\n\t  var self = this;\n\t  process.nextTick(function() {\n\t    self.emit('close');\n\t  });\n\t};\n\n\tZlib.prototype._transform = function(chunk, encoding, cb) {\n\t  var flushFlag;\n\t  var ws = this._writableState;\n\t  var ending = ws.ending || ws.ended;\n\t  var last = ending && (!chunk || ws.length === chunk.length);\n\n\t  if (!chunk === null && !Buffer.isBuffer(chunk))\n\t    return cb(new Error('invalid input'));\n\n\t  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.\n\t  // If it's explicitly flushing at some other time, then we use\n\t  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n\t  // goodness.\n\t  if (last)\n\t    flushFlag = binding.Z_FINISH;\n\t  else {\n\t    flushFlag = this._flushFlag;\n\t    // once we've flushed the last of the queue, stop flushing and\n\t    // go back to the normal behavior.\n\t    if (chunk.length >= ws.length) {\n\t      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n\t    }\n\t  }\n\n\t  var self = this;\n\t  this._processChunk(chunk, flushFlag, cb);\n\t};\n\n\tZlib.prototype._processChunk = function(chunk, flushFlag, cb) {\n\t  var availInBefore = chunk && chunk.length;\n\t  var availOutBefore = this._chunkSize - this._offset;\n\t  var inOff = 0;\n\n\t  var self = this;\n\n\t  var async = typeof cb === 'function';\n\n\t  if (!async) {\n\t    var buffers = [];\n\t    var nread = 0;\n\n\t    var error;\n\t    this.on('error', function(er) {\n\t      error = er;\n\t    });\n\n\t    do {\n\t      var res = this._binding.writeSync(flushFlag,\n\t                                        chunk, // in\n\t                                        inOff, // in_off\n\t                                        availInBefore, // in_len\n\t                                        this._buffer, // out\n\t                                        this._offset, //out_off\n\t                                        availOutBefore); // out_len\n\t    } while (!this._hadError && callback(res[0], res[1]));\n\n\t    if (this._hadError) {\n\t      throw error;\n\t    }\n\n\t    var buf = Buffer.concat(buffers, nread);\n\t    this.close();\n\n\t    return buf;\n\t  }\n\n\t  var req = this._binding.write(flushFlag,\n\t                                chunk, // in\n\t                                inOff, // in_off\n\t                                availInBefore, // in_len\n\t                                this._buffer, // out\n\t                                this._offset, //out_off\n\t                                availOutBefore); // out_len\n\n\t  req.buffer = chunk;\n\t  req.callback = callback;\n\n\t  function callback(availInAfter, availOutAfter) {\n\t    if (self._hadError)\n\t      return;\n\n\t    var have = availOutBefore - availOutAfter;\n\t    assert(have >= 0, 'have should not go down');\n\n\t    if (have > 0) {\n\t      var out = self._buffer.slice(self._offset, self._offset + have);\n\t      self._offset += have;\n\t      // serve some output to the consumer.\n\t      if (async) {\n\t        self.push(out);\n\t      } else {\n\t        buffers.push(out);\n\t        nread += out.length;\n\t      }\n\t    }\n\n\t    // exhausted the output buffer, or used all the input create a new one.\n\t    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n\t      availOutBefore = self._chunkSize;\n\t      self._offset = 0;\n\t      self._buffer = new Buffer(self._chunkSize);\n\t    }\n\n\t    if (availOutAfter === 0) {\n\t      // Not actually done.  Need to reprocess.\n\t      // Also, update the availInBefore to the availInAfter value,\n\t      // so that if we have to hit it a third (fourth, etc.) time,\n\t      // it'll have the correct byte counts.\n\t      inOff += (availInBefore - availInAfter);\n\t      availInBefore = availInAfter;\n\n\t      if (!async)\n\t        return true;\n\n\t      var newReq = self._binding.write(flushFlag,\n\t                                       chunk,\n\t                                       inOff,\n\t                                       availInBefore,\n\t                                       self._buffer,\n\t                                       self._offset,\n\t                                       self._chunkSize);\n\t      newReq.callback = callback; // this same function\n\t      newReq.buffer = chunk;\n\t      return;\n\t    }\n\n\t    if (!async)\n\t      return false;\n\n\t    // finished with the chunk.\n\t    cb();\n\t  }\n\t};\n\n\tutil.inherits(Deflate, Zlib);\n\tutil.inherits(Inflate, Zlib);\n\tutil.inherits(Gzip, Zlib);\n\tutil.inherits(Gunzip, Zlib);\n\tutil.inherits(DeflateRaw, Zlib);\n\tutil.inherits(InflateRaw, Zlib);\n\tutil.inherits(Unzip, Zlib);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer, __webpack_require__(61)))\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tmodule.exports = Stream;\n\n\tvar EE = __webpack_require__(54).EventEmitter;\n\tvar inherits = __webpack_require__(62);\n\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(56);\n\tStream.Writable = __webpack_require__(57);\n\tStream.Duplex = __webpack_require__(58);\n\tStream.Transform = __webpack_require__(55);\n\tStream.PassThrough = __webpack_require__(59);\n\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\n\n\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\n\t  source.on('data', ondata);\n\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\n\t  dest.on('drain', ondrain);\n\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\n\t    dest.end();\n\t  }\n\n\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\n\t    dest.removeListener('close', cleanup);\n\t  }\n\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\n\t  dest.on('close', cleanup);\n\n\t  dest.emit('pipe', source);\n\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var SVGPath;\n\n\t  SVGPath = (function() {\n\t    var apply, arcToSegments, cx, cy, parameters, parse, px, py, runners, segmentToBezier, solveArc, sx, sy;\n\n\t    function SVGPath() {}\n\n\t    SVGPath.apply = function(doc, path) {\n\t      var commands;\n\t      commands = parse(path);\n\t      return apply(commands, doc);\n\t    };\n\n\t    parameters = {\n\t      A: 7,\n\t      a: 7,\n\t      C: 6,\n\t      c: 6,\n\t      H: 1,\n\t      h: 1,\n\t      L: 2,\n\t      l: 2,\n\t      M: 2,\n\t      m: 2,\n\t      Q: 4,\n\t      q: 4,\n\t      S: 4,\n\t      s: 4,\n\t      T: 2,\n\t      t: 2,\n\t      V: 1,\n\t      v: 1,\n\t      Z: 0,\n\t      z: 0\n\t    };\n\n\t    parse = function(path) {\n\t      var args, c, cmd, curArg, foundDecimal, params, ret, _i, _len;\n\t      ret = [];\n\t      args = [];\n\t      curArg = \"\";\n\t      foundDecimal = false;\n\t      params = 0;\n\t      for (_i = 0, _len = path.length; _i < _len; _i++) {\n\t        c = path[_i];\n\t        if (parameters[c] != null) {\n\t          params = parameters[c];\n\t          if (cmd) {\n\t            if (curArg.length > 0) {\n\t              args[args.length] = +curArg;\n\t            }\n\t            ret[ret.length] = {\n\t              cmd: cmd,\n\t              args: args\n\t            };\n\t            args = [];\n\t            curArg = \"\";\n\t            foundDecimal = false;\n\t          }\n\t          cmd = c;\n\t        } else if ((c === \" \" || c === \",\") || (c === \"-\" && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') || (c === \".\" && foundDecimal)) {\n\t          if (curArg.length === 0) {\n\t            continue;\n\t          }\n\t          if (args.length === params) {\n\t            ret[ret.length] = {\n\t              cmd: cmd,\n\t              args: args\n\t            };\n\t            args = [+curArg];\n\t            if (cmd === \"M\") {\n\t              cmd = \"L\";\n\t            }\n\t            if (cmd === \"m\") {\n\t              cmd = \"l\";\n\t            }\n\t          } else {\n\t            args[args.length] = +curArg;\n\t          }\n\t          foundDecimal = c === \".\";\n\t          curArg = c === '-' || c === '.' ? c : '';\n\t        } else {\n\t          curArg += c;\n\t          if (c === '.') {\n\t            foundDecimal = true;\n\t          }\n\t        }\n\t      }\n\t      if (curArg.length > 0) {\n\t        if (args.length === params) {\n\t          ret[ret.length] = {\n\t            cmd: cmd,\n\t            args: args\n\t          };\n\t          args = [+curArg];\n\t          if (cmd === \"M\") {\n\t            cmd = \"L\";\n\t          }\n\t          if (cmd === \"m\") {\n\t            cmd = \"l\";\n\t          }\n\t        } else {\n\t          args[args.length] = +curArg;\n\t        }\n\t      }\n\t      ret[ret.length] = {\n\t        cmd: cmd,\n\t        args: args\n\t      };\n\t      return ret;\n\t    };\n\n\t    cx = cy = px = py = sx = sy = 0;\n\n\t    apply = function(commands, doc) {\n\t      var c, i, _i, _len, _name;\n\t      cx = cy = px = py = sx = sy = 0;\n\t      for (i = _i = 0, _len = commands.length; _i < _len; i = ++_i) {\n\t        c = commands[i];\n\t        if (typeof runners[_name = c.cmd] === \"function\") {\n\t          runners[_name](doc, c.args);\n\t        }\n\t      }\n\t      return cx = cy = px = py = 0;\n\t    };\n\n\t    runners = {\n\t      M: function(doc, a) {\n\t        cx = a[0];\n\t        cy = a[1];\n\t        px = py = null;\n\t        sx = cx;\n\t        sy = cy;\n\t        return doc.moveTo(cx, cy);\n\t      },\n\t      m: function(doc, a) {\n\t        cx += a[0];\n\t        cy += a[1];\n\t        px = py = null;\n\t        sx = cx;\n\t        sy = cy;\n\t        return doc.moveTo(cx, cy);\n\t      },\n\t      C: function(doc, a) {\n\t        cx = a[4];\n\t        cy = a[5];\n\t        px = a[2];\n\t        py = a[3];\n\t        return doc.bezierCurveTo.apply(doc, a);\n\t      },\n\t      c: function(doc, a) {\n\t        doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n\t        px = cx + a[2];\n\t        py = cy + a[3];\n\t        cx += a[4];\n\t        return cy += a[5];\n\t      },\n\t      S: function(doc, a) {\n\t        if (px === null) {\n\t          px = cx;\n\t          py = cy;\n\t        }\n\t        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n\t        px = a[0];\n\t        py = a[1];\n\t        cx = a[2];\n\t        return cy = a[3];\n\t      },\n\t      s: function(doc, a) {\n\t        if (px === null) {\n\t          px = cx;\n\t          py = cy;\n\t        }\n\t        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n\t        px = cx + a[0];\n\t        py = cy + a[1];\n\t        cx += a[2];\n\t        return cy += a[3];\n\t      },\n\t      Q: function(doc, a) {\n\t        px = a[0];\n\t        py = a[1];\n\t        cx = a[2];\n\t        cy = a[3];\n\t        return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n\t      },\n\t      q: function(doc, a) {\n\t        doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n\t        px = cx + a[0];\n\t        py = cy + a[1];\n\t        cx += a[2];\n\t        return cy += a[3];\n\t      },\n\t      T: function(doc, a) {\n\t        if (px === null) {\n\t          px = cx;\n\t          py = cy;\n\t        } else {\n\t          px = cx - (px - cx);\n\t          py = cy - (py - cy);\n\t        }\n\t        doc.quadraticCurveTo(px, py, a[0], a[1]);\n\t        px = cx - (px - cx);\n\t        py = cy - (py - cy);\n\t        cx = a[0];\n\t        return cy = a[1];\n\t      },\n\t      t: function(doc, a) {\n\t        if (px === null) {\n\t          px = cx;\n\t          py = cy;\n\t        } else {\n\t          px = cx - (px - cx);\n\t          py = cy - (py - cy);\n\t        }\n\t        doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);\n\t        cx += a[0];\n\t        return cy += a[1];\n\t      },\n\t      A: function(doc, a) {\n\t        solveArc(doc, cx, cy, a);\n\t        cx = a[5];\n\t        return cy = a[6];\n\t      },\n\t      a: function(doc, a) {\n\t        a[5] += cx;\n\t        a[6] += cy;\n\t        solveArc(doc, cx, cy, a);\n\t        cx = a[5];\n\t        return cy = a[6];\n\t      },\n\t      L: function(doc, a) {\n\t        cx = a[0];\n\t        cy = a[1];\n\t        px = py = null;\n\t        return doc.lineTo(cx, cy);\n\t      },\n\t      l: function(doc, a) {\n\t        cx += a[0];\n\t        cy += a[1];\n\t        px = py = null;\n\t        return doc.lineTo(cx, cy);\n\t      },\n\t      H: function(doc, a) {\n\t        cx = a[0];\n\t        px = py = null;\n\t        return doc.lineTo(cx, cy);\n\t      },\n\t      h: function(doc, a) {\n\t        cx += a[0];\n\t        px = py = null;\n\t        return doc.lineTo(cx, cy);\n\t      },\n\t      V: function(doc, a) {\n\t        cy = a[0];\n\t        px = py = null;\n\t        return doc.lineTo(cx, cy);\n\t      },\n\t      v: function(doc, a) {\n\t        cy += a[0];\n\t        px = py = null;\n\t        return doc.lineTo(cx, cy);\n\t      },\n\t      Z: function(doc) {\n\t        doc.closePath();\n\t        cx = sx;\n\t        return cy = sy;\n\t      },\n\t      z: function(doc) {\n\t        doc.closePath();\n\t        cx = sx;\n\t        return cy = sy;\n\t      }\n\t    };\n\n\t    solveArc = function(doc, x, y, coords) {\n\t      var bez, ex, ey, large, rot, rx, ry, seg, segs, sweep, _i, _len, _results;\n\t      rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n\t      segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n\t      _results = [];\n\t      for (_i = 0, _len = segs.length; _i < _len; _i++) {\n\t        seg = segs[_i];\n\t        bez = segmentToBezier.apply(null, seg);\n\t        _results.push(doc.bezierCurveTo.apply(doc, bez));\n\t      }\n\t      return _results;\n\t    };\n\n\t    arcToSegments = function(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n\t      var a00, a01, a10, a11, cos_th, d, i, pl, result, segments, sfactor, sfactor_sq, sin_th, th, th0, th1, th2, th3, th_arc, x0, x1, xc, y0, y1, yc, _i;\n\t      th = rotateX * (Math.PI / 180);\n\t      sin_th = Math.sin(th);\n\t      cos_th = Math.cos(th);\n\t      rx = Math.abs(rx);\n\t      ry = Math.abs(ry);\n\t      px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n\t      py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n\t      pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\n\t      if (pl > 1) {\n\t        pl = Math.sqrt(pl);\n\t        rx *= pl;\n\t        ry *= pl;\n\t      }\n\t      a00 = cos_th / rx;\n\t      a01 = sin_th / rx;\n\t      a10 = (-sin_th) / ry;\n\t      a11 = cos_th / ry;\n\t      x0 = a00 * ox + a01 * oy;\n\t      y0 = a10 * ox + a11 * oy;\n\t      x1 = a00 * x + a01 * y;\n\t      y1 = a10 * x + a11 * y;\n\t      d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n\t      sfactor_sq = 1 / d - 0.25;\n\t      if (sfactor_sq < 0) {\n\t        sfactor_sq = 0;\n\t      }\n\t      sfactor = Math.sqrt(sfactor_sq);\n\t      if (sweep === large) {\n\t        sfactor = -sfactor;\n\t      }\n\t      xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n\t      yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n\t      th0 = Math.atan2(y0 - yc, x0 - xc);\n\t      th1 = Math.atan2(y1 - yc, x1 - xc);\n\t      th_arc = th1 - th0;\n\t      if (th_arc < 0 && sweep === 1) {\n\t        th_arc += 2 * Math.PI;\n\t      } else if (th_arc > 0 && sweep === 0) {\n\t        th_arc -= 2 * Math.PI;\n\t      }\n\t      segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n\t      result = [];\n\t      for (i = _i = 0; 0 <= segments ? _i < segments : _i > segments; i = 0 <= segments ? ++_i : --_i) {\n\t        th2 = th0 + i * th_arc / segments;\n\t        th3 = th0 + (i + 1) * th_arc / segments;\n\t        result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n\t      }\n\t      return result;\n\t    };\n\n\t    segmentToBezier = function(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n\t      var a00, a01, a10, a11, t, th_half, x1, x2, x3, y1, y2, y3;\n\t      a00 = cos_th * rx;\n\t      a01 = -sin_th * ry;\n\t      a10 = sin_th * rx;\n\t      a11 = cos_th * ry;\n\t      th_half = 0.5 * (th1 - th0);\n\t      t = (8 / 3) * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);\n\t      x1 = cx + Math.cos(th0) - t * Math.sin(th0);\n\t      y1 = cy + Math.sin(th0) + t * Math.cos(th0);\n\t      x3 = cx + Math.cos(th1);\n\t      y3 = cy + Math.sin(th1);\n\t      x2 = x3 + t * Math.sin(th1);\n\t      y2 = y3 - t * Math.cos(th1);\n\t      return [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n\t    };\n\n\t    return SVGPath;\n\n\t  })();\n\n\t  module.exports = SVGPath;\n\n\t}).call(this);\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var EventEmitter, LineBreaker, LineWrapper,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  EventEmitter = __webpack_require__(54).EventEmitter;\n\n\t  LineBreaker = __webpack_require__(66);\n\n\t  LineWrapper = (function(_super) {\n\t    __extends(LineWrapper, _super);\n\n\t    function LineWrapper(document, options) {\n\t      var _ref;\n\t      this.document = document;\n\t      this.indent = options.indent || 0;\n\t      this.characterSpacing = options.characterSpacing || 0;\n\t      this.wordSpacing = options.wordSpacing === 0;\n\t      this.columns = options.columns || 1;\n\t      this.columnGap = (_ref = options.columnGap) != null ? _ref : 18;\n\t      this.lineWidth = (options.width - (this.columnGap * (this.columns - 1))) / this.columns;\n\t      this.spaceLeft = this.lineWidth;\n\t      this.startX = this.document.x;\n\t      this.startY = this.document.y;\n\t      this.column = 1;\n\t      this.ellipsis = options.ellipsis;\n\t      this.continuedX = 0;\n\t      if (options.height != null) {\n\t        this.height = options.height;\n\t        this.maxY = this.startY + options.height;\n\t      } else {\n\t        this.maxY = this.document.page.maxY();\n\t      }\n\t      this.on('firstLine', (function(_this) {\n\t        return function(options) {\n\t          var indent;\n\t          indent = _this.continuedX || _this.indent;\n\t          _this.document.x += indent;\n\t          _this.lineWidth -= indent;\n\t          return _this.once('line', function() {\n\t            _this.document.x -= indent;\n\t            _this.lineWidth += indent;\n\t            if (options.continued && !_this.continuedX) {\n\t              _this.continuedX = _this.indent;\n\t            }\n\t            if (!options.continued) {\n\t              return _this.continuedX = 0;\n\t            }\n\t          });\n\t        };\n\t      })(this));\n\t      this.on('lastLine', (function(_this) {\n\t        return function(options) {\n\t          var align;\n\t          align = options.align;\n\t          if (align === 'justify') {\n\t            options.align = 'left';\n\t          }\n\t          _this.lastLine = true;\n\t          return _this.once('line', function() {\n\t            _this.document.y += options.paragraphGap || 0;\n\t            options.align = align;\n\t            return _this.lastLine = false;\n\t          });\n\t        };\n\t      })(this));\n\t    }\n\n\t    LineWrapper.prototype.wordWidth = function(word) {\n\t      return this.document.widthOfString(word, this) + this.characterSpacing + this.wordSpacing;\n\t    };\n\n\t    LineWrapper.prototype.eachWord = function(text, fn) {\n\t      var bk, breaker, fbk, l, last, lbk, shouldContinue, w, word, wordWidths;\n\t      breaker = new LineBreaker(text);\n\t      last = null;\n\t      wordWidths = {};\n\t      while (bk = breaker.nextBreak()) {\n\t        word = text.slice((last != null ? last.position : void 0) || 0, bk.position);\n\t        w = wordWidths[word] != null ? wordWidths[word] : wordWidths[word] = this.wordWidth(word);\n\t        if (w > this.lineWidth + this.continuedX) {\n\t          lbk = last;\n\t          fbk = {};\n\t          while (word.length) {\n\t            l = word.length;\n\t            while (w > this.spaceLeft) {\n\t              w = this.wordWidth(word.slice(0, --l));\n\t            }\n\t            fbk.required = l < word.length;\n\t            shouldContinue = fn(word.slice(0, l), w, fbk, lbk);\n\t            lbk = {\n\t              required: false\n\t            };\n\t            word = word.slice(l);\n\t            w = this.wordWidth(word);\n\t            if (shouldContinue === false) {\n\t              break;\n\t            }\n\t          }\n\t        } else {\n\t          shouldContinue = fn(word, w, bk, last);\n\t        }\n\t        if (shouldContinue === false) {\n\t          break;\n\t        }\n\t        last = bk;\n\t      }\n\t    };\n\n\t    LineWrapper.prototype.wrap = function(text, options) {\n\t      var buffer, emitLine, lc, nextY, textWidth, wc, y;\n\t      if (options.indent != null) {\n\t        this.indent = options.indent;\n\t      }\n\t      if (options.characterSpacing != null) {\n\t        this.characterSpacing = options.characterSpacing;\n\t      }\n\t      if (options.wordSpacing != null) {\n\t        this.wordSpacing = options.wordSpacing;\n\t      }\n\t      if (options.ellipsis != null) {\n\t        this.ellipsis = options.ellipsis;\n\t      }\n\t      nextY = this.document.y + this.document.currentLineHeight(true);\n\t      if (this.document.y > this.maxY || nextY > this.maxY) {\n\t        this.nextSection();\n\t      }\n\t      buffer = '';\n\t      textWidth = 0;\n\t      wc = 0;\n\t      lc = 0;\n\t      y = this.document.y;\n\t      emitLine = (function(_this) {\n\t        return function() {\n\t          options.textWidth = textWidth + _this.wordSpacing * (wc - 1);\n\t          options.wordCount = wc;\n\t          options.lineWidth = _this.lineWidth;\n\t          y = _this.document.y;\n\t          _this.emit('line', buffer, options, _this);\n\t          return lc++;\n\t        };\n\t      })(this);\n\t      this.emit('sectionStart', options, this);\n\t      this.eachWord(text, (function(_this) {\n\t        return function(word, w, bk, last) {\n\t          var lh, shouldContinue;\n\t          if ((last == null) || last.required) {\n\t            _this.emit('firstLine', options, _this);\n\t            _this.spaceLeft = _this.lineWidth;\n\t          }\n\t          if (w <= _this.spaceLeft) {\n\t            buffer += word;\n\t            textWidth += w;\n\t            wc++;\n\t          }\n\t          if (bk.required || w > _this.spaceLeft) {\n\t            if (bk.required) {\n\t              _this.emit('lastLine', options, _this);\n\t            }\n\t            lh = _this.document.currentLineHeight(true);\n\t            if ((_this.height != null) && _this.ellipsis && _this.document.y + lh * 2 > _this.maxY && _this.column >= _this.columns) {\n\t              if (_this.ellipsis === true) {\n\t                _this.ellipsis = '…';\n\t              }\n\t              buffer = buffer.replace(/\\s+$/, '');\n\t              textWidth = _this.wordWidth(buffer + _this.ellipsis);\n\t              while (textWidth > _this.lineWidth) {\n\t                buffer = buffer.slice(0, -1).replace(/\\s+$/, '');\n\t                textWidth = _this.wordWidth(buffer + _this.ellipsis);\n\t              }\n\t              buffer = buffer + _this.ellipsis;\n\t            }\n\t            emitLine();\n\t            if (_this.document.y + lh > _this.maxY) {\n\t              shouldContinue = _this.nextSection();\n\t              if (!shouldContinue) {\n\t                wc = 0;\n\t                buffer = '';\n\t                return false;\n\t              }\n\t            }\n\t            if (bk.required) {\n\t              if (w > _this.spaceLeft) {\n\t                buffer = word;\n\t                textWidth = w;\n\t                wc = 1;\n\t                emitLine();\n\t              }\n\t              _this.spaceLeft = _this.lineWidth;\n\t              buffer = '';\n\t              textWidth = 0;\n\t              return wc = 0;\n\t            } else {\n\t              _this.spaceLeft = _this.lineWidth - w;\n\t              buffer = word;\n\t              textWidth = w;\n\t              return wc = 1;\n\t            }\n\t          } else {\n\t            return _this.spaceLeft -= w;\n\t          }\n\t        };\n\t      })(this));\n\t      if (wc > 0) {\n\t        this.emit('lastLine', options, this);\n\t        emitLine();\n\t      }\n\t      this.emit('sectionEnd', options, this);\n\t      if (options.continued === true) {\n\t        if (lc > 1) {\n\t          this.continuedX = 0;\n\t        }\n\t        this.continuedX += options.textWidth;\n\t        return this.document.y = y;\n\t      } else {\n\t        return this.document.x = this.startX;\n\t      }\n\t    };\n\n\t    LineWrapper.prototype.nextSection = function(options) {\n\t      var _ref;\n\t      this.emit('sectionEnd', options, this);\n\t      if (++this.column > this.columns) {\n\t        if (this.height != null) {\n\t          return false;\n\t        }\n\t        this.document.addPage();\n\t        this.column = 1;\n\t        this.startY = this.document.page.margins.top;\n\t        this.maxY = this.document.page.maxY();\n\t        this.document.x = this.startX;\n\t        if (this.document._fillColor) {\n\t          (_ref = this.document).fillColor.apply(_ref, this.document._fillColor);\n\t        }\n\t        this.emit('pageBreak', options, this);\n\t      } else {\n\t        this.document.x += this.lineWidth + this.columnGap;\n\t        this.document.y = this.startY;\n\t        this.emit('columnBreak', options, this);\n\t      }\n\t      this.emit('sectionStart', options, this);\n\t      return true;\n\t    };\n\n\t    return LineWrapper;\n\n\t  })(EventEmitter);\n\n\t  module.exports = LineWrapper;\n\n\t}).call(this);\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var PDFGradient, PDFLinearGradient, PDFRadialGradient,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  PDFGradient = (function() {\n\t    function PDFGradient(doc) {\n\t      this.doc = doc;\n\t      this.stops = [];\n\t      this.embedded = false;\n\t      this.transform = [1, 0, 0, 1, 0, 0];\n\t      this._colorSpace = 'DeviceRGB';\n\t    }\n\n\t    PDFGradient.prototype.stop = function(pos, color, opacity) {\n\t      if (opacity == null) {\n\t        opacity = 1;\n\t      }\n\t      opacity = Math.max(0, Math.min(1, opacity));\n\t      this.stops.push([pos, this.doc._normalizeColor(color), opacity]);\n\t      return this;\n\t    };\n\n\t    PDFGradient.prototype.embed = function() {\n\t      var bounds, dx, dy, encode, fn, form, grad, group, gstate, i, last, m, m0, m1, m11, m12, m2, m21, m22, m3, m4, m5, name, pattern, resources, sMask, shader, stop, stops, v, _i, _j, _len, _ref, _ref1, _ref2;\n\t      if (this.embedded || this.stops.length === 0) {\n\t        return;\n\t      }\n\t      this.embedded = true;\n\t      last = this.stops[this.stops.length - 1];\n\t      if (last[0] < 1) {\n\t        this.stops.push([1, last[1], last[2]]);\n\t      }\n\t      bounds = [];\n\t      encode = [];\n\t      stops = [];\n\t      for (i = _i = 0, _ref = this.stops.length - 1; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        encode.push(0, 1);\n\t        if (i + 2 !== this.stops.length) {\n\t          bounds.push(this.stops[i + 1][0]);\n\t        }\n\t        fn = this.doc.ref({\n\t          FunctionType: 2,\n\t          Domain: [0, 1],\n\t          C0: this.stops[i + 0][1],\n\t          C1: this.stops[i + 1][1],\n\t          N: 1\n\t        });\n\t        stops.push(fn);\n\t        fn.end();\n\t      }\n\t      if (stops.length === 1) {\n\t        fn = stops[0];\n\t      } else {\n\t        fn = this.doc.ref({\n\t          FunctionType: 3,\n\t          Domain: [0, 1],\n\t          Functions: stops,\n\t          Bounds: bounds,\n\t          Encode: encode\n\t        });\n\t        fn.end();\n\t      }\n\t      this.id = 'Sh' + (++this.doc._gradCount);\n\t      m = this.doc._ctm.slice();\n\t      m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];\n\t      _ref1 = this.transform, m11 = _ref1[0], m12 = _ref1[1], m21 = _ref1[2], m22 = _ref1[3], dx = _ref1[4], dy = _ref1[5];\n\t      m[0] = m0 * m11 + m2 * m12;\n\t      m[1] = m1 * m11 + m3 * m12;\n\t      m[2] = m0 * m21 + m2 * m22;\n\t      m[3] = m1 * m21 + m3 * m22;\n\t      m[4] = m0 * dx + m2 * dy + m4;\n\t      m[5] = m1 * dx + m3 * dy + m5;\n\t      shader = this.shader(fn);\n\t      shader.end();\n\t      pattern = this.doc.ref({\n\t        Type: 'Pattern',\n\t        PatternType: 2,\n\t        Shading: shader,\n\t        Matrix: (function() {\n\t          var _j, _len, _results;\n\t          _results = [];\n\t          for (_j = 0, _len = m.length; _j < _len; _j++) {\n\t            v = m[_j];\n\t            _results.push(+v.toFixed(5));\n\t          }\n\t          return _results;\n\t        })()\n\t      });\n\t      this.doc.page.patterns[this.id] = pattern;\n\t      pattern.end();\n\t      if (this.stops.some(function(stop) {\n\t        return stop[2] < 1;\n\t      })) {\n\t        grad = this.opacityGradient();\n\t        grad._colorSpace = 'DeviceGray';\n\t        _ref2 = this.stops;\n\t        for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n\t          stop = _ref2[_j];\n\t          grad.stop(stop[0], [stop[2]]);\n\t        }\n\t        grad = grad.embed();\n\t        group = this.doc.ref({\n\t          Type: 'Group',\n\t          S: 'Transparency',\n\t          CS: 'DeviceGray'\n\t        });\n\t        group.end();\n\t        resources = this.doc.ref({\n\t          ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n\t          Shading: {\n\t            Sh1: grad.data.Shading\n\t          }\n\t        });\n\t        resources.end();\n\t        form = this.doc.ref({\n\t          Type: 'XObject',\n\t          Subtype: 'Form',\n\t          FormType: 1,\n\t          BBox: [0, 0, this.doc.page.width, this.doc.page.height],\n\t          Group: group,\n\t          Resources: resources\n\t        });\n\t        form.end(\"/Sh1 sh\");\n\t        sMask = this.doc.ref({\n\t          Type: 'Mask',\n\t          S: 'Luminosity',\n\t          G: form\n\t        });\n\t        sMask.end();\n\t        gstate = this.doc.ref({\n\t          Type: 'ExtGState',\n\t          SMask: sMask\n\t        });\n\t        this.opacity_id = ++this.doc._opacityCount;\n\t        name = \"Gs\" + this.opacity_id;\n\t        this.doc.page.ext_gstates[name] = gstate;\n\t        gstate.end();\n\t      }\n\t      return pattern;\n\t    };\n\n\t    PDFGradient.prototype.apply = function(op) {\n\t      if (!this.embedded) {\n\t        this.embed();\n\t      }\n\t      this.doc.addContent(\"/\" + this.id + \" \" + op);\n\t      if (this.opacity_id) {\n\t        this.doc.addContent(\"/Gs\" + this.opacity_id + \" gs\");\n\t        return this.doc._sMasked = true;\n\t      }\n\t    };\n\n\t    return PDFGradient;\n\n\t  })();\n\n\t  PDFLinearGradient = (function(_super) {\n\t    __extends(PDFLinearGradient, _super);\n\n\t    function PDFLinearGradient(doc, x1, y1, x2, y2) {\n\t      this.doc = doc;\n\t      this.x1 = x1;\n\t      this.y1 = y1;\n\t      this.x2 = x2;\n\t      this.y2 = y2;\n\t      PDFLinearGradient.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    PDFLinearGradient.prototype.shader = function(fn) {\n\t      return this.doc.ref({\n\t        ShadingType: 2,\n\t        ColorSpace: this._colorSpace,\n\t        Coords: [this.x1, this.y1, this.x2, this.y2],\n\t        Function: fn,\n\t        Extend: [true, true]\n\t      });\n\t    };\n\n\t    PDFLinearGradient.prototype.opacityGradient = function() {\n\t      return new PDFLinearGradient(this.doc, this.x1, this.y1, this.x2, this.y2);\n\t    };\n\n\t    return PDFLinearGradient;\n\n\t  })(PDFGradient);\n\n\t  PDFRadialGradient = (function(_super) {\n\t    __extends(PDFRadialGradient, _super);\n\n\t    function PDFRadialGradient(doc, x1, y1, r1, x2, y2, r2) {\n\t      this.doc = doc;\n\t      this.x1 = x1;\n\t      this.y1 = y1;\n\t      this.r1 = r1;\n\t      this.x2 = x2;\n\t      this.y2 = y2;\n\t      this.r2 = r2;\n\t      PDFRadialGradient.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    PDFRadialGradient.prototype.shader = function(fn) {\n\t      return this.doc.ref({\n\t        ShadingType: 3,\n\t        ColorSpace: this._colorSpace,\n\t        Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],\n\t        Function: fn,\n\t        Extend: [true, true]\n\t      });\n\t    };\n\n\t    PDFRadialGradient.prototype.opacityGradient = function() {\n\t      return new PDFRadialGradient(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);\n\t    };\n\n\t    return PDFRadialGradient;\n\n\t  })(PDFGradient);\n\n\t  module.exports = {\n\t    PDFGradient: PDFGradient,\n\t    PDFLinearGradient: PDFLinearGradient,\n\t    PDFRadialGradient: PDFRadialGradient\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, Buffer) {var msg = __webpack_require__(73);\n\tvar zstream = __webpack_require__(77);\n\tvar zlib_deflate = __webpack_require__(74);\n\tvar zlib_inflate = __webpack_require__(75);\n\tvar constants = __webpack_require__(76);\n\n\tfor (var key in constants) {\n\t  exports[key] = constants[key];\n\t}\n\n\t// zlib modes\n\texports.NONE = 0;\n\texports.DEFLATE = 1;\n\texports.INFLATE = 2;\n\texports.GZIP = 3;\n\texports.GUNZIP = 4;\n\texports.DEFLATERAW = 5;\n\texports.INFLATERAW = 6;\n\texports.UNZIP = 7;\n\n\t/**\n\t * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n\t */\n\tfunction Zlib(mode) {\n\t  if (mode < exports.DEFLATE || mode > exports.UNZIP)\n\t    throw new TypeError(\"Bad argument\");\n\n\t  this.mode = mode;\n\t  this.init_done = false;\n\t  this.write_in_progress = false;\n\t  this.pending_close = false;\n\t  this.windowBits = 0;\n\t  this.level = 0;\n\t  this.memLevel = 0;\n\t  this.strategy = 0;\n\t  this.dictionary = null;\n\t}\n\n\tZlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {\n\t  this.windowBits = windowBits;\n\t  this.level = level;\n\t  this.memLevel = memLevel;\n\t  this.strategy = strategy;\n\t  // dictionary not supported.\n\n\t  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP)\n\t    this.windowBits += 16;\n\n\t  if (this.mode === exports.UNZIP)\n\t    this.windowBits += 32;\n\n\t  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW)\n\t    this.windowBits = -this.windowBits;\n\n\t  this.strm = new zstream();\n\n\t  switch (this.mode) {\n\t    case exports.DEFLATE:\n\t    case exports.GZIP:\n\t    case exports.DEFLATERAW:\n\t      var status = zlib_deflate.deflateInit2(\n\t        this.strm,\n\t        this.level,\n\t        exports.Z_DEFLATED,\n\t        this.windowBits,\n\t        this.memLevel,\n\t        this.strategy\n\t      );\n\t      break;\n\t    case exports.INFLATE:\n\t    case exports.GUNZIP:\n\t    case exports.INFLATERAW:\n\t    case exports.UNZIP:\n\t      var status  = zlib_inflate.inflateInit2(\n\t        this.strm,\n\t        this.windowBits\n\t      );\n\t      break;\n\t    default:\n\t      throw new Error(\"Unknown mode \" + this.mode);\n\t  }\n\n\t  if (status !== exports.Z_OK) {\n\t    this._error(status);\n\t    return;\n\t  }\n\n\t  this.write_in_progress = false;\n\t  this.init_done = true;\n\t};\n\n\tZlib.prototype.params = function() {\n\t  throw new Error(\"deflateParams Not supported\");\n\t};\n\n\tZlib.prototype._writeCheck = function() {\n\t  if (!this.init_done)\n\t    throw new Error(\"write before init\");\n\n\t  if (this.mode === exports.NONE)\n\t    throw new Error(\"already finalized\");\n\n\t  if (this.write_in_progress)\n\t    throw new Error(\"write already in progress\");\n\n\t  if (this.pending_close)\n\t    throw new Error(\"close is pending\");\n\t};\n\n\tZlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {\n\t  this._writeCheck();\n\t  this.write_in_progress = true;\n\n\t  var self = this;\n\t  process.nextTick(function() {\n\t    self.write_in_progress = false;\n\t    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);\n\t    self.callback(res[0], res[1]);\n\n\t    if (self.pending_close)\n\t      self.close();\n\t  });\n\n\t  return this;\n\t};\n\n\t// set method for Node buffers, used by pako\n\tfunction bufferSet(data, offset) {\n\t  for (var i = 0; i < data.length; i++) {\n\t    this[offset + i] = data[i];\n\t  }\n\t}\n\n\tZlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {\n\t  this._writeCheck();\n\t  return this._write(flush, input, in_off, in_len, out, out_off, out_len);\n\t};\n\n\tZlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {\n\t  this.write_in_progress = true;\n\n\t  if (flush !== exports.Z_NO_FLUSH &&\n\t      flush !== exports.Z_PARTIAL_FLUSH &&\n\t      flush !== exports.Z_SYNC_FLUSH &&\n\t      flush !== exports.Z_FULL_FLUSH &&\n\t      flush !== exports.Z_FINISH &&\n\t      flush !== exports.Z_BLOCK) {\n\t    throw new Error(\"Invalid flush value\");\n\t  }\n\n\t  if (input == null) {\n\t    input = new Buffer(0);\n\t    in_len = 0;\n\t    in_off = 0;\n\t  }\n\n\t  if (out._set)\n\t    out.set = out._set;\n\t  else\n\t    out.set = bufferSet;\n\n\t  var strm = this.strm;\n\t  strm.avail_in = in_len;\n\t  strm.input = input;\n\t  strm.next_in = in_off;\n\t  strm.avail_out = out_len;\n\t  strm.output = out;\n\t  strm.next_out = out_off;\n\n\t  switch (this.mode) {\n\t    case exports.DEFLATE:\n\t    case exports.GZIP:\n\t    case exports.DEFLATERAW:\n\t      var status = zlib_deflate.deflate(strm, flush);\n\t      break;\n\t    case exports.UNZIP:\n\t    case exports.INFLATE:\n\t    case exports.GUNZIP:\n\t    case exports.INFLATERAW:\n\t      var status = zlib_inflate.inflate(strm, flush);\n\t      break;\n\t    default:\n\t      throw new Error(\"Unknown mode \" + this.mode);\n\t  }\n\n\t  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {\n\t    this._error(status);\n\t  }\n\n\t  this.write_in_progress = false;\n\t  return [strm.avail_in, strm.avail_out];\n\t};\n\n\tZlib.prototype.close = function() {\n\t  if (this.write_in_progress) {\n\t    this.pending_close = true;\n\t    return;\n\t  }\n\n\t  this.pending_close = false;\n\n\t  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n\t    zlib_deflate.deflateEnd(this.strm);\n\t  } else {\n\t    zlib_inflate.inflateEnd(this.strm);\n\t  }\n\n\t  this.mode = exports.NONE;\n\t};\n\n\tZlib.prototype.reset = function() {\n\t  switch (this.mode) {\n\t    case exports.DEFLATE:\n\t    case exports.DEFLATERAW:\n\t      var status = zlib_deflate.deflateReset(this.strm);\n\t      break;\n\t    case exports.INFLATE:\n\t    case exports.INFLATERAW:\n\t      var status = zlib_inflate.inflateReset(this.strm);\n\t      break;\n\t  }\n\n\t  if (status !== exports.Z_OK) {\n\t    this._error(status);\n\t  }\n\t};\n\n\tZlib.prototype._error = function(status) {\n\t  this.onerror(msg[status] + ': ' + this.strm.msg, status);\n\n\t  this.write_in_progress = false;\n\t  if (this.pending_close)\n\t    this.close();\n\t};\n\n\texports.Zlib = Zlib;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(61), __webpack_require__(4).Buffer))\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.4.0\n\n\t/*\n\t# MIT LICENSE\n\t# Copyright (c) 2011 Devon Govett\n\t#\n\t# Permission is hereby granted, free of charge, to any person obtaining a copy of this\n\t# software and associated documentation files (the \"Software\"), to deal in the Software\n\t# without restriction, including without limitation the rights to use, copy, modify, merge,\n\t# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\n\t# to whom the Software is furnished to do so, subject to the following conditions:\n\t#\n\t# The above copyright notice and this permission notice shall be included in all copies or\n\t# substantial portions of the Software.\n\t#\n\t# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n\t# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\n\n\t(function() {\n\t  var PNG, fs, zlib;\n\n\t  fs = __webpack_require__(10);\n\n\t  zlib = __webpack_require__(45);\n\n\t  module.exports = PNG = (function() {\n\n\t    PNG.decode = function(path, fn) {\n\t      return fs.readFile(path, function(err, file) {\n\t        var png;\n\t        png = new PNG(file);\n\t        return png.decode(function(pixels) {\n\t          return fn(pixels);\n\t        });\n\t      });\n\t    };\n\n\t    PNG.load = function(path) {\n\t      var file;\n\t      file = fs.readFileSync(path);\n\t      return new PNG(file);\n\t    };\n\n\t    function PNG(data) {\n\t      var chunkSize, colors, i, index, key, section, short, text, _i, _j, _ref;\n\t      this.data = data;\n\t      this.pos = 8;\n\t      this.palette = [];\n\t      this.imgData = [];\n\t      this.transparency = {};\n\t      this.text = {};\n\t      while (true) {\n\t        chunkSize = this.readUInt32();\n\t        section = ((function() {\n\t          var _i, _results;\n\t          _results = [];\n\t          for (i = _i = 0; _i < 4; i = ++_i) {\n\t            _results.push(String.fromCharCode(this.data[this.pos++]));\n\t          }\n\t          return _results;\n\t        }).call(this)).join('');\n\t        switch (section) {\n\t          case 'IHDR':\n\t            this.width = this.readUInt32();\n\t            this.height = this.readUInt32();\n\t            this.bits = this.data[this.pos++];\n\t            this.colorType = this.data[this.pos++];\n\t            this.compressionMethod = this.data[this.pos++];\n\t            this.filterMethod = this.data[this.pos++];\n\t            this.interlaceMethod = this.data[this.pos++];\n\t            break;\n\t          case 'PLTE':\n\t            this.palette = this.read(chunkSize);\n\t            break;\n\t          case 'IDAT':\n\t            for (i = _i = 0; _i < chunkSize; i = _i += 1) {\n\t              this.imgData.push(this.data[this.pos++]);\n\t            }\n\t            break;\n\t          case 'tRNS':\n\t            this.transparency = {};\n\t            switch (this.colorType) {\n\t              case 3:\n\t                this.transparency.indexed = this.read(chunkSize);\n\t                short = 255 - this.transparency.indexed.length;\n\t                if (short > 0) {\n\t                  for (i = _j = 0; 0 <= short ? _j < short : _j > short; i = 0 <= short ? ++_j : --_j) {\n\t                    this.transparency.indexed.push(255);\n\t                  }\n\t                }\n\t                break;\n\t              case 0:\n\t                this.transparency.grayscale = this.read(chunkSize)[0];\n\t                break;\n\t              case 2:\n\t                this.transparency.rgb = this.read(chunkSize);\n\t            }\n\t            break;\n\t          case 'tEXt':\n\t            text = this.read(chunkSize);\n\t            index = text.indexOf(0);\n\t            key = String.fromCharCode.apply(String, text.slice(0, index));\n\t            this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));\n\t            break;\n\t          case 'IEND':\n\t            this.colors = (function() {\n\t              switch (this.colorType) {\n\t                case 0:\n\t                case 3:\n\t                case 4:\n\t                  return 1;\n\t                case 2:\n\t                case 6:\n\t                  return 3;\n\t              }\n\t            }).call(this);\n\t            this.hasAlphaChannel = (_ref = this.colorType) === 4 || _ref === 6;\n\t            colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n\t            this.pixelBitlength = this.bits * colors;\n\t            this.colorSpace = (function() {\n\t              switch (this.colors) {\n\t                case 1:\n\t                  return 'DeviceGray';\n\t                case 3:\n\t                  return 'DeviceRGB';\n\t              }\n\t            }).call(this);\n\t            this.imgData = new Buffer(this.imgData);\n\t            return;\n\t          default:\n\t            this.pos += chunkSize;\n\t        }\n\t        this.pos += 4;\n\t        if (this.pos > this.data.length) {\n\t          throw new Error(\"Incomplete or corrupt PNG file\");\n\t        }\n\t      }\n\t      return;\n\t    }\n\n\t    PNG.prototype.read = function(bytes) {\n\t      var i, _i, _results;\n\t      _results = [];\n\t      for (i = _i = 0; 0 <= bytes ? _i < bytes : _i > bytes; i = 0 <= bytes ? ++_i : --_i) {\n\t        _results.push(this.data[this.pos++]);\n\t      }\n\t      return _results;\n\t    };\n\n\t    PNG.prototype.readUInt32 = function() {\n\t      var b1, b2, b3, b4;\n\t      b1 = this.data[this.pos++] << 24;\n\t      b2 = this.data[this.pos++] << 16;\n\t      b3 = this.data[this.pos++] << 8;\n\t      b4 = this.data[this.pos++];\n\t      return b1 | b2 | b3 | b4;\n\t    };\n\n\t    PNG.prototype.readUInt16 = function() {\n\t      var b1, b2;\n\t      b1 = this.data[this.pos++] << 8;\n\t      b2 = this.data[this.pos++];\n\t      return b1 | b2;\n\t    };\n\n\t    PNG.prototype.decodePixels = function(fn) {\n\t      var _this = this;\n\t      return zlib.inflate(this.imgData, function(err, data) {\n\t        var byte, c, col, i, left, length, p, pa, paeth, pb, pc, pixelBytes, pixels, pos, row, scanlineLength, upper, upperLeft, _i, _j, _k, _l, _m;\n\t        if (err) {\n\t          throw err;\n\t        }\n\t        pixelBytes = _this.pixelBitlength / 8;\n\t        scanlineLength = pixelBytes * _this.width;\n\t        pixels = new Buffer(scanlineLength * _this.height);\n\t        length = data.length;\n\t        row = 0;\n\t        pos = 0;\n\t        c = 0;\n\t        while (pos < length) {\n\t          switch (data[pos++]) {\n\t            case 0:\n\t              for (i = _i = 0; _i < scanlineLength; i = _i += 1) {\n\t                pixels[c++] = data[pos++];\n\t              }\n\t              break;\n\t            case 1:\n\t              for (i = _j = 0; _j < scanlineLength; i = _j += 1) {\n\t                byte = data[pos++];\n\t                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n\t                pixels[c++] = (byte + left) % 256;\n\t              }\n\t              break;\n\t            case 2:\n\t              for (i = _k = 0; _k < scanlineLength; i = _k += 1) {\n\t                byte = data[pos++];\n\t                col = (i - (i % pixelBytes)) / pixelBytes;\n\t                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n\t                pixels[c++] = (upper + byte) % 256;\n\t              }\n\t              break;\n\t            case 3:\n\t              for (i = _l = 0; _l < scanlineLength; i = _l += 1) {\n\t                byte = data[pos++];\n\t                col = (i - (i % pixelBytes)) / pixelBytes;\n\t                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n\t                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n\t                pixels[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n\t              }\n\t              break;\n\t            case 4:\n\t              for (i = _m = 0; _m < scanlineLength; i = _m += 1) {\n\t                byte = data[pos++];\n\t                col = (i - (i % pixelBytes)) / pixelBytes;\n\t                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n\t                if (row === 0) {\n\t                  upper = upperLeft = 0;\n\t                } else {\n\t                  upper = pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n\t                  upperLeft = col && pixels[(row - 1) * scanlineLength + (col - 1) * pixelBytes + (i % pixelBytes)];\n\t                }\n\t                p = left + upper - upperLeft;\n\t                pa = Math.abs(p - left);\n\t                pb = Math.abs(p - upper);\n\t                pc = Math.abs(p - upperLeft);\n\t                if (pa <= pb && pa <= pc) {\n\t                  paeth = left;\n\t                } else if (pb <= pc) {\n\t                  paeth = upper;\n\t                } else {\n\t                  paeth = upperLeft;\n\t                }\n\t                pixels[c++] = (byte + paeth) % 256;\n\t              }\n\t              break;\n\t            default:\n\t              throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\n\t          }\n\t          row++;\n\t        }\n\t        return fn(pixels);\n\t      });\n\t    };\n\n\t    PNG.prototype.decodePalette = function() {\n\t      var c, i, length, palette, pos, ret, transparency, _i, _ref, _ref1;\n\t      palette = this.palette;\n\t      transparency = this.transparency.indexed || [];\n\t      ret = new Buffer(transparency.length + palette.length);\n\t      pos = 0;\n\t      length = palette.length;\n\t      c = 0;\n\t      for (i = _i = 0, _ref = palette.length; _i < _ref; i = _i += 3) {\n\t        ret[pos++] = palette[i];\n\t        ret[pos++] = palette[i + 1];\n\t        ret[pos++] = palette[i + 2];\n\t        ret[pos++] = (_ref1 = transparency[c++]) != null ? _ref1 : 255;\n\t      }\n\t      return ret;\n\t    };\n\n\t    PNG.prototype.copyToImageData = function(imageData, pixels) {\n\t      var alpha, colors, data, i, input, j, k, length, palette, v, _ref;\n\t      colors = this.colors;\n\t      palette = null;\n\t      alpha = this.hasAlphaChannel;\n\t      if (this.palette.length) {\n\t        palette = (_ref = this._decodedPalette) != null ? _ref : this._decodedPalette = this.decodePalette();\n\t        colors = 4;\n\t        alpha = true;\n\t      }\n\t      data = (imageData != null ? imageData.data : void 0) || imageData;\n\t      length = data.length;\n\t      input = palette || pixels;\n\t      i = j = 0;\n\t      if (colors === 1) {\n\t        while (i < length) {\n\t          k = palette ? pixels[i / 4] * 4 : j;\n\t          v = input[k++];\n\t          data[i++] = v;\n\t          data[i++] = v;\n\t          data[i++] = v;\n\t          data[i++] = alpha ? input[k++] : 255;\n\t          j = k;\n\t        }\n\t      } else {\n\t        while (i < length) {\n\t          k = palette ? pixels[i / 4] * 4 : j;\n\t          data[i++] = input[k++];\n\t          data[i++] = input[k++];\n\t          data[i++] = input[k++];\n\t          data[i++] = alpha ? input[k++] : 255;\n\t          j = k;\n\t        }\n\t      }\n\t    };\n\n\t    PNG.prototype.decode = function(fn) {\n\t      var ret,\n\t        _this = this;\n\t      ret = new Buffer(this.width * this.height * 4);\n\t      return this.decodePixels(function(pixels) {\n\t        _this.copyToImageData(ret, pixels);\n\t        return fn(ret);\n\t      });\n\t    };\n\n\t    return PNG;\n\n\t  })();\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, __dirname) {// Generated by CoffeeScript 1.7.1\n\n\t/*\n\tPDFFont - embeds fonts in PDF documents\n\tBy Devon Govett\n\t */\n\n\t(function() {\n\t  var AFMFont, PDFFont, Subset, TTFFont, fs;\n\n\t  TTFFont = __webpack_require__(64);\n\n\t  AFMFont = __webpack_require__(63);\n\n\t  Subset = __webpack_require__(65);\n\n\t  fs = __webpack_require__(10);\n\n\t  PDFFont = (function() {\n\t    var STANDARD_FONTS, toUnicodeCmap;\n\n\t    function PDFFont(document, src, family, id) {\n\t      this.document = document;\n\t      this.id = id;\n\t      if (typeof src === 'string') {\n\t        if (src in STANDARD_FONTS) {\n\t          this.isAFM = true;\n\t          this.font = new AFMFont(STANDARD_FONTS[src]());\n\t          this.registerAFM(src);\n\t          return;\n\t        } else if (/\\.(ttf|ttc)$/i.test(src)) {\n\t          this.font = TTFFont.open(src, family);\n\t        } else if (/\\.dfont$/i.test(src)) {\n\t          this.font = TTFFont.fromDFont(src, family);\n\t        } else {\n\t          throw new Error('Not a supported font format or standard PDF font.');\n\t        }\n\t      } else if (Buffer.isBuffer(src)) {\n\t        this.font = TTFFont.fromBuffer(src, family);\n\t      } else if (src instanceof Uint8Array) {\n\t        this.font = TTFFont.fromBuffer(new Buffer(src), family);\n\t      } else if (src instanceof ArrayBuffer) {\n\t        this.font = TTFFont.fromBuffer(new Buffer(new Uint8Array(src)), family);\n\t      } else {\n\t        throw new Error('Not a supported font format or standard PDF font.');\n\t      }\n\t      this.subset = new Subset(this.font);\n\t      this.registerTTF();\n\t    }\n\n\t    STANDARD_FONTS = {\n\t      \"Courier\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Courier.afm\", 'utf8');\n\t      },\n\t      \"Courier-Bold\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Courier-Bold.afm\", 'utf8');\n\t      },\n\t      \"Courier-Oblique\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Courier-Oblique.afm\", 'utf8');\n\t      },\n\t      \"Courier-BoldOblique\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Courier-BoldOblique.afm\", 'utf8');\n\t      },\n\t      \"Helvetica\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Helvetica.afm\", 'utf8');\n\t      },\n\t      \"Helvetica-Bold\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Helvetica-Bold.afm\", 'utf8');\n\t      },\n\t      \"Helvetica-Oblique\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Helvetica-Oblique.afm\", 'utf8');\n\t      },\n\t      \"Helvetica-BoldOblique\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Helvetica-BoldOblique.afm\", 'utf8');\n\t      },\n\t      \"Times-Roman\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Times-Roman.afm\", 'utf8');\n\t      },\n\t      \"Times-Bold\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Times-Bold.afm\", 'utf8');\n\t      },\n\t      \"Times-Italic\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Times-Italic.afm\", 'utf8');\n\t      },\n\t      \"Times-BoldItalic\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Times-BoldItalic.afm\", 'utf8');\n\t      },\n\t      \"Symbol\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/Symbol.afm\", 'utf8');\n\t      },\n\t      \"ZapfDingbats\": function() {\n\t        return fs.readFileSync(__dirname + \"/font/data/ZapfDingbats.afm\", 'utf8');\n\t      }\n\t    };\n\n\t    PDFFont.prototype.use = function(characters) {\n\t      var _ref;\n\t      return (_ref = this.subset) != null ? _ref.use(characters) : void 0;\n\t    };\n\n\t    PDFFont.prototype.embed = function() {\n\t      if (this.embedded || (this.dictionary == null)) {\n\t        return;\n\t      }\n\t      if (this.isAFM) {\n\t        this.embedAFM();\n\t      } else {\n\t        this.embedTTF();\n\t      }\n\t      return this.embedded = true;\n\t    };\n\n\t    PDFFont.prototype.encode = function(text) {\n\t      var _ref;\n\t      if (this.isAFM) {\n\t        return this.font.encodeText(text);\n\t      } else {\n\t        return ((_ref = this.subset) != null ? _ref.encodeText(text) : void 0) || text;\n\t      }\n\t    };\n\n\t    PDFFont.prototype.ref = function() {\n\t      return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();\n\t    };\n\n\t    PDFFont.prototype.registerTTF = function() {\n\t      var e, hi, low, raw, _ref;\n\t      this.name = this.font.name.postscriptName;\n\t      this.scaleFactor = 1000.0 / this.font.head.unitsPerEm;\n\t      this.bbox = (function() {\n\t        var _i, _len, _ref, _results;\n\t        _ref = this.font.bbox;\n\t        _results = [];\n\t        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t          e = _ref[_i];\n\t          _results.push(Math.round(e * this.scaleFactor));\n\t        }\n\t        return _results;\n\t      }).call(this);\n\t      this.stemV = 0;\n\t      if (this.font.post.exists) {\n\t        raw = this.font.post.italic_angle;\n\t        hi = raw >> 16;\n\t        low = raw & 0xFF;\n\t        if (hi & 0x8000 !== 0) {\n\t          hi = -((hi ^ 0xFFFF) + 1);\n\t        }\n\t        this.italicAngle = +(\"\" + hi + \".\" + low);\n\t      } else {\n\t        this.italicAngle = 0;\n\t      }\n\t      this.ascender = Math.round(this.font.ascender * this.scaleFactor);\n\t      this.decender = Math.round(this.font.decender * this.scaleFactor);\n\t      this.lineGap = Math.round(this.font.lineGap * this.scaleFactor);\n\t      this.capHeight = (this.font.os2.exists && this.font.os2.capHeight) || this.ascender;\n\t      this.xHeight = (this.font.os2.exists && this.font.os2.xHeight) || 0;\n\t      this.familyClass = (this.font.os2.exists && this.font.os2.familyClass || 0) >> 8;\n\t      this.isSerif = (_ref = this.familyClass) === 1 || _ref === 2 || _ref === 3 || _ref === 4 || _ref === 5 || _ref === 7;\n\t      this.isScript = this.familyClass === 10;\n\t      this.flags = 0;\n\t      if (this.font.post.isFixedPitch) {\n\t        this.flags |= 1 << 0;\n\t      }\n\t      if (this.isSerif) {\n\t        this.flags |= 1 << 1;\n\t      }\n\t      if (this.isScript) {\n\t        this.flags |= 1 << 3;\n\t      }\n\t      if (this.italicAngle !== 0) {\n\t        this.flags |= 1 << 6;\n\t      }\n\t      this.flags |= 1 << 5;\n\t      if (!this.font.cmap.unicode) {\n\t        throw new Error('No unicode cmap for font');\n\t      }\n\t    };\n\n\t    PDFFont.prototype.embedTTF = function() {\n\t      var charWidths, cmap, code, data, descriptor, firstChar, fontfile, glyph;\n\t      data = this.subset.encode();\n\t      fontfile = this.document.ref();\n\t      fontfile.write(data);\n\t      fontfile.data.Length1 = fontfile.uncompressedLength;\n\t      fontfile.end();\n\t      descriptor = this.document.ref({\n\t        Type: 'FontDescriptor',\n\t        FontName: this.subset.postscriptName,\n\t        FontFile2: fontfile,\n\t        FontBBox: this.bbox,\n\t        Flags: this.flags,\n\t        StemV: this.stemV,\n\t        ItalicAngle: this.italicAngle,\n\t        Ascent: this.ascender,\n\t        Descent: this.decender,\n\t        CapHeight: this.capHeight,\n\t        XHeight: this.xHeight\n\t      });\n\t      descriptor.end();\n\t      firstChar = +Object.keys(this.subset.cmap)[0];\n\t      charWidths = (function() {\n\t        var _ref, _results;\n\t        _ref = this.subset.cmap;\n\t        _results = [];\n\t        for (code in _ref) {\n\t          glyph = _ref[code];\n\t          _results.push(Math.round(this.font.widthOfGlyph(glyph)));\n\t        }\n\t        return _results;\n\t      }).call(this);\n\t      cmap = this.document.ref();\n\t      cmap.end(toUnicodeCmap(this.subset.subset));\n\t      this.dictionary.data = {\n\t        Type: 'Font',\n\t        BaseFont: this.subset.postscriptName,\n\t        Subtype: 'TrueType',\n\t        FontDescriptor: descriptor,\n\t        FirstChar: firstChar,\n\t        LastChar: firstChar + charWidths.length - 1,\n\t        Widths: charWidths,\n\t        Encoding: 'MacRomanEncoding',\n\t        ToUnicode: cmap\n\t      };\n\t      return this.dictionary.end();\n\t    };\n\n\t    toUnicodeCmap = function(map) {\n\t      var code, codes, range, unicode, unicodeMap, _i, _len;\n\t      unicodeMap = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<00><ff>\\nendcodespacerange';\n\t      codes = Object.keys(map).sort(function(a, b) {\n\t        return a - b;\n\t      });\n\t      range = [];\n\t      for (_i = 0, _len = codes.length; _i < _len; _i++) {\n\t        code = codes[_i];\n\t        if (range.length >= 100) {\n\t          unicodeMap += \"\\n\" + range.length + \" beginbfchar\\n\" + (range.join('\\n')) + \"\\nendbfchar\";\n\t          range = [];\n\t        }\n\t        unicode = ('0000' + map[code].toString(16)).slice(-4);\n\t        code = (+code).toString(16);\n\t        range.push(\"<\" + code + \"><\" + unicode + \">\");\n\t      }\n\t      if (range.length) {\n\t        unicodeMap += \"\\n\" + range.length + \" beginbfchar\\n\" + (range.join('\\n')) + \"\\nendbfchar\\n\";\n\t      }\n\t      return unicodeMap += 'endcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend';\n\t    };\n\n\t    PDFFont.prototype.registerAFM = function(name) {\n\t      var _ref;\n\t      this.name = name;\n\t      return _ref = this.font, this.ascender = _ref.ascender, this.decender = _ref.decender, this.bbox = _ref.bbox, this.lineGap = _ref.lineGap, _ref;\n\t    };\n\n\t    PDFFont.prototype.embedAFM = function() {\n\t      this.dictionary.data = {\n\t        Type: 'Font',\n\t        BaseFont: this.name,\n\t        Subtype: 'Type1',\n\t        Encoding: 'WinAnsiEncoding'\n\t      };\n\t      return this.dictionary.end();\n\t    };\n\n\t    PDFFont.prototype.widthOfString = function(string, size) {\n\t      var charCode, i, scale, width, _i, _ref;\n\t      string = '' + string;\n\t      width = 0;\n\t      for (i = _i = 0, _ref = string.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        charCode = string.charCodeAt(i);\n\t        width += this.font.widthOfGlyph(this.font.characterToGlyph(charCode)) || 0;\n\t      }\n\t      scale = size / 1000;\n\t      return width * scale;\n\t    };\n\n\t    PDFFont.prototype.lineHeight = function(size, includeGap) {\n\t      var gap;\n\t      if (includeGap == null) {\n\t        includeGap = false;\n\t      }\n\t      gap = includeGap ? this.lineGap : 0;\n\t      return (this.ascender + gap - this.decender) / 1000 * size;\n\t    };\n\n\t    return PDFFont;\n\n\t  })();\n\n\t  module.exports = PDFFont;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer, \"/\"))\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n\t//\n\t// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n\t//\n\t// Originally from narwhal.js (http://narwhaljs.org)\n\t// Copyright (c) 2009 Thomas Robinson <280north.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the 'Software'), to\n\t// deal in the Software without restriction, including without limitation the\n\t// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\t// sell copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// when used in node, this will actually load the util module we depend on\n\t// versus loading the builtin util module as happens otherwise\n\t// this is a bug in node module loading as far as I am concerned\n\tvar util = __webpack_require__(60);\n\n\tvar pSlice = Array.prototype.slice;\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\n\t// 1. The assert module provides functions that throw\n\t// AssertionError's when particular conditions are not met. The\n\t// assert module must conform to the following interface.\n\n\tvar assert = module.exports = ok;\n\n\t// 2. The AssertionError is defined in assert.\n\t// new assert.AssertionError({ message: message,\n\t//                             actual: actual,\n\t//                             expected: expected })\n\n\tassert.AssertionError = function AssertionError(options) {\n\t  this.name = 'AssertionError';\n\t  this.actual = options.actual;\n\t  this.expected = options.expected;\n\t  this.operator = options.operator;\n\t  if (options.message) {\n\t    this.message = options.message;\n\t    this.generatedMessage = false;\n\t  } else {\n\t    this.message = getMessage(this);\n\t    this.generatedMessage = true;\n\t  }\n\t  var stackStartFunction = options.stackStartFunction || fail;\n\n\t  if (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, stackStartFunction);\n\t  }\n\t  else {\n\t    // non v8 browsers so we can have a stacktrace\n\t    var err = new Error();\n\t    if (err.stack) {\n\t      var out = err.stack;\n\n\t      // try to strip useless frames\n\t      var fn_name = stackStartFunction.name;\n\t      var idx = out.indexOf('\\n' + fn_name);\n\t      if (idx >= 0) {\n\t        // once we have located the function frame\n\t        // we need to strip out everything before it (and its line)\n\t        var next_line = out.indexOf('\\n', idx + 1);\n\t        out = out.substring(next_line + 1);\n\t      }\n\n\t      this.stack = out;\n\t    }\n\t  }\n\t};\n\n\t// assert.AssertionError instanceof Error\n\tutil.inherits(assert.AssertionError, Error);\n\n\tfunction replacer(key, value) {\n\t  if (util.isUndefined(value)) {\n\t    return '' + value;\n\t  }\n\t  if (util.isNumber(value) && !isFinite(value)) {\n\t    return value.toString();\n\t  }\n\t  if (util.isFunction(value) || util.isRegExp(value)) {\n\t    return value.toString();\n\t  }\n\t  return value;\n\t}\n\n\tfunction truncate(s, n) {\n\t  if (util.isString(s)) {\n\t    return s.length < n ? s : s.slice(0, n);\n\t  } else {\n\t    return s;\n\t  }\n\t}\n\n\tfunction getMessage(self) {\n\t  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +\n\t         self.operator + ' ' +\n\t         truncate(JSON.stringify(self.expected, replacer), 128);\n\t}\n\n\t// At present only the three keys mentioned above are used and\n\t// understood by the spec. Implementations or sub modules can pass\n\t// other keys to the AssertionError's constructor - they will be\n\t// ignored.\n\n\t// 3. All of the following functions must throw an AssertionError\n\t// when a corresponding condition is not met, with a message that\n\t// may be undefined if not provided.  All assertion methods provide\n\t// both the actual and expected values to the assertion error for\n\t// display purposes.\n\n\tfunction fail(actual, expected, message, operator, stackStartFunction) {\n\t  throw new assert.AssertionError({\n\t    message: message,\n\t    actual: actual,\n\t    expected: expected,\n\t    operator: operator,\n\t    stackStartFunction: stackStartFunction\n\t  });\n\t}\n\n\t// EXTENSION! allows for well behaved errors defined elsewhere.\n\tassert.fail = fail;\n\n\t// 4. Pure assertion tests whether a value is truthy, as determined\n\t// by !!guard.\n\t// assert.ok(guard, message_opt);\n\t// This statement is equivalent to assert.equal(true, !!guard,\n\t// message_opt);. To test strictly for the value true, use\n\t// assert.strictEqual(true, guard, message_opt);.\n\n\tfunction ok(value, message) {\n\t  if (!value) fail(value, true, message, '==', assert.ok);\n\t}\n\tassert.ok = ok;\n\n\t// 5. The equality assertion tests shallow, coercive equality with\n\t// ==.\n\t// assert.equal(actual, expected, message_opt);\n\n\tassert.equal = function equal(actual, expected, message) {\n\t  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n\t};\n\n\t// 6. The non-equality assertion tests for whether two objects are not equal\n\t// with != assert.notEqual(actual, expected, message_opt);\n\n\tassert.notEqual = function notEqual(actual, expected, message) {\n\t  if (actual == expected) {\n\t    fail(actual, expected, message, '!=', assert.notEqual);\n\t  }\n\t};\n\n\t// 7. The equivalence assertion tests a deep equality relation.\n\t// assert.deepEqual(actual, expected, message_opt);\n\n\tassert.deepEqual = function deepEqual(actual, expected, message) {\n\t  if (!_deepEqual(actual, expected)) {\n\t    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n\t  }\n\t};\n\n\tfunction _deepEqual(actual, expected) {\n\t  // 7.1. All identical values are equivalent, as determined by ===.\n\t  if (actual === expected) {\n\t    return true;\n\n\t  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {\n\t    if (actual.length != expected.length) return false;\n\n\t    for (var i = 0; i < actual.length; i++) {\n\t      if (actual[i] !== expected[i]) return false;\n\t    }\n\n\t    return true;\n\n\t  // 7.2. If the expected value is a Date object, the actual value is\n\t  // equivalent if it is also a Date object that refers to the same time.\n\t  } else if (util.isDate(actual) && util.isDate(expected)) {\n\t    return actual.getTime() === expected.getTime();\n\n\t  // 7.3 If the expected value is a RegExp object, the actual value is\n\t  // equivalent if it is also a RegExp object with the same source and\n\t  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n\t  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n\t    return actual.source === expected.source &&\n\t           actual.global === expected.global &&\n\t           actual.multiline === expected.multiline &&\n\t           actual.lastIndex === expected.lastIndex &&\n\t           actual.ignoreCase === expected.ignoreCase;\n\n\t  // 7.4. Other pairs that do not both pass typeof value == 'object',\n\t  // equivalence is determined by ==.\n\t  } else if (!util.isObject(actual) && !util.isObject(expected)) {\n\t    return actual == expected;\n\n\t  // 7.5 For all other Object pairs, including Array objects, equivalence is\n\t  // determined by having the same number of owned properties (as verified\n\t  // with Object.prototype.hasOwnProperty.call), the same set of keys\n\t  // (although not necessarily the same order), equivalent values for every\n\t  // corresponding key, and an identical 'prototype' property. Note: this\n\t  // accounts for both named and indexed properties on Arrays.\n\t  } else {\n\t    return objEquiv(actual, expected);\n\t  }\n\t}\n\n\tfunction isArguments(object) {\n\t  return Object.prototype.toString.call(object) == '[object Arguments]';\n\t}\n\n\tfunction objEquiv(a, b) {\n\t  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))\n\t    return false;\n\t  // an identical 'prototype' property.\n\t  if (a.prototype !== b.prototype) return false;\n\t  // if one is a primitive, the other must be same\n\t  if (util.isPrimitive(a) || util.isPrimitive(b)) {\n\t    return a === b;\n\t  }\n\t  var aIsArgs = isArguments(a),\n\t      bIsArgs = isArguments(b);\n\t  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n\t    return false;\n\t  if (aIsArgs) {\n\t    a = pSlice.call(a);\n\t    b = pSlice.call(b);\n\t    return _deepEqual(a, b);\n\t  }\n\t  var ka = objectKeys(a),\n\t      kb = objectKeys(b),\n\t      key, i;\n\t  // having the same number of owned properties (keys incorporates\n\t  // hasOwnProperty)\n\t  if (ka.length != kb.length)\n\t    return false;\n\t  //the same set of keys (although not necessarily the same order),\n\t  ka.sort();\n\t  kb.sort();\n\t  //~~~cheap key test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    if (ka[i] != kb[i])\n\t      return false;\n\t  }\n\t  //equivalent values for every corresponding key, and\n\t  //~~~possibly expensive deep test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    key = ka[i];\n\t    if (!_deepEqual(a[key], b[key])) return false;\n\t  }\n\t  return true;\n\t}\n\n\t// 8. The non-equivalence assertion tests for any deep inequality.\n\t// assert.notDeepEqual(actual, expected, message_opt);\n\n\tassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n\t  if (_deepEqual(actual, expected)) {\n\t    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n\t  }\n\t};\n\n\t// 9. The strict equality assertion tests strict equality, as determined by ===.\n\t// assert.strictEqual(actual, expected, message_opt);\n\n\tassert.strictEqual = function strictEqual(actual, expected, message) {\n\t  if (actual !== expected) {\n\t    fail(actual, expected, message, '===', assert.strictEqual);\n\t  }\n\t};\n\n\t// 10. The strict non-equality assertion tests for strict inequality, as\n\t// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\n\tassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n\t  if (actual === expected) {\n\t    fail(actual, expected, message, '!==', assert.notStrictEqual);\n\t  }\n\t};\n\n\tfunction expectedException(actual, expected) {\n\t  if (!actual || !expected) {\n\t    return false;\n\t  }\n\n\t  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n\t    return expected.test(actual);\n\t  } else if (actual instanceof expected) {\n\t    return true;\n\t  } else if (expected.call({}, actual) === true) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t}\n\n\tfunction _throws(shouldThrow, block, expected, message) {\n\t  var actual;\n\n\t  if (util.isString(expected)) {\n\t    message = expected;\n\t    expected = null;\n\t  }\n\n\t  try {\n\t    block();\n\t  } catch (e) {\n\t    actual = e;\n\t  }\n\n\t  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n\t            (message ? ' ' + message : '.');\n\n\t  if (shouldThrow && !actual) {\n\t    fail(actual, expected, 'Missing expected exception' + message);\n\t  }\n\n\t  if (!shouldThrow && expectedException(actual, expected)) {\n\t    fail(actual, expected, 'Got unwanted exception' + message);\n\t  }\n\n\t  if ((shouldThrow && actual && expected &&\n\t      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n\t    throw actual;\n\t  }\n\t}\n\n\t// 11. Expected to throw an error:\n\t// assert.throws(block, Error_opt, message_opt);\n\n\tassert.throws = function(block, /*optional*/error, /*optional*/message) {\n\t  _throws.apply(this, [true].concat(pSlice.call(arguments)));\n\t};\n\n\t// EXTENSION! This is annoying to write outside this module.\n\tassert.doesNotThrow = function(block, /*optional*/message) {\n\t  _throws.apply(this, [false].concat(pSlice.call(arguments)));\n\t};\n\n\tassert.ifError = function(err) { if (err) {throw err;}};\n\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    if (hasOwn.call(obj, key)) keys.push(key);\n\t  }\n\t  return keys;\n\t};\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\n\t  if (!this._events)\n\t    this._events = {};\n\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      }\n\t      throw TypeError('Uncaught, unspecified \"error\" event.');\n\t    }\n\t  }\n\n\t  handler = this._events[type];\n\n\t  if (isUndefined(handler))\n\t    return false;\n\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        len = arguments.length;\n\t        args = new Array(len - 1);\n\t        for (i = 1; i < len; i++)\n\t          args[i - 1] = arguments[i];\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    len = arguments.length;\n\t    args = new Array(len - 1);\n\t    for (i = 1; i < len; i++)\n\t      args[i - 1] = arguments[i];\n\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\n\t  return true;\n\t};\n\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\n\t  if (!this._events)\n\t    this._events = {};\n\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    var m;\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\n\t  var fired = false;\n\n\t  function g() {\n\t    this.removeListener(type, g);\n\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\n\t  g.listener = listener;\n\t  this.on(type, g);\n\n\t  return this;\n\t};\n\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\n\t    if (position < 0)\n\t      return this;\n\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\n\t  if (!this._events)\n\t    return this;\n\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\n\t  listeners = this._events[type];\n\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  var ret;\n\t  if (!emitter._events || !emitter._events[type])\n\t    ret = 0;\n\t  else if (isFunction(emitter._events[type]))\n\t    ret = 1;\n\t  else\n\t    ret = emitter._events[type].length;\n\t  return ret;\n\t};\n\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(70)\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(71);\n\texports.Stream = __webpack_require__(46);\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(67);\n\texports.Duplex = __webpack_require__(69);\n\texports.Transform = __webpack_require__(70);\n\texports.PassThrough = __webpack_require__(68);\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(67)\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(69)\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(68)\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\n\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\n\t  return deprecated;\n\t};\n\n\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\n\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\n\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\n\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\n\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\n\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\n\t  return hash;\n\t}\n\n\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\n\t  var base = '', array = false, braces = ['{', '}'];\n\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\n\t  ctx.seen.push(value);\n\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\n\t  ctx.seen.pop();\n\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\n\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\n\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\n\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\n\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\n\t  return name + ': ' + str;\n\t}\n\n\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\n\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\n\texports.isBuffer = __webpack_require__(72);\n\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\n\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\n\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\n\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\n\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(94);\n\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(61)))\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// shim for using process in browser\n\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    draining = true;\n\t    var currentQueue;\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        var i = -1;\n\t        while (++i < len) {\n\t            currentQueue[i]();\n\t        }\n\t        len = queue.length;\n\t    }\n\t    draining = false;\n\t}\n\tprocess.nextTick = function (fun) {\n\t    queue.push(fun);\n\t    if (!draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\n\tfunction noop() {}\n\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\n\t// TODO(shtylman)\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var AFMFont, fs;\n\n\t  fs = __webpack_require__(10);\n\n\t  AFMFont = (function() {\n\t    var WIN_ANSI_MAP, characters;\n\n\t    AFMFont.open = function(filename) {\n\t      return new AFMFont(fs.readFileSync(filename, 'utf8'));\n\t    };\n\n\t    function AFMFont(contents) {\n\t      var e, i;\n\t      this.contents = contents;\n\t      this.attributes = {};\n\t      this.glyphWidths = {};\n\t      this.boundingBoxes = {};\n\t      this.parse();\n\t      this.charWidths = (function() {\n\t        var _i, _results;\n\t        _results = [];\n\t        for (i = _i = 0; _i <= 255; i = ++_i) {\n\t          _results.push(this.glyphWidths[characters[i]]);\n\t        }\n\t        return _results;\n\t      }).call(this);\n\t      this.bbox = (function() {\n\t        var _i, _len, _ref, _results;\n\t        _ref = this.attributes['FontBBox'].split(/\\s+/);\n\t        _results = [];\n\t        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t          e = _ref[_i];\n\t          _results.push(+e);\n\t        }\n\t        return _results;\n\t      }).call(this);\n\t      this.ascender = +(this.attributes['Ascender'] || 0);\n\t      this.decender = +(this.attributes['Descender'] || 0);\n\t      this.lineGap = (this.bbox[3] - this.bbox[1]) - (this.ascender - this.decender);\n\t    }\n\n\t    AFMFont.prototype.parse = function() {\n\t      var a, key, line, match, name, section, value, _i, _len, _ref;\n\t      section = '';\n\t      _ref = this.contents.split('\\n');\n\t      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t        line = _ref[_i];\n\t        if (match = line.match(/^Start(\\w+)/)) {\n\t          section = match[1];\n\t          continue;\n\t        } else if (match = line.match(/^End(\\w+)/)) {\n\t          section = '';\n\t          continue;\n\t        }\n\t        switch (section) {\n\t          case 'FontMetrics':\n\t            match = line.match(/(^\\w+)\\s+(.*)/);\n\t            key = match[1];\n\t            value = match[2];\n\t            if (a = this.attributes[key]) {\n\t              if (!Array.isArray(a)) {\n\t                a = this.attributes[key] = [a];\n\t              }\n\t              a.push(value);\n\t            } else {\n\t              this.attributes[key] = value;\n\t            }\n\t            break;\n\t          case 'CharMetrics':\n\t            if (!/^CH?\\s/.test(line)) {\n\t              continue;\n\t            }\n\t            name = line.match(/\\bN\\s+(\\.?\\w+)\\s*;/)[1];\n\t            this.glyphWidths[name] = +line.match(/\\bWX\\s+(\\d+)\\s*;/)[1];\n\t        }\n\t      }\n\t    };\n\n\t    WIN_ANSI_MAP = {\n\t      402: 131,\n\t      8211: 150,\n\t      8212: 151,\n\t      8216: 145,\n\t      8217: 146,\n\t      8218: 130,\n\t      8220: 147,\n\t      8221: 148,\n\t      8222: 132,\n\t      8224: 134,\n\t      8225: 135,\n\t      8226: 149,\n\t      8230: 133,\n\t      8364: 128,\n\t      8240: 137,\n\t      8249: 139,\n\t      8250: 155,\n\t      710: 136,\n\t      8482: 153,\n\t      338: 140,\n\t      339: 156,\n\t      732: 152,\n\t      352: 138,\n\t      353: 154,\n\t      376: 159,\n\t      381: 142,\n\t      382: 158\n\t    };\n\n\t    AFMFont.prototype.encodeText = function(text) {\n\t      var char, i, string, _i, _ref;\n\t      string = '';\n\t      for (i = _i = 0, _ref = text.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        char = text.charCodeAt(i);\n\t        char = WIN_ANSI_MAP[char] || char;\n\t        string += String.fromCharCode(char);\n\t      }\n\t      return string;\n\t    };\n\n\t    AFMFont.prototype.characterToGlyph = function(character) {\n\t      return characters[WIN_ANSI_MAP[character] || character];\n\t    };\n\n\t    AFMFont.prototype.widthOfGlyph = function(glyph) {\n\t      return this.glyphWidths[glyph];\n\t    };\n\n\t    characters = '.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n\\nspace         exclam         quotedbl       numbersign\\ndollar        percent        ampersand      quotesingle\\nparenleft     parenright     asterisk       plus\\ncomma         hyphen         period         slash\\nzero          one            two            three\\nfour          five           six            seven\\neight         nine           colon          semicolon\\nless          equal          greater        question\\n\\nat            A              B              C\\nD             E              F              G\\nH             I              J              K\\nL             M              N              O\\nP             Q              R              S\\nT             U              V              W\\nX             Y              Z              bracketleft\\nbackslash     bracketright   asciicircum    underscore\\n\\ngrave         a              b              c\\nd             e              f              g\\nh             i              j              k\\nl             m              n              o\\np             q              r              s\\nt             u              v              w\\nx             y              z              braceleft\\nbar           braceright     asciitilde     .notdef\\n\\nEuro          .notdef        quotesinglbase florin\\nquotedblbase  ellipsis       dagger         daggerdbl\\ncircumflex    perthousand    Scaron         guilsinglleft\\nOE            .notdef        Zcaron         .notdef\\n.notdef       quoteleft      quoteright     quotedblleft\\nquotedblright bullet         endash         emdash\\ntilde         trademark      scaron         guilsinglright\\noe            .notdef        zcaron         ydieresis\\n\\nspace         exclamdown     cent           sterling\\ncurrency      yen            brokenbar      section\\ndieresis      copyright      ordfeminine    guillemotleft\\nlogicalnot    hyphen         registered     macron\\ndegree        plusminus      twosuperior    threesuperior\\nacute         mu             paragraph      periodcentered\\ncedilla       onesuperior    ordmasculine   guillemotright\\nonequarter    onehalf        threequarters  questiondown\\n\\nAgrave        Aacute         Acircumflex    Atilde\\nAdieresis     Aring          AE             Ccedilla\\nEgrave        Eacute         Ecircumflex    Edieresis\\nIgrave        Iacute         Icircumflex    Idieresis\\nEth           Ntilde         Ograve         Oacute\\nOcircumflex   Otilde         Odieresis      multiply\\nOslash        Ugrave         Uacute         Ucircumflex\\nUdieresis     Yacute         Thorn          germandbls\\n\\nagrave        aacute         acircumflex    atilde\\nadieresis     aring          ae             ccedilla\\negrave        eacute         ecircumflex    edieresis\\nigrave        iacute         icircumflex    idieresis\\neth           ntilde         ograve         oacute\\nocircumflex   otilde         odieresis      divide\\noslash        ugrave         uacute         ucircumflex\\nudieresis     yacute         thorn          ydieresis'.split(/\\s+/);\n\n\t    return AFMFont;\n\n\t  })();\n\n\t  module.exports = AFMFont;\n\n\t}).call(this);\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var CmapTable, DFont, Data, Directory, GlyfTable, HeadTable, HheaTable, HmtxTable, LocaTable, MaxpTable, NameTable, OS2Table, PostTable, TTFFont, fs;\n\n\t  fs = __webpack_require__(10);\n\n\t  Data = __webpack_require__(34);\n\n\t  DFont = __webpack_require__(78);\n\n\t  Directory = __webpack_require__(79);\n\n\t  NameTable = __webpack_require__(80);\n\n\t  HeadTable = __webpack_require__(81);\n\n\t  CmapTable = __webpack_require__(82);\n\n\t  HmtxTable = __webpack_require__(83);\n\n\t  HheaTable = __webpack_require__(84);\n\n\t  MaxpTable = __webpack_require__(85);\n\n\t  PostTable = __webpack_require__(86);\n\n\t  OS2Table = __webpack_require__(87);\n\n\t  LocaTable = __webpack_require__(88);\n\n\t  GlyfTable = __webpack_require__(90);\n\n\t  TTFFont = (function() {\n\t    TTFFont.open = function(filename, name) {\n\t      var contents;\n\t      contents = fs.readFileSync(filename);\n\t      return new TTFFont(contents, name);\n\t    };\n\n\t    TTFFont.fromDFont = function(filename, family) {\n\t      var dfont;\n\t      dfont = DFont.open(filename);\n\t      return new TTFFont(dfont.getNamedFont(family));\n\t    };\n\n\t    TTFFont.fromBuffer = function(buffer, family) {\n\t      var dfont, e, ttf;\n\t      try {\n\t        ttf = new TTFFont(buffer, family);\n\t        if (!(ttf.head.exists && ttf.name.exists && ttf.cmap.exists)) {\n\t          dfont = new DFont(buffer);\n\t          ttf = new TTFFont(dfont.getNamedFont(family));\n\t          if (!(ttf.head.exists && ttf.name.exists && ttf.cmap.exists)) {\n\t            throw new Error('Invalid TTF file in DFont');\n\t          }\n\t        }\n\t        return ttf;\n\t      } catch (_error) {\n\t        e = _error;\n\t        throw new Error('Unknown font format in buffer: ' + e.message);\n\t      }\n\t    };\n\n\t    function TTFFont(rawData, name) {\n\t      var data, i, numFonts, offset, offsets, version, _i, _j, _len;\n\t      this.rawData = rawData;\n\t      data = this.contents = new Data(this.rawData);\n\t      if (data.readString(4) === 'ttcf') {\n\t        if (!name) {\n\t          throw new Error(\"Must specify a font name for TTC files.\");\n\t        }\n\t        version = data.readInt();\n\t        numFonts = data.readInt();\n\t        offsets = [];\n\t        for (i = _i = 0; 0 <= numFonts ? _i < numFonts : _i > numFonts; i = 0 <= numFonts ? ++_i : --_i) {\n\t          offsets[i] = data.readInt();\n\t        }\n\t        for (i = _j = 0, _len = offsets.length; _j < _len; i = ++_j) {\n\t          offset = offsets[i];\n\t          data.pos = offset;\n\t          this.parse();\n\t          if (this.name.postscriptName === name) {\n\t            return;\n\t          }\n\t        }\n\t        throw new Error(\"Font \" + name + \" not found in TTC file.\");\n\t      } else {\n\t        data.pos = 0;\n\t        this.parse();\n\t      }\n\t    }\n\n\t    TTFFont.prototype.parse = function() {\n\t      this.directory = new Directory(this.contents);\n\t      this.head = new HeadTable(this);\n\t      this.name = new NameTable(this);\n\t      this.cmap = new CmapTable(this);\n\t      this.hhea = new HheaTable(this);\n\t      this.maxp = new MaxpTable(this);\n\t      this.hmtx = new HmtxTable(this);\n\t      this.post = new PostTable(this);\n\t      this.os2 = new OS2Table(this);\n\t      this.loca = new LocaTable(this);\n\t      this.glyf = new GlyfTable(this);\n\t      this.ascender = (this.os2.exists && this.os2.ascender) || this.hhea.ascender;\n\t      this.decender = (this.os2.exists && this.os2.decender) || this.hhea.decender;\n\t      this.lineGap = (this.os2.exists && this.os2.lineGap) || this.hhea.lineGap;\n\t      return this.bbox = [this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax];\n\t    };\n\n\t    TTFFont.prototype.characterToGlyph = function(character) {\n\t      var _ref;\n\t      return ((_ref = this.cmap.unicode) != null ? _ref.codeMap[character] : void 0) || 0;\n\t    };\n\n\t    TTFFont.prototype.widthOfGlyph = function(glyph) {\n\t      var scale;\n\t      scale = 1000.0 / this.head.unitsPerEm;\n\t      return this.hmtx.forGlyph(glyph).advance * scale;\n\t    };\n\n\t    return TTFFont;\n\n\t  })();\n\n\t  module.exports = TTFFont;\n\n\t}).call(this);\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var CmapTable, Subset, utils,\n\t    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n\t  CmapTable = __webpack_require__(82);\n\n\t  utils = __webpack_require__(89);\n\n\t  Subset = (function() {\n\t    function Subset(font) {\n\t      this.font = font;\n\t      this.subset = {};\n\t      this.unicodes = {};\n\t      this.next = 33;\n\t    }\n\n\t    Subset.prototype.use = function(character) {\n\t      var i, _i, _ref;\n\t      if (typeof character === 'string') {\n\t        for (i = _i = 0, _ref = character.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t          this.use(character.charCodeAt(i));\n\t        }\n\t        return;\n\t      }\n\t      if (!this.unicodes[character]) {\n\t        this.subset[this.next] = character;\n\t        return this.unicodes[character] = this.next++;\n\t      }\n\t    };\n\n\t    Subset.prototype.encodeText = function(text) {\n\t      var char, i, string, _i, _ref;\n\t      string = '';\n\t      for (i = _i = 0, _ref = text.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        char = this.unicodes[text.charCodeAt(i)];\n\t        string += String.fromCharCode(char);\n\t      }\n\t      return string;\n\t    };\n\n\t    Subset.prototype.generateCmap = function() {\n\t      var mapping, roman, unicode, unicodeCmap, _ref;\n\t      unicodeCmap = this.font.cmap.tables[0].codeMap;\n\t      mapping = {};\n\t      _ref = this.subset;\n\t      for (roman in _ref) {\n\t        unicode = _ref[roman];\n\t        mapping[roman] = unicodeCmap[unicode];\n\t      }\n\t      return mapping;\n\t    };\n\n\t    Subset.prototype.glyphIDs = function() {\n\t      var ret, roman, unicode, unicodeCmap, val, _ref;\n\t      unicodeCmap = this.font.cmap.tables[0].codeMap;\n\t      ret = [0];\n\t      _ref = this.subset;\n\t      for (roman in _ref) {\n\t        unicode = _ref[roman];\n\t        val = unicodeCmap[unicode];\n\t        if ((val != null) && __indexOf.call(ret, val) < 0) {\n\t          ret.push(val);\n\t        }\n\t      }\n\t      return ret.sort();\n\t    };\n\n\t    Subset.prototype.glyphsFor = function(glyphIDs) {\n\t      var additionalIDs, glyph, glyphs, id, _i, _len, _ref;\n\t      glyphs = {};\n\t      for (_i = 0, _len = glyphIDs.length; _i < _len; _i++) {\n\t        id = glyphIDs[_i];\n\t        glyphs[id] = this.font.glyf.glyphFor(id);\n\t      }\n\t      additionalIDs = [];\n\t      for (id in glyphs) {\n\t        glyph = glyphs[id];\n\t        if (glyph != null ? glyph.compound : void 0) {\n\t          additionalIDs.push.apply(additionalIDs, glyph.glyphIDs);\n\t        }\n\t      }\n\t      if (additionalIDs.length > 0) {\n\t        _ref = this.glyphsFor(additionalIDs);\n\t        for (id in _ref) {\n\t          glyph = _ref[id];\n\t          glyphs[id] = glyph;\n\t        }\n\t      }\n\t      return glyphs;\n\t    };\n\n\t    Subset.prototype.encode = function() {\n\t      var cmap, code, glyf, glyphs, id, ids, loca, name, new2old, newIDs, nextGlyphID, old2new, oldID, oldIDs, tables, _ref, _ref1;\n\t      cmap = CmapTable.encode(this.generateCmap(), 'unicode');\n\t      glyphs = this.glyphsFor(this.glyphIDs());\n\t      old2new = {\n\t        0: 0\n\t      };\n\t      _ref = cmap.charMap;\n\t      for (code in _ref) {\n\t        ids = _ref[code];\n\t        old2new[ids.old] = ids[\"new\"];\n\t      }\n\t      nextGlyphID = cmap.maxGlyphID;\n\t      for (oldID in glyphs) {\n\t        if (!(oldID in old2new)) {\n\t          old2new[oldID] = nextGlyphID++;\n\t        }\n\t      }\n\t      new2old = utils.invert(old2new);\n\t      newIDs = Object.keys(new2old).sort(function(a, b) {\n\t        return a - b;\n\t      });\n\t      oldIDs = (function() {\n\t        var _i, _len, _results;\n\t        _results = [];\n\t        for (_i = 0, _len = newIDs.length; _i < _len; _i++) {\n\t          id = newIDs[_i];\n\t          _results.push(new2old[id]);\n\t        }\n\t        return _results;\n\t      })();\n\t      glyf = this.font.glyf.encode(glyphs, oldIDs, old2new);\n\t      loca = this.font.loca.encode(glyf.offsets);\n\t      name = this.font.name.encode();\n\t      this.postscriptName = name.postscriptName;\n\t      this.cmap = {};\n\t      _ref1 = cmap.charMap;\n\t      for (code in _ref1) {\n\t        ids = _ref1[code];\n\t        this.cmap[code] = ids.old;\n\t      }\n\t      tables = {\n\t        cmap: cmap.table,\n\t        glyf: glyf.table,\n\t        loca: loca.table,\n\t        hmtx: this.font.hmtx.encode(oldIDs),\n\t        hhea: this.font.hhea.encode(oldIDs),\n\t        maxp: this.font.maxp.encode(oldIDs),\n\t        post: this.font.post.encode(oldIDs),\n\t        name: name.table,\n\t        head: this.font.head.encode(loca)\n\t      };\n\t      if (this.font.os2.exists) {\n\t        tables['OS/2'] = this.font.os2.raw();\n\t      }\n\t      return this.font.directory.encode(tables);\n\t    };\n\n\t    return Subset;\n\n\t  })();\n\n\t  module.exports = Subset;\n\n\t}).call(this);\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var AI, AL, BA, BK, CB, CI_BRK, CJ, CP_BRK, CR, DI_BRK, ID, IN_BRK, LF, LineBreaker, NL, NS, PR_BRK, SA, SG, SP, UnicodeTrie, WJ, XX, characterClasses, classTrie, pairTable, _ref, _ref1;\n\n\t  UnicodeTrie = __webpack_require__(100);\n\n\t  classTrie = new UnicodeTrie(__webpack_require__(106));\n\n\t  _ref = __webpack_require__(92), BK = _ref.BK, CR = _ref.CR, LF = _ref.LF, NL = _ref.NL, CB = _ref.CB, BA = _ref.BA, SP = _ref.SP, WJ = _ref.WJ, SP = _ref.SP, BK = _ref.BK, LF = _ref.LF, NL = _ref.NL, AI = _ref.AI, AL = _ref.AL, SA = _ref.SA, SG = _ref.SG, XX = _ref.XX, CJ = _ref.CJ, ID = _ref.ID, NS = _ref.NS, characterClasses = _ref.characterClasses;\n\n\t  _ref1 = __webpack_require__(91), DI_BRK = _ref1.DI_BRK, IN_BRK = _ref1.IN_BRK, CI_BRK = _ref1.CI_BRK, CP_BRK = _ref1.CP_BRK, PR_BRK = _ref1.PR_BRK, pairTable = _ref1.pairTable;\n\n\t  LineBreaker = (function() {\n\t    var Break, mapClass, mapFirst;\n\n\t    function LineBreaker(string) {\n\t      this.string = string;\n\t      this.pos = 0;\n\t      this.lastPos = 0;\n\t      this.curClass = null;\n\t      this.nextClass = null;\n\t    }\n\n\t    LineBreaker.prototype.nextCodePoint = function() {\n\t      var code, next;\n\t      code = this.string.charCodeAt(this.pos++);\n\t      next = this.string.charCodeAt(this.pos);\n\t      if ((0xd800 <= code && code <= 0xdbff) && (0xdc00 <= next && next <= 0xdfff)) {\n\t        this.pos++;\n\t        return ((code - 0xd800) * 0x400) + (next - 0xdc00) + 0x10000;\n\t      }\n\t      return code;\n\t    };\n\n\t    mapClass = function(c) {\n\t      switch (c) {\n\t        case AI:\n\t          return AL;\n\t        case SA:\n\t        case SG:\n\t        case XX:\n\t          return AL;\n\t        case CJ:\n\t          return NS;\n\t        default:\n\t          return c;\n\t      }\n\t    };\n\n\t    mapFirst = function(c) {\n\t      switch (c) {\n\t        case LF:\n\t        case NL:\n\t          return BK;\n\t        case CB:\n\t          return BA;\n\t        case SP:\n\t          return WJ;\n\t        default:\n\t          return c;\n\t      }\n\t    };\n\n\t    LineBreaker.prototype.nextCharClass = function(first) {\n\t      if (first == null) {\n\t        first = false;\n\t      }\n\t      return mapClass(classTrie.get(this.nextCodePoint()));\n\t    };\n\n\t    Break = (function() {\n\t      function Break(position, required) {\n\t        this.position = position;\n\t        this.required = required != null ? required : false;\n\t      }\n\n\t      return Break;\n\n\t    })();\n\n\t    LineBreaker.prototype.nextBreak = function() {\n\t      var cur, lastClass, shouldBreak;\n\t      if (this.curClass == null) {\n\t        this.curClass = mapFirst(this.nextCharClass());\n\t      }\n\t      while (this.pos < this.string.length) {\n\t        this.lastPos = this.pos;\n\t        lastClass = this.nextClass;\n\t        this.nextClass = this.nextCharClass();\n\t        if (this.curClass === BK || (this.curClass === CR && this.nextClass !== LF)) {\n\t          this.curClass = mapFirst(mapClass(this.nextClass));\n\t          return new Break(this.lastPos, true);\n\t        }\n\t        cur = (function() {\n\t          switch (this.nextClass) {\n\t            case SP:\n\t              return this.curClass;\n\t            case BK:\n\t            case LF:\n\t            case NL:\n\t              return BK;\n\t            case CR:\n\t              return CR;\n\t            case CB:\n\t              return BA;\n\t          }\n\t        }).call(this);\n\t        if (cur != null) {\n\t          this.curClass = cur;\n\t          if (this.nextClass === CB) {\n\t            return new Break(this.lastPos);\n\t          }\n\t          continue;\n\t        }\n\t        shouldBreak = false;\n\t        switch (pairTable[this.curClass][this.nextClass]) {\n\t          case DI_BRK:\n\t            shouldBreak = true;\n\t            break;\n\t          case IN_BRK:\n\t            shouldBreak = lastClass === SP;\n\t            break;\n\t          case CI_BRK:\n\t            shouldBreak = lastClass === SP;\n\t            if (!shouldBreak) {\n\t              continue;\n\t            }\n\t            break;\n\t          case CP_BRK:\n\t            if (lastClass !== SP) {\n\t              continue;\n\t            }\n\t        }\n\t        this.curClass = this.nextClass;\n\t        if (shouldBreak) {\n\t          return new Break(this.lastPos);\n\t        }\n\t      }\n\t      if (this.pos >= this.string.length) {\n\t        if (this.lastPos < this.string.length) {\n\t          this.lastPos = this.string.length;\n\t          return new Break(this.string.length);\n\t        } else {\n\t          return null;\n\t        }\n\t      }\n\t    };\n\n\t    return LineBreaker;\n\n\t  })();\n\n\t  module.exports = LineBreaker;\n\n\t}).call(this);\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\n\tmodule.exports = Writable;\n\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(4).Buffer;\n\t/*</replacement>*/\n\n\tWritable.WritableState = WritableState;\n\n\n\t/*<replacement>*/\n\tvar util = __webpack_require__(105);\n\tutil.inherits = __webpack_require__(104);\n\t/*</replacement>*/\n\n\tvar Stream = __webpack_require__(46);\n\n\tutil.inherits(Writable, Stream);\n\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t}\n\n\tfunction WritableState(options, stream) {\n\t  var Duplex = __webpack_require__(69);\n\n\t  options = options || {};\n\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function(er) {\n\t    onwrite(stream, er);\n\t  };\n\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\n\t  this.buffer = [];\n\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t}\n\n\tfunction Writable(options) {\n\t  var Duplex = __webpack_require__(69);\n\n\t  // Writable ctor is applied to Duplexes, though they're not\n\t  // instanceof Writable, they're instanceof Readable.\n\t  if (!(this instanceof Writable) && !(this instanceof Duplex))\n\t    return new Writable(options);\n\n\t  this._writableState = new WritableState(options, this);\n\n\t  // legacy.\n\t  this.writable = true;\n\n\t  Stream.call(this);\n\t}\n\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function() {\n\t  this.emit('error', new Error('Cannot pipe. Not readable.'));\n\t};\n\n\n\tfunction writeAfterEnd(stream, state, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  process.nextTick(function() {\n\t    cb(er);\n\t  });\n\t}\n\n\t// If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    var er = new TypeError('Invalid non-string/buffer chunk');\n\t    stream.emit('error', er);\n\t    process.nextTick(function() {\n\t      cb(er);\n\t    });\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\n\tWritable.prototype.write = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\n\t  if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  else if (!encoding)\n\t    encoding = state.defaultEncoding;\n\n\t  if (!util.isFunction(cb))\n\t    cb = function() {};\n\n\t  if (state.ended)\n\t    writeAfterEnd(this, state, cb);\n\t  else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\n\t  return ret;\n\t};\n\n\tWritable.prototype.cork = function() {\n\t  var state = this._writableState;\n\n\t  state.corked++;\n\t};\n\n\tWritable.prototype.uncork = function() {\n\t  var state = this._writableState;\n\n\t  if (state.corked) {\n\t    state.corked--;\n\n\t    if (!state.writing &&\n\t        !state.corked &&\n\t        !state.finished &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length)\n\t      clearBuffer(this, state);\n\t  }\n\t};\n\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode &&\n\t      state.decodeStrings !== false &&\n\t      util.isString(chunk)) {\n\t    chunk = new Buffer(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\n\t  state.length += len;\n\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret)\n\t    state.needDrain = true;\n\n\t  if (state.writing || state.corked)\n\t    state.buffer.push(new WriteReq(chunk, encoding, cb));\n\t  else\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n\t  return ret;\n\t}\n\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev)\n\t    stream._writev(chunk, state.onwrite);\n\t  else\n\t    stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  if (sync)\n\t    process.nextTick(function() {\n\t      state.pendingcb--;\n\t      cb(er);\n\t    });\n\t  else {\n\t    state.pendingcb--;\n\t    cb(er);\n\t  }\n\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\n\t  onwriteStateUpdate(state);\n\n\t  if (er)\n\t    onwriteError(stream, state, sync, er, cb);\n\t  else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(stream, state);\n\n\t    if (!finished &&\n\t        !state.corked &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length) {\n\t      clearBuffer(stream, state);\n\t    }\n\n\t    if (sync) {\n\t      process.nextTick(function() {\n\t        afterWrite(stream, state, finished, cb);\n\t      });\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished)\n\t    onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\n\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\n\t  if (stream._writev && state.buffer.length > 1) {\n\t    // Fast case, write everything using _writev()\n\t    var cbs = [];\n\t    for (var c = 0; c < state.buffer.length; c++)\n\t      cbs.push(state.buffer[c].callback);\n\n\t    // count the one we are adding, as well.\n\t    // TODO(isaacs) clean this up\n\t    state.pendingcb++;\n\t    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n\t      for (var i = 0; i < cbs.length; i++) {\n\t        state.pendingcb--;\n\t        cbs[i](err);\n\t      }\n\t    });\n\n\t    // Clear buffer\n\t    state.buffer = [];\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    for (var c = 0; c < state.buffer.length; c++) {\n\t      var entry = state.buffer[c];\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        c++;\n\t        break;\n\t      }\n\t    }\n\n\t    if (c < state.buffer.length)\n\t      state.buffer = state.buffer.slice(c);\n\t    else\n\t      state.buffer.length = 0;\n\t  }\n\n\t  state.bufferProcessing = false;\n\t}\n\n\tWritable.prototype._write = function(chunk, encoding, cb) {\n\t  cb(new Error('not implemented'));\n\n\t};\n\n\tWritable.prototype._writev = null;\n\n\tWritable.prototype.end = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\n\t  if (util.isFunction(chunk)) {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\n\t  if (!util.isNullOrUndefined(chunk))\n\t    this.write(chunk, encoding);\n\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished)\n\t    endWritable(this, state, cb);\n\t};\n\n\n\tfunction needFinish(stream, state) {\n\t  return (state.ending &&\n\t          state.length === 0 &&\n\t          !state.finished &&\n\t          !state.writing);\n\t}\n\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(stream, state);\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else\n\t      prefinish(stream, state);\n\t  }\n\t  return need;\n\t}\n\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished)\n\t      process.nextTick(cb);\n\t    else\n\t      stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(61)))\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\n\tmodule.exports = PassThrough;\n\n\tvar Transform = __webpack_require__(70);\n\n\t/*<replacement>*/\n\tvar util = __webpack_require__(105);\n\tutil.inherits = __webpack_require__(104);\n\t/*</replacement>*/\n\n\tutil.inherits(PassThrough, Transform);\n\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough))\n\t    return new PassThrough(options);\n\n\t  Transform.call(this, options);\n\t}\n\n\tPassThrough.prototype._transform = function(chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\n\tmodule.exports = Duplex;\n\n\t/*<replacement>*/\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) keys.push(key);\n\t  return keys;\n\t}\n\t/*</replacement>*/\n\n\n\t/*<replacement>*/\n\tvar util = __webpack_require__(105);\n\tutil.inherits = __webpack_require__(104);\n\t/*</replacement>*/\n\n\tvar Readable = __webpack_require__(71);\n\tvar Writable = __webpack_require__(67);\n\n\tutil.inherits(Duplex, Readable);\n\n\tforEach(objectKeys(Writable.prototype), function(method) {\n\t  if (!Duplex.prototype[method])\n\t    Duplex.prototype[method] = Writable.prototype[method];\n\t});\n\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex))\n\t    return new Duplex(options);\n\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\n\t  if (options && options.readable === false)\n\t    this.readable = false;\n\n\t  if (options && options.writable === false)\n\t    this.writable = false;\n\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false)\n\t    this.allowHalfOpen = false;\n\n\t  this.once('end', onend);\n\t}\n\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended)\n\t    return;\n\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  process.nextTick(this.end.bind(this));\n\t}\n\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(61)))\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\n\tmodule.exports = Transform;\n\n\tvar Duplex = __webpack_require__(69);\n\n\t/*<replacement>*/\n\tvar util = __webpack_require__(105);\n\tutil.inherits = __webpack_require__(104);\n\t/*</replacement>*/\n\n\tutil.inherits(Transform, Duplex);\n\n\n\tfunction TransformState(options, stream) {\n\t  this.afterTransform = function(er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t}\n\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\n\t  var cb = ts.writecb;\n\n\t  if (!cb)\n\t    return stream.emit('error', new Error('no writecb in Transform class'));\n\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\n\t  if (!util.isNullOrUndefined(data))\n\t    stream.push(data);\n\n\t  if (cb)\n\t    cb(er);\n\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\n\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform))\n\t    return new Transform(options);\n\n\t  Duplex.call(this, options);\n\n\t  this._transformState = new TransformState(options, this);\n\n\t  // when the writable side finishes, then flush out anything remaining.\n\t  var stream = this;\n\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\n\t  this.once('prefinish', function() {\n\t    if (util.isFunction(this._flush))\n\t      this._flush(function(er) {\n\t        done(stream, er);\n\t      });\n\t    else\n\t      done(stream);\n\t  });\n\t}\n\n\tTransform.prototype.push = function(chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function(chunk, encoding, cb) {\n\t  throw new Error('not implemented');\n\t};\n\n\tTransform.prototype._write = function(chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform ||\n\t        rs.needReadable ||\n\t        rs.length < rs.highWaterMark)\n\t      this._read(rs.highWaterMark);\n\t  }\n\t};\n\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function(n) {\n\t  var ts = this._transformState;\n\n\t  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\n\n\tfunction done(stream, er) {\n\t  if (er)\n\t    return stream.emit('error', er);\n\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\n\t  if (ws.length)\n\t    throw new Error('calling transform done when ws.length != 0');\n\n\t  if (ts.transforming)\n\t    throw new Error('calling transform done when still transforming');\n\n\t  return stream.push(null);\n\t}\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tmodule.exports = Readable;\n\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(107);\n\t/*</replacement>*/\n\n\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(4).Buffer;\n\t/*</replacement>*/\n\n\tReadable.ReadableState = ReadableState;\n\n\tvar EE = __webpack_require__(54).EventEmitter;\n\n\t/*<replacement>*/\n\tif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\n\tvar Stream = __webpack_require__(46);\n\n\t/*<replacement>*/\n\tvar util = __webpack_require__(105);\n\tutil.inherits = __webpack_require__(104);\n\t/*</replacement>*/\n\n\tvar StringDecoder;\n\n\n\t/*<replacement>*/\n\tvar debug = __webpack_require__(93);\n\tif (debug && debug.debuglog) {\n\t  debug = debug.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\n\n\tutil.inherits(Readable, Stream);\n\n\tfunction ReadableState(options, stream) {\n\t  var Duplex = __webpack_require__(69);\n\n\t  options = options || {};\n\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\n\t  this.buffer = [];\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\n\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n\t  // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\t  this.ranOut = false;\n\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder)\n\t      StringDecoder = __webpack_require__(101).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\n\tfunction Readable(options) {\n\t  var Duplex = __webpack_require__(69);\n\n\t  if (!(this instanceof Readable))\n\t    return new Readable(options);\n\n\t  this._readableState = new ReadableState(options, this);\n\n\t  // legacy\n\t  this.readable = true;\n\n\t  Stream.call(this);\n\t}\n\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function(chunk, encoding) {\n\t  var state = this._readableState;\n\n\t  if (util.isString(chunk) && !state.objectMode) {\n\t    encoding = encoding || state.defaultEncoding;\n\t    if (encoding !== state.encoding) {\n\t      chunk = new Buffer(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t};\n\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function(chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (util.isNullOrUndefined(chunk)) {\n\t    state.reading = false;\n\t    if (!state.ended)\n\t      onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var e = new Error('stream.unshift() after end event');\n\t      stream.emit('error', e);\n\t    } else {\n\t      if (state.decoder && !addToFront && !encoding)\n\t        chunk = state.decoder.write(chunk);\n\n\t      if (!addToFront)\n\t        state.reading = false;\n\n\t      // if we want the data now, just emit it.\n\t      if (state.flowing && state.length === 0 && !state.sync) {\n\t        stream.emit('data', chunk);\n\t        stream.read(0);\n\t      } else {\n\t        // update the buffer info.\n\t        state.length += state.objectMode ? 1 : chunk.length;\n\t        if (addToFront)\n\t          state.buffer.unshift(chunk);\n\t        else\n\t          state.buffer.push(chunk);\n\n\t        if (state.needReadable)\n\t          emitReadable(stream);\n\t      }\n\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\n\t  return needMoreData(state);\n\t}\n\n\n\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended &&\n\t         (state.needReadable ||\n\t          state.length < state.highWaterMark ||\n\t          state.length === 0);\n\t}\n\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function(enc) {\n\t  if (!StringDecoder)\n\t    StringDecoder = __webpack_require__(101).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\n\t// Don't raise the hwm > 128MB\n\tvar MAX_HWM = 0x800000;\n\tfunction roundUpToNextPowerOf2(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2\n\t    n--;\n\t    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\n\tfunction howMuchToRead(n, state) {\n\t  if (state.length === 0 && state.ended)\n\t    return 0;\n\n\t  if (state.objectMode)\n\t    return n === 0 ? 0 : 1;\n\n\t  if (isNaN(n) || util.isNull(n)) {\n\t    // only flow one buffer at a time\n\t    if (state.flowing && state.buffer.length)\n\t      return state.buffer[0].length;\n\t    else\n\t      return state.length;\n\t  }\n\n\t  if (n <= 0)\n\t    return 0;\n\n\t  // If we're asking for more than the target buffer level,\n\t  // then raise the water mark.  Bump up to the next highest\n\t  // power of 2, to prevent increasing it excessively in tiny\n\t  // amounts.\n\t  if (n > state.highWaterMark)\n\t    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n\t  // don't have that much.  return null, unless we've ended.\n\t  if (n > state.length) {\n\t    if (!state.ended) {\n\t      state.needReadable = true;\n\t      return 0;\n\t    } else\n\t      return state.length;\n\t  }\n\n\t  return n;\n\t}\n\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function(n) {\n\t  debug('read', n);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\n\t  if (!util.isNumber(n) || n > 0)\n\t    state.emittedReadable = false;\n\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 &&\n\t      state.needReadable &&\n\t      (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended)\n\t      endReadable(this);\n\t    else\n\t      emitReadable(this);\n\t    return null;\n\t  }\n\n\t  n = howMuchToRead(n, state);\n\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0)\n\t      endReadable(this);\n\t    return null;\n\t  }\n\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  }\n\n\t  if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0)\n\t      state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t  }\n\n\t  // If _read pushed data synchronously, then `reading` will be false,\n\t  // and we need to re-evaluate how much data we can return to the user.\n\t  if (doRead && !state.reading)\n\t    n = howMuchToRead(nOrig, state);\n\n\t  var ret;\n\t  if (n > 0)\n\t    ret = fromList(n, state);\n\t  else\n\t    ret = null;\n\n\t  if (util.isNull(ret)) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  }\n\n\t  state.length -= n;\n\n\t  // If we have nothing in the buffer, then we want to know\n\t  // as soon as we *do* get something into the buffer.\n\t  if (state.length === 0 && !state.ended)\n\t    state.needReadable = true;\n\n\t  // If we tried to read() past the EOF, then emit end on the next tick.\n\t  if (nOrig !== n && state.ended && state.length === 0)\n\t    endReadable(this);\n\n\t  if (!util.isNull(ret))\n\t    this.emit('data', ret);\n\n\t  return ret;\n\t};\n\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\n\n\tfunction onEofChunk(stream, state) {\n\t  if (state.decoder && !state.ended) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync)\n\t      process.nextTick(function() {\n\t        emitReadable_(stream);\n\t      });\n\t    else\n\t      emitReadable_(stream);\n\t  }\n\t}\n\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\n\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    process.nextTick(function() {\n\t      maybeReadMore_(stream, state);\n\t    });\n\t  }\n\t}\n\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended &&\n\t         state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;\n\t    else\n\t      len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function(n) {\n\t  this.emit('error', new Error('not implemented'));\n\t};\n\n\tReadable.prototype.pipe = function(dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n\t              dest !== process.stdout &&\n\t              dest !== process.stderr;\n\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted)\n\t    process.nextTick(endFn);\n\t  else\n\t    src.once('end', endFn);\n\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain &&\n\t        (!dest._writableState || dest._writableState.needDrain))\n\t      ondrain();\n\t  }\n\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    var ret = dest.write(chunk);\n\t    if (false === ret) {\n\t      debug('false write response, pause',\n\t            src._readableState.awaitDrain);\n\t      src._readableState.awaitDrain++;\n\t      src.pause();\n\t    }\n\t  }\n\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EE.listenerCount(dest, 'error') === 0)\n\t      dest.emit('error', er);\n\t  }\n\t  // This is a brutally ugly hack to make sure that our error handler\n\t  // is attached before any userland ones.  NEVER DO THIS.\n\t  if (!dest._events || !dest._events.error)\n\t    dest.on('error', onerror);\n\t  else if (isArray(dest._events.error))\n\t    dest._events.error.unshift(onerror);\n\t  else\n\t    dest._events.error = [onerror, dest._events.error];\n\n\n\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\n\t  return dest;\n\t};\n\n\tfunction pipeOnDrain(src) {\n\t  return function() {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain)\n\t      state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\n\n\tReadable.prototype.unpipe = function(dest) {\n\t  var state = this._readableState;\n\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0)\n\t    return this;\n\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes)\n\t      return this;\n\n\t    if (!dest)\n\t      dest = state.pipes;\n\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest)\n\t      dest.emit('unpipe', this);\n\t    return this;\n\t  }\n\n\t  // slow case. multiple pipe destinations.\n\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\n\t    for (var i = 0; i < len; i++)\n\t      dests[i].emit('unpipe', this);\n\t    return this;\n\t  }\n\n\t  // try to find the right one.\n\t  var i = indexOf(state.pipes, dest);\n\t  if (i === -1)\n\t    return this;\n\n\t  state.pipes.splice(i, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1)\n\t    state.pipes = state.pipes[0];\n\n\t  dest.emit('unpipe', this);\n\n\t  return this;\n\t};\n\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function(ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\n\t  // If listening to data, and it has not explicitly been paused,\n\t  // then call resume to start the flow of data on the next tick.\n\t  if (ev === 'data' && false !== this._readableState.flowing) {\n\t    this.resume();\n\t  }\n\n\t  if (ev === 'readable' && this.readable) {\n\t    var state = this._readableState;\n\t    if (!state.readableListening) {\n\t      state.readableListening = true;\n\t      state.emittedReadable = false;\n\t      state.needReadable = true;\n\t      if (!state.reading) {\n\t        var self = this;\n\t        process.nextTick(function() {\n\t          debug('readable nexttick read 0');\n\t          self.read(0);\n\t        });\n\t      } else if (state.length) {\n\t        emitReadable(this, state);\n\t      }\n\t    }\n\t  }\n\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function() {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    if (!state.reading) {\n\t      debug('resume read 0');\n\t      this.read(0);\n\t    }\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    process.nextTick(function() {\n\t      resume_(stream, state);\n\t    });\n\t  }\n\t}\n\n\tfunction resume_(stream, state) {\n\t  state.resumeScheduled = false;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading)\n\t    stream.read(0);\n\t}\n\n\tReadable.prototype.pause = function() {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  if (state.flowing) {\n\t    do {\n\t      var chunk = stream.read();\n\t    } while (null !== chunk && state.flowing);\n\t  }\n\t}\n\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function(stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\n\t  var self = this;\n\t  stream.on('end', function() {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length)\n\t        self.push(chunk);\n\t    }\n\n\t    self.push(null);\n\t  });\n\n\t  stream.on('data', function(chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder)\n\t      chunk = state.decoder.write(chunk);\n\t    if (!chunk || !state.objectMode && !chunk.length)\n\t      return;\n\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n\t      this[i] = function(method) { return function() {\n\t        return stream[method].apply(stream, arguments);\n\t      }}(i);\n\t    }\n\t  }\n\n\t  // proxy certain important events.\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function(ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  });\n\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function(n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\n\t  return self;\n\t};\n\n\n\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\tfunction fromList(n, state) {\n\t  var list = state.buffer;\n\t  var length = state.length;\n\t  var stringMode = !!state.decoder;\n\t  var objectMode = !!state.objectMode;\n\t  var ret;\n\n\t  // nothing in the list, definitely empty.\n\t  if (list.length === 0)\n\t    return null;\n\n\t  if (length === 0)\n\t    ret = null;\n\t  else if (objectMode)\n\t    ret = list.shift();\n\t  else if (!n || n >= length) {\n\t    // read it all, truncate the array.\n\t    if (stringMode)\n\t      ret = list.join('');\n\t    else\n\t      ret = Buffer.concat(list, length);\n\t    list.length = 0;\n\t  } else {\n\t    // read just some of it.\n\t    if (n < list[0].length) {\n\t      // just take a part of the first list item.\n\t      // slice is the same for buffers and strings.\n\t      var buf = list[0];\n\t      ret = buf.slice(0, n);\n\t      list[0] = buf.slice(n);\n\t    } else if (n === list[0].length) {\n\t      // first list is a perfect match\n\t      ret = list.shift();\n\t    } else {\n\t      // complex case.\n\t      // we have enough to cover it, but it spans past the first buffer.\n\t      if (stringMode)\n\t        ret = '';\n\t      else\n\t        ret = new Buffer(n);\n\n\t      var c = 0;\n\t      for (var i = 0, l = list.length; i < l && c < n; i++) {\n\t        var buf = list[0];\n\t        var cpy = Math.min(n - c, buf.length);\n\n\t        if (stringMode)\n\t          ret += buf.slice(0, cpy);\n\t        else\n\t          buf.copy(ret, c, 0, cpy);\n\n\t        if (cpy < buf.length)\n\t          list[0] = buf.slice(cpy);\n\t        else\n\t          list.shift();\n\n\t        c += cpy;\n\t      }\n\t    }\n\t  }\n\n\t  return ret;\n\t}\n\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0)\n\t    throw new Error('endReadable called on non-empty stream');\n\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    process.nextTick(function() {\n\t      // Check that we didn't get one last unshift.\n\t      if (!state.endEmitted && state.length === 0) {\n\t        state.endEmitted = true;\n\t        stream.readable = false;\n\t        stream.emit('end');\n\t      }\n\t    });\n\t  }\n\t}\n\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\n\tfunction indexOf (xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(61)))\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tmodule.exports = {\n\t  '2':    'need dictionary',     /* Z_NEED_DICT       2  */\n\t  '1':    'stream end',          /* Z_STREAM_END      1  */\n\t  '0':    '',                    /* Z_OK              0  */\n\t  '-1':   'file error',          /* Z_ERRNO         (-1) */\n\t  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n\t  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n\t  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n\t  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n\t  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n\t};\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils   = __webpack_require__(98);\n\tvar trees   = __webpack_require__(95);\n\tvar adler32 = __webpack_require__(96);\n\tvar crc32   = __webpack_require__(97);\n\tvar msg   = __webpack_require__(73);\n\n\t/* Public constants ==========================================================*/\n\t/* ===========================================================================*/\n\n\n\t/* Allowed flush values; see deflate() and inflate() below for details */\n\tvar Z_NO_FLUSH      = 0;\n\tvar Z_PARTIAL_FLUSH = 1;\n\t//var Z_SYNC_FLUSH    = 2;\n\tvar Z_FULL_FLUSH    = 3;\n\tvar Z_FINISH        = 4;\n\tvar Z_BLOCK         = 5;\n\t//var Z_TREES         = 6;\n\n\n\t/* Return codes for the compression/decompression functions. Negative values\n\t * are errors, positive values are used for special but normal events.\n\t */\n\tvar Z_OK            = 0;\n\tvar Z_STREAM_END    = 1;\n\t//var Z_NEED_DICT     = 2;\n\t//var Z_ERRNO         = -1;\n\tvar Z_STREAM_ERROR  = -2;\n\tvar Z_DATA_ERROR    = -3;\n\t//var Z_MEM_ERROR     = -4;\n\tvar Z_BUF_ERROR     = -5;\n\t//var Z_VERSION_ERROR = -6;\n\n\n\t/* compression levels */\n\t//var Z_NO_COMPRESSION      = 0;\n\t//var Z_BEST_SPEED          = 1;\n\t//var Z_BEST_COMPRESSION    = 9;\n\tvar Z_DEFAULT_COMPRESSION = -1;\n\n\n\tvar Z_FILTERED            = 1;\n\tvar Z_HUFFMAN_ONLY        = 2;\n\tvar Z_RLE                 = 3;\n\tvar Z_FIXED               = 4;\n\tvar Z_DEFAULT_STRATEGY    = 0;\n\n\t/* Possible values of the data_type field (though see inflate()) */\n\t//var Z_BINARY              = 0;\n\t//var Z_TEXT                = 1;\n\t//var Z_ASCII               = 1; // = Z_TEXT\n\tvar Z_UNKNOWN             = 2;\n\n\n\t/* The deflate compression method */\n\tvar Z_DEFLATED  = 8;\n\n\t/*============================================================================*/\n\n\n\tvar MAX_MEM_LEVEL = 9;\n\t/* Maximum value for memLevel in deflateInit2 */\n\tvar MAX_WBITS = 15;\n\t/* 32K LZ77 window */\n\tvar DEF_MEM_LEVEL = 8;\n\n\n\tvar LENGTH_CODES  = 29;\n\t/* number of length codes, not counting the special END_BLOCK code */\n\tvar LITERALS      = 256;\n\t/* number of literal bytes 0..255 */\n\tvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n\t/* number of Literal or Length codes, including the END_BLOCK code */\n\tvar D_CODES       = 30;\n\t/* number of distance codes */\n\tvar BL_CODES      = 19;\n\t/* number of codes used to transfer the bit lengths */\n\tvar HEAP_SIZE     = 2*L_CODES + 1;\n\t/* maximum heap size */\n\tvar MAX_BITS  = 15;\n\t/* All codes must not exceed MAX_BITS bits */\n\n\tvar MIN_MATCH = 3;\n\tvar MAX_MATCH = 258;\n\tvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\n\tvar PRESET_DICT = 0x20;\n\n\tvar INIT_STATE = 42;\n\tvar EXTRA_STATE = 69;\n\tvar NAME_STATE = 73;\n\tvar COMMENT_STATE = 91;\n\tvar HCRC_STATE = 103;\n\tvar BUSY_STATE = 113;\n\tvar FINISH_STATE = 666;\n\n\tvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\n\tvar BS_BLOCK_DONE     = 2; /* block flush performed */\n\tvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\n\tvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\n\tvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\n\tfunction err(strm, errorCode) {\n\t  strm.msg = msg[errorCode];\n\t  return errorCode;\n\t}\n\n\tfunction rank(f) {\n\t  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n\t}\n\n\tfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n\t/* =========================================================================\n\t * Flush as much pending output as possible. All deflate() output goes\n\t * through this function so some applications may wish to modify it\n\t * to avoid allocating a large strm->output buffer and copying into it.\n\t * (See also read_buf()).\n\t */\n\tfunction flush_pending(strm) {\n\t  var s = strm.state;\n\n\t  //_tr_flush_bits(s);\n\t  var len = s.pending;\n\t  if (len > strm.avail_out) {\n\t    len = strm.avail_out;\n\t  }\n\t  if (len === 0) { return; }\n\n\t  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n\t  strm.next_out += len;\n\t  s.pending_out += len;\n\t  strm.total_out += len;\n\t  strm.avail_out -= len;\n\t  s.pending -= len;\n\t  if (s.pending === 0) {\n\t    s.pending_out = 0;\n\t  }\n\t}\n\n\n\tfunction flush_block_only (s, last) {\n\t  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n\t  s.block_start = s.strstart;\n\t  flush_pending(s.strm);\n\t}\n\n\n\tfunction put_byte(s, b) {\n\t  s.pending_buf[s.pending++] = b;\n\t}\n\n\n\t/* =========================================================================\n\t * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n\t * IN assertion: the stream state is correct and there is enough room in\n\t * pending_buf.\n\t */\n\tfunction putShortMSB(s, b) {\n\t//  put_byte(s, (Byte)(b >> 8));\n\t//  put_byte(s, (Byte)(b & 0xff));\n\t  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n\t  s.pending_buf[s.pending++] = b & 0xff;\n\t}\n\n\n\t/* ===========================================================================\n\t * Read a new buffer from the current input stream, update the adler32\n\t * and total number of bytes read.  All deflate() input goes through\n\t * this function so some applications may wish to modify it to avoid\n\t * allocating a large strm->input buffer and copying from it.\n\t * (See also flush_pending()).\n\t */\n\tfunction read_buf(strm, buf, start, size) {\n\t  var len = strm.avail_in;\n\n\t  if (len > size) { len = size; }\n\t  if (len === 0) { return 0; }\n\n\t  strm.avail_in -= len;\n\n\t  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n\t  if (strm.state.wrap === 1) {\n\t    strm.adler = adler32(strm.adler, buf, len, start);\n\t  }\n\n\t  else if (strm.state.wrap === 2) {\n\t    strm.adler = crc32(strm.adler, buf, len, start);\n\t  }\n\n\t  strm.next_in += len;\n\t  strm.total_in += len;\n\n\t  return len;\n\t}\n\n\n\t/* ===========================================================================\n\t * Set match_start to the longest match starting at the given string and\n\t * return its length. Matches shorter or equal to prev_length are discarded,\n\t * in which case the result is equal to prev_length and match_start is\n\t * garbage.\n\t * IN assertions: cur_match is the head of the hash chain for the current\n\t *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n\t * OUT assertion: the match length is not greater than s->lookahead.\n\t */\n\tfunction longest_match(s, cur_match) {\n\t  var chain_length = s.max_chain_length;      /* max hash chain length */\n\t  var scan = s.strstart; /* current string */\n\t  var match;                       /* matched string */\n\t  var len;                           /* length of current match */\n\t  var best_len = s.prev_length;              /* best match length so far */\n\t  var nice_match = s.nice_match;             /* stop if match long enough */\n\t  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n\t      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n\t  var _win = s.window; // shortcut\n\n\t  var wmask = s.w_mask;\n\t  var prev  = s.prev;\n\n\t  /* Stop when cur_match becomes <= limit. To simplify the code,\n\t   * we prevent matches with the string of window index 0.\n\t   */\n\n\t  var strend = s.strstart + MAX_MATCH;\n\t  var scan_end1  = _win[scan + best_len - 1];\n\t  var scan_end   = _win[scan + best_len];\n\n\t  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n\t   * It is easy to get rid of this optimization if necessary.\n\t   */\n\t  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n\t  /* Do not waste too much time if we already have a good match: */\n\t  if (s.prev_length >= s.good_match) {\n\t    chain_length >>= 2;\n\t  }\n\t  /* Do not look for matches beyond the end of the input. This is necessary\n\t   * to make deflate deterministic.\n\t   */\n\t  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n\t  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n\t  do {\n\t    // Assert(cur_match < s->strstart, \"no future\");\n\t    match = cur_match;\n\n\t    /* Skip to next match if the match length cannot increase\n\t     * or if the match length is less than 2.  Note that the checks below\n\t     * for insufficient lookahead only occur occasionally for performance\n\t     * reasons.  Therefore uninitialized memory will be accessed, and\n\t     * conditional jumps will be made that depend on those values.\n\t     * However the length of the match is limited to the lookahead, so\n\t     * the output of deflate is not affected by the uninitialized values.\n\t     */\n\n\t    if (_win[match + best_len]     !== scan_end  ||\n\t        _win[match + best_len - 1] !== scan_end1 ||\n\t        _win[match]                !== _win[scan] ||\n\t        _win[++match]              !== _win[scan + 1]) {\n\t      continue;\n\t    }\n\n\t    /* The check at best_len-1 can be removed because it will be made\n\t     * again later. (This heuristic is not always a win.)\n\t     * It is not necessary to compare scan[2] and match[2] since they\n\t     * are always equal when the other bytes match, given that\n\t     * the hash keys are equal and that HASH_BITS >= 8.\n\t     */\n\t    scan += 2;\n\t    match++;\n\t    // Assert(*scan == *match, \"match[2]?\");\n\n\t    /* We check for insufficient lookahead only every 8th comparison;\n\t     * the 256th check will be made at strstart+258.\n\t     */\n\t    do {\n\t      /*jshint noempty:false*/\n\t    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n\t             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n\t             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n\t             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n\t             scan < strend);\n\n\t    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n\t    len = MAX_MATCH - (strend - scan);\n\t    scan = strend - MAX_MATCH;\n\n\t    if (len > best_len) {\n\t      s.match_start = cur_match;\n\t      best_len = len;\n\t      if (len >= nice_match) {\n\t        break;\n\t      }\n\t      scan_end1  = _win[scan + best_len - 1];\n\t      scan_end   = _win[scan + best_len];\n\t    }\n\t  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n\t  if (best_len <= s.lookahead) {\n\t    return best_len;\n\t  }\n\t  return s.lookahead;\n\t}\n\n\n\t/* ===========================================================================\n\t * Fill the window when the lookahead becomes insufficient.\n\t * Updates strstart and lookahead.\n\t *\n\t * IN assertion: lookahead < MIN_LOOKAHEAD\n\t * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n\t *    At least one byte has been read, or avail_in == 0; reads are\n\t *    performed for at least two bytes (required for the zip translate_eol\n\t *    option -- not supported here).\n\t */\n\tfunction fill_window(s) {\n\t  var _w_size = s.w_size;\n\t  var p, n, m, more, str;\n\n\t  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n\t  do {\n\t    more = s.window_size - s.lookahead - s.strstart;\n\n\t    // JS ints have 32 bit, block below not needed\n\t    /* Deal with !@#$% 64K limit: */\n\t    //if (sizeof(int) <= 2) {\n\t    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n\t    //        more = wsize;\n\t    //\n\t    //  } else if (more == (unsigned)(-1)) {\n\t    //        /* Very unlikely, but possible on 16 bit machine if\n\t    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n\t    //         */\n\t    //        more--;\n\t    //    }\n\t    //}\n\n\n\t    /* If the window is almost full and there is insufficient lookahead,\n\t     * move the upper half to the lower one to make room in the upper half.\n\t     */\n\t    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n\t      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n\t      s.match_start -= _w_size;\n\t      s.strstart -= _w_size;\n\t      /* we now have strstart >= MAX_DIST */\n\t      s.block_start -= _w_size;\n\n\t      /* Slide the hash table (could be avoided with 32 bit values\n\t       at the expense of memory usage). We slide even when level == 0\n\t       to keep the hash table consistent if we switch back to level > 0\n\t       later. (Using level 0 permanently is not an optimal usage of\n\t       zlib, so we don't care about this pathological case.)\n\t       */\n\n\t      n = s.hash_size;\n\t      p = n;\n\t      do {\n\t        m = s.head[--p];\n\t        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n\t      } while (--n);\n\n\t      n = _w_size;\n\t      p = n;\n\t      do {\n\t        m = s.prev[--p];\n\t        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n\t        /* If n is not on any hash chain, prev[n] is garbage but\n\t         * its value will never be used.\n\t         */\n\t      } while (--n);\n\n\t      more += _w_size;\n\t    }\n\t    if (s.strm.avail_in === 0) {\n\t      break;\n\t    }\n\n\t    /* If there was no sliding:\n\t     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n\t     *    more == window_size - lookahead - strstart\n\t     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n\t     * => more >= window_size - 2*WSIZE + 2\n\t     * In the BIG_MEM or MMAP case (not yet supported),\n\t     *   window_size == input_size + MIN_LOOKAHEAD  &&\n\t     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n\t     * Otherwise, window_size == 2*WSIZE so more >= 2.\n\t     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n\t     */\n\t    //Assert(more >= 2, \"more < 2\");\n\t    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n\t    s.lookahead += n;\n\n\t    /* Initialize the hash value now that we have some input: */\n\t    if (s.lookahead + s.insert >= MIN_MATCH) {\n\t      str = s.strstart - s.insert;\n\t      s.ins_h = s.window[str];\n\n\t      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n\t      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n\t//#if MIN_MATCH != 3\n\t//        Call update_hash() MIN_MATCH-3 more times\n\t//#endif\n\t      while (s.insert) {\n\t        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n\t        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;\n\n\t        s.prev[str & s.w_mask] = s.head[s.ins_h];\n\t        s.head[s.ins_h] = str;\n\t        str++;\n\t        s.insert--;\n\t        if (s.lookahead + s.insert < MIN_MATCH) {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n\t     * but this is not important since only literal bytes will be emitted.\n\t     */\n\n\t  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n\t  /* If the WIN_INIT bytes after the end of the current data have never been\n\t   * written, then zero those bytes in order to avoid memory check reports of\n\t   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n\t   * the longest match routines.  Update the high water mark for the next\n\t   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n\t   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n\t   */\n\t//  if (s.high_water < s.window_size) {\n\t//    var curr = s.strstart + s.lookahead;\n\t//    var init = 0;\n\t//\n\t//    if (s.high_water < curr) {\n\t//      /* Previous high water mark below current data -- zero WIN_INIT\n\t//       * bytes or up to end of window, whichever is less.\n\t//       */\n\t//      init = s.window_size - curr;\n\t//      if (init > WIN_INIT)\n\t//        init = WIN_INIT;\n\t//      zmemzero(s->window + curr, (unsigned)init);\n\t//      s->high_water = curr + init;\n\t//    }\n\t//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n\t//      /* High water mark at or above current data, but below current data\n\t//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n\t//       * to end of window, whichever is less.\n\t//       */\n\t//      init = (ulg)curr + WIN_INIT - s->high_water;\n\t//      if (init > s->window_size - s->high_water)\n\t//        init = s->window_size - s->high_water;\n\t//      zmemzero(s->window + s->high_water, (unsigned)init);\n\t//      s->high_water += init;\n\t//    }\n\t//  }\n\t//\n\t//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n\t//    \"not enough room for search\");\n\t}\n\n\t/* ===========================================================================\n\t * Copy without compression as much as possible from the input stream, return\n\t * the current block state.\n\t * This function does not insert new strings in the dictionary since\n\t * uncompressible data is probably not useful. This function is used\n\t * only for the level=0 compression option.\n\t * NOTE: this function should be optimized to avoid extra copying from\n\t * window to pending_buf.\n\t */\n\tfunction deflate_stored(s, flush) {\n\t  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n\t   * to pending_buf_size, and each stored block has a 5 byte header:\n\t   */\n\t  var max_block_size = 0xffff;\n\n\t  if (max_block_size > s.pending_buf_size - 5) {\n\t    max_block_size = s.pending_buf_size - 5;\n\t  }\n\n\t  /* Copy as much as possible from input to output: */\n\t  for (;;) {\n\t    /* Fill the window as much as possible: */\n\t    if (s.lookahead <= 1) {\n\n\t      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n\t      //  s->block_start >= (long)s->w_size, \"slide too late\");\n\t//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n\t//        s.block_start >= s.w_size)) {\n\t//        throw  new Error(\"slide too late\");\n\t//      }\n\n\t      fill_window(s);\n\t      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n\t        return BS_NEED_MORE;\n\t      }\n\n\t      if (s.lookahead === 0) {\n\t        break;\n\t      }\n\t      /* flush the current block */\n\t    }\n\t    //Assert(s->block_start >= 0L, \"block gone\");\n\t//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n\t    s.strstart += s.lookahead;\n\t    s.lookahead = 0;\n\n\t    /* Emit a stored block if pending_buf will be full: */\n\t    var max_start = s.block_start + max_block_size;\n\n\t    if (s.strstart === 0 || s.strstart >= max_start) {\n\t      /* strstart == 0 is possible when wraparound on 16-bit machine */\n\t      s.lookahead = s.strstart - max_start;\n\t      s.strstart = max_start;\n\t      /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, false);\n\t      if (s.strm.avail_out === 0) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      /***/\n\n\n\t    }\n\t    /* Flush if we may have to slide, otherwise block_start may become\n\t     * negative and the data will be gone:\n\t     */\n\t    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n\t      /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, false);\n\t      if (s.strm.avail_out === 0) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      /***/\n\t    }\n\t  }\n\n\t  s.insert = 0;\n\n\t  if (flush === Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t    flush_block_only(s, true);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return BS_FINISH_DONE;\n\t  }\n\n\t  if (s.strstart > s.block_start) {\n\t    /*** FLUSH_BLOCK(s, 0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  }\n\n\t  return BS_NEED_MORE;\n\t}\n\n\t/* ===========================================================================\n\t * Compress as much as possible from the input stream, return the current\n\t * block state.\n\t * This function does not perform lazy evaluation of matches and inserts\n\t * new strings in the dictionary only for unmatched strings or for short\n\t * matches. It is used only for the fast compression options.\n\t */\n\tfunction deflate_fast(s, flush) {\n\t  var hash_head;        /* head of the hash chain */\n\t  var bflush;           /* set if current block must be flushed */\n\n\t  for (;;) {\n\t    /* Make sure that we always have enough lookahead, except\n\t     * at the end of the input file. We need MAX_MATCH bytes\n\t     * for the next match, plus MIN_MATCH bytes to insert the\n\t     * string following the next match.\n\t     */\n\t    if (s.lookahead < MIN_LOOKAHEAD) {\n\t      fill_window(s);\n\t      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      if (s.lookahead === 0) {\n\t        break; /* flush the current block */\n\t      }\n\t    }\n\n\t    /* Insert the string window[strstart .. strstart+2] in the\n\t     * dictionary, and set hash_head to the head of the hash chain:\n\t     */\n\t    hash_head = 0/*NIL*/;\n\t    if (s.lookahead >= MIN_MATCH) {\n\t      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n\t      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n\t      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n\t      s.head[s.ins_h] = s.strstart;\n\t      /***/\n\t    }\n\n\t    /* Find the longest match, discarding those <= prev_length.\n\t     * At this point we have always match_length < MIN_MATCH\n\t     */\n\t    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n\t      /* To simplify the code, we prevent matches with the string\n\t       * of window index 0 (in particular we have to avoid a match\n\t       * of the string with itself at the start of the input file).\n\t       */\n\t      s.match_length = longest_match(s, hash_head);\n\t      /* longest_match() sets match_start */\n\t    }\n\t    if (s.match_length >= MIN_MATCH) {\n\t      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n\t      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n\t                     s.match_length - MIN_MATCH, bflush); ***/\n\t      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n\t      s.lookahead -= s.match_length;\n\n\t      /* Insert new strings in the hash table only if the match length\n\t       * is not too large. This saves time but degrades compression.\n\t       */\n\t      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n\t        s.match_length--; /* string at strstart already in table */\n\t        do {\n\t          s.strstart++;\n\t          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n\t          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n\t          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n\t          s.head[s.ins_h] = s.strstart;\n\t          /***/\n\t          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t           * always MIN_MATCH bytes ahead.\n\t           */\n\t        } while (--s.match_length !== 0);\n\t        s.strstart++;\n\t      } else\n\t      {\n\t        s.strstart += s.match_length;\n\t        s.match_length = 0;\n\t        s.ins_h = s.window[s.strstart];\n\t        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n\t        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n\t//#if MIN_MATCH != 3\n\t//                Call UPDATE_HASH() MIN_MATCH-3 more times\n\t//#endif\n\t        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n\t         * matter since it will be recomputed at next deflate call.\n\t         */\n\t      }\n\t    } else {\n\t      /* No match, output a literal byte */\n\t      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n\t      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n\t      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n\t      s.lookahead--;\n\t      s.strstart++;\n\t    }\n\t    if (bflush) {\n\t      /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, false);\n\t      if (s.strm.avail_out === 0) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      /***/\n\t    }\n\t  }\n\t  s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);\n\t  if (flush === Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t    flush_block_only(s, true);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    /*** FLUSH_BLOCK(s, 0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  }\n\t  return BS_BLOCK_DONE;\n\t}\n\n\t/* ===========================================================================\n\t * Same as above, but achieves better compression. We use a lazy\n\t * evaluation for matches: a match is finally adopted only if there is\n\t * no better match at the next window position.\n\t */\n\tfunction deflate_slow(s, flush) {\n\t  var hash_head;          /* head of hash chain */\n\t  var bflush;              /* set if current block must be flushed */\n\n\t  var max_insert;\n\n\t  /* Process the input block. */\n\t  for (;;) {\n\t    /* Make sure that we always have enough lookahead, except\n\t     * at the end of the input file. We need MAX_MATCH bytes\n\t     * for the next match, plus MIN_MATCH bytes to insert the\n\t     * string following the next match.\n\t     */\n\t    if (s.lookahead < MIN_LOOKAHEAD) {\n\t      fill_window(s);\n\t      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      if (s.lookahead === 0) { break; } /* flush the current block */\n\t    }\n\n\t    /* Insert the string window[strstart .. strstart+2] in the\n\t     * dictionary, and set hash_head to the head of the hash chain:\n\t     */\n\t    hash_head = 0/*NIL*/;\n\t    if (s.lookahead >= MIN_MATCH) {\n\t      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n\t      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n\t      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n\t      s.head[s.ins_h] = s.strstart;\n\t      /***/\n\t    }\n\n\t    /* Find the longest match, discarding those <= prev_length.\n\t     */\n\t    s.prev_length = s.match_length;\n\t    s.prev_match = s.match_start;\n\t    s.match_length = MIN_MATCH-1;\n\n\t    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n\t        s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n\t      /* To simplify the code, we prevent matches with the string\n\t       * of window index 0 (in particular we have to avoid a match\n\t       * of the string with itself at the start of the input file).\n\t       */\n\t      s.match_length = longest_match(s, hash_head);\n\t      /* longest_match() sets match_start */\n\n\t      if (s.match_length <= 5 &&\n\t         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n\t        /* If prev_match is also MIN_MATCH, match_start is garbage\n\t         * but we will ignore the current match anyway.\n\t         */\n\t        s.match_length = MIN_MATCH-1;\n\t      }\n\t    }\n\t    /* If there was a match at the previous step and the current\n\t     * match is not better, output the previous match:\n\t     */\n\t    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n\t      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n\t      /* Do not insert strings in hash table beyond this. */\n\n\t      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n\t      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n\t                     s.prev_length - MIN_MATCH, bflush);***/\n\t      bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);\n\t      /* Insert in hash table all strings up to the end of the match.\n\t       * strstart-1 and strstart are already inserted. If there is not\n\t       * enough lookahead, the last two strings are not inserted in\n\t       * the hash table.\n\t       */\n\t      s.lookahead -= s.prev_length-1;\n\t      s.prev_length -= 2;\n\t      do {\n\t        if (++s.strstart <= max_insert) {\n\t          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n\t          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n\t          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n\t          s.head[s.ins_h] = s.strstart;\n\t          /***/\n\t        }\n\t      } while (--s.prev_length !== 0);\n\t      s.match_available = 0;\n\t      s.match_length = MIN_MATCH-1;\n\t      s.strstart++;\n\n\t      if (bflush) {\n\t        /*** FLUSH_BLOCK(s, 0); ***/\n\t        flush_block_only(s, false);\n\t        if (s.strm.avail_out === 0) {\n\t          return BS_NEED_MORE;\n\t        }\n\t        /***/\n\t      }\n\n\t    } else if (s.match_available) {\n\t      /* If there was no match at the previous position, output a\n\t       * single literal. If there was a match but the current match\n\t       * is longer, truncate the previous match to a single literal.\n\t       */\n\t      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n\t      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n\t      bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n\t      if (bflush) {\n\t        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n\t        flush_block_only(s, false);\n\t        /***/\n\t      }\n\t      s.strstart++;\n\t      s.lookahead--;\n\t      if (s.strm.avail_out === 0) {\n\t        return BS_NEED_MORE;\n\t      }\n\t    } else {\n\t      /* There is no previous match to compare with, wait for\n\t       * the next step to decide.\n\t       */\n\t      s.match_available = 1;\n\t      s.strstart++;\n\t      s.lookahead--;\n\t    }\n\t  }\n\t  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n\t  if (s.match_available) {\n\t    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n\t    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n\t    bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n\t    s.match_available = 0;\n\t  }\n\t  s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;\n\t  if (flush === Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t    flush_block_only(s, true);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    /*** FLUSH_BLOCK(s, 0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  }\n\n\t  return BS_BLOCK_DONE;\n\t}\n\n\n\t/* ===========================================================================\n\t * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n\t * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n\t * deflate switches away from Z_RLE.)\n\t */\n\tfunction deflate_rle(s, flush) {\n\t  var bflush;            /* set if current block must be flushed */\n\t  var prev;              /* byte at distance one to match */\n\t  var scan, strend;      /* scan goes up to strend for length of run */\n\n\t  var _win = s.window;\n\n\t  for (;;) {\n\t    /* Make sure that we always have enough lookahead, except\n\t     * at the end of the input file. We need MAX_MATCH bytes\n\t     * for the longest run, plus one for the unrolled loop.\n\t     */\n\t    if (s.lookahead <= MAX_MATCH) {\n\t      fill_window(s);\n\t      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      if (s.lookahead === 0) { break; } /* flush the current block */\n\t    }\n\n\t    /* See how many times the previous byte repeats */\n\t    s.match_length = 0;\n\t    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n\t      scan = s.strstart - 1;\n\t      prev = _win[scan];\n\t      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n\t        strend = s.strstart + MAX_MATCH;\n\t        do {\n\t          /*jshint noempty:false*/\n\t        } while (prev === _win[++scan] && prev === _win[++scan] &&\n\t                 prev === _win[++scan] && prev === _win[++scan] &&\n\t                 prev === _win[++scan] && prev === _win[++scan] &&\n\t                 prev === _win[++scan] && prev === _win[++scan] &&\n\t                 scan < strend);\n\t        s.match_length = MAX_MATCH - (strend - scan);\n\t        if (s.match_length > s.lookahead) {\n\t          s.match_length = s.lookahead;\n\t        }\n\t      }\n\t      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n\t    }\n\n\t    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n\t    if (s.match_length >= MIN_MATCH) {\n\t      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n\t      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n\t      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n\t      s.lookahead -= s.match_length;\n\t      s.strstart += s.match_length;\n\t      s.match_length = 0;\n\t    } else {\n\t      /* No match, output a literal byte */\n\t      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n\t      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n\t      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n\t      s.lookahead--;\n\t      s.strstart++;\n\t    }\n\t    if (bflush) {\n\t      /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, false);\n\t      if (s.strm.avail_out === 0) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      /***/\n\t    }\n\t  }\n\t  s.insert = 0;\n\t  if (flush === Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t    flush_block_only(s, true);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    /*** FLUSH_BLOCK(s, 0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  }\n\t  return BS_BLOCK_DONE;\n\t}\n\n\t/* ===========================================================================\n\t * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n\t * (It will be regenerated if this run of deflate switches away from Huffman.)\n\t */\n\tfunction deflate_huff(s, flush) {\n\t  var bflush;             /* set if current block must be flushed */\n\n\t  for (;;) {\n\t    /* Make sure that we have a literal to write. */\n\t    if (s.lookahead === 0) {\n\t      fill_window(s);\n\t      if (s.lookahead === 0) {\n\t        if (flush === Z_NO_FLUSH) {\n\t          return BS_NEED_MORE;\n\t        }\n\t        break;      /* flush the current block */\n\t      }\n\t    }\n\n\t    /* Output a literal byte */\n\t    s.match_length = 0;\n\t    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n\t    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n\t    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\t    s.lookahead--;\n\t    s.strstart++;\n\t    if (bflush) {\n\t      /*** FLUSH_BLOCK(s, 0); ***/\n\t      flush_block_only(s, false);\n\t      if (s.strm.avail_out === 0) {\n\t        return BS_NEED_MORE;\n\t      }\n\t      /***/\n\t    }\n\t  }\n\t  s.insert = 0;\n\t  if (flush === Z_FINISH) {\n\t    /*** FLUSH_BLOCK(s, 1); ***/\n\t    flush_block_only(s, true);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_FINISH_STARTED;\n\t    }\n\t    /***/\n\t    return BS_FINISH_DONE;\n\t  }\n\t  if (s.last_lit) {\n\t    /*** FLUSH_BLOCK(s, 0); ***/\n\t    flush_block_only(s, false);\n\t    if (s.strm.avail_out === 0) {\n\t      return BS_NEED_MORE;\n\t    }\n\t    /***/\n\t  }\n\t  return BS_BLOCK_DONE;\n\t}\n\n\t/* Values for max_lazy_match, good_match and max_chain_length, depending on\n\t * the desired pack level (0..9). The values given below have been tuned to\n\t * exclude worst case performance for pathological files. Better values may be\n\t * found for specific files.\n\t */\n\tvar Config = function (good_length, max_lazy, nice_length, max_chain, func) {\n\t  this.good_length = good_length;\n\t  this.max_lazy = max_lazy;\n\t  this.nice_length = nice_length;\n\t  this.max_chain = max_chain;\n\t  this.func = func;\n\t};\n\n\tvar configuration_table;\n\n\tconfiguration_table = [\n\t  /*      good lazy nice chain */\n\t  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n\t  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n\t  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n\t  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n\t  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n\t  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n\t  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n\t  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n\t  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n\t  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n\t];\n\n\n\t/* ===========================================================================\n\t * Initialize the \"longest match\" routines for a new zlib stream\n\t */\n\tfunction lm_init(s) {\n\t  s.window_size = 2 * s.w_size;\n\n\t  /*** CLEAR_HASH(s); ***/\n\t  zero(s.head); // Fill with NIL (= 0);\n\n\t  /* Set the default configuration parameters:\n\t   */\n\t  s.max_lazy_match = configuration_table[s.level].max_lazy;\n\t  s.good_match = configuration_table[s.level].good_length;\n\t  s.nice_match = configuration_table[s.level].nice_length;\n\t  s.max_chain_length = configuration_table[s.level].max_chain;\n\n\t  s.strstart = 0;\n\t  s.block_start = 0;\n\t  s.lookahead = 0;\n\t  s.insert = 0;\n\t  s.match_length = s.prev_length = MIN_MATCH - 1;\n\t  s.match_available = 0;\n\t  s.ins_h = 0;\n\t}\n\n\n\tfunction DeflateState() {\n\t  this.strm = null;            /* pointer back to this zlib stream */\n\t  this.status = 0;            /* as the name implies */\n\t  this.pending_buf = null;      /* output still pending */\n\t  this.pending_buf_size = 0;  /* size of pending_buf */\n\t  this.pending_out = 0;       /* next pending byte to output to the stream */\n\t  this.pending = 0;           /* nb of bytes in the pending buffer */\n\t  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n\t  this.gzhead = null;         /* gzip header information to write */\n\t  this.gzindex = 0;           /* where in extra, name, or comment */\n\t  this.method = Z_DEFLATED; /* can only be DEFLATED */\n\t  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n\t  this.w_size = 0;  /* LZ77 window size (32K by default) */\n\t  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n\t  this.w_mask = 0;  /* w_size - 1 */\n\n\t  this.window = null;\n\t  /* Sliding window. Input bytes are read into the second half of the window,\n\t   * and move to the first half later to keep a dictionary of at least wSize\n\t   * bytes. With this organization, matches are limited to a distance of\n\t   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n\t   * performed with a length multiple of the block size.\n\t   */\n\n\t  this.window_size = 0;\n\t  /* Actual size of window: 2*wSize, except when the user input buffer\n\t   * is directly used as sliding window.\n\t   */\n\n\t  this.prev = null;\n\t  /* Link to older string with same hash index. To limit the size of this\n\t   * array to 64K, this link is maintained only for the last 32K strings.\n\t   * An index in this array is thus a window index modulo 32K.\n\t   */\n\n\t  this.head = null;   /* Heads of the hash chains or NIL. */\n\n\t  this.ins_h = 0;       /* hash index of string to be inserted */\n\t  this.hash_size = 0;   /* number of elements in hash table */\n\t  this.hash_bits = 0;   /* log2(hash_size) */\n\t  this.hash_mask = 0;   /* hash_size-1 */\n\n\t  this.hash_shift = 0;\n\t  /* Number of bits by which ins_h must be shifted at each input\n\t   * step. It must be such that after MIN_MATCH steps, the oldest\n\t   * byte no longer takes part in the hash key, that is:\n\t   *   hash_shift * MIN_MATCH >= hash_bits\n\t   */\n\n\t  this.block_start = 0;\n\t  /* Window position at the beginning of the current output block. Gets\n\t   * negative when the window is moved backwards.\n\t   */\n\n\t  this.match_length = 0;      /* length of best match */\n\t  this.prev_match = 0;        /* previous match */\n\t  this.match_available = 0;   /* set if previous match exists */\n\t  this.strstart = 0;          /* start of string to insert */\n\t  this.match_start = 0;       /* start of matching string */\n\t  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n\t  this.prev_length = 0;\n\t  /* Length of the best match at previous step. Matches not greater than this\n\t   * are discarded. This is used in the lazy match evaluation.\n\t   */\n\n\t  this.max_chain_length = 0;\n\t  /* To speed up deflation, hash chains are never searched beyond this\n\t   * length.  A higher limit improves compression ratio but degrades the\n\t   * speed.\n\t   */\n\n\t  this.max_lazy_match = 0;\n\t  /* Attempt to find a better match only when the current match is strictly\n\t   * smaller than this value. This mechanism is used only for compression\n\t   * levels >= 4.\n\t   */\n\t  // That's alias to max_lazy_match, don't use directly\n\t  //this.max_insert_length = 0;\n\t  /* Insert new strings in the hash table only if the match length is not\n\t   * greater than this length. This saves time but degrades compression.\n\t   * max_insert_length is used only for compression levels <= 3.\n\t   */\n\n\t  this.level = 0;     /* compression level (1..9) */\n\t  this.strategy = 0;  /* favor or force Huffman coding*/\n\n\t  this.good_match = 0;\n\t  /* Use a faster search when the previous match is longer than this */\n\n\t  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n\t              /* used by trees.c: */\n\n\t  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n\t  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n\t  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n\t  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n\t  // Use flat array of DOUBLE size, with interleaved fata,\n\t  // because JS does not support effective\n\t  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n\t  this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);\n\t  this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);\n\t  zero(this.dyn_ltree);\n\t  zero(this.dyn_dtree);\n\t  zero(this.bl_tree);\n\n\t  this.l_desc   = null;         /* desc. for literal tree */\n\t  this.d_desc   = null;         /* desc. for distance tree */\n\t  this.bl_desc  = null;         /* desc. for bit length tree */\n\n\t  //ush bl_count[MAX_BITS+1];\n\t  this.bl_count = new utils.Buf16(MAX_BITS+1);\n\t  /* number of codes at each bit length for an optimal tree */\n\n\t  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n\t  this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */\n\t  zero(this.heap);\n\n\t  this.heap_len = 0;               /* number of elements in the heap */\n\t  this.heap_max = 0;               /* element of largest frequency */\n\t  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n\t   * The same heap array is used to build all trees.\n\t   */\n\n\t  this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];\n\t  zero(this.depth);\n\t  /* Depth of each subtree used as tie breaker for trees of equal frequency\n\t   */\n\n\t  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n\t  this.lit_bufsize = 0;\n\t  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n\t   * limiting lit_bufsize to 64K:\n\t   *   - frequencies can be kept in 16 bit counters\n\t   *   - if compression is not successful for the first block, all input\n\t   *     data is still in the window so we can still emit a stored block even\n\t   *     when input comes from standard input.  (This can also be done for\n\t   *     all blocks if lit_bufsize is not greater than 32K.)\n\t   *   - if compression is not successful for a file smaller than 64K, we can\n\t   *     even emit a stored file instead of a stored block (saving 5 bytes).\n\t   *     This is applicable only for zip (not gzip or zlib).\n\t   *   - creating new Huffman trees less frequently may not provide fast\n\t   *     adaptation to changes in the input data statistics. (Take for\n\t   *     example a binary file with poorly compressible code followed by\n\t   *     a highly compressible string table.) Smaller buffer sizes give\n\t   *     fast adaptation but have of course the overhead of transmitting\n\t   *     trees more frequently.\n\t   *   - I can't count above 4\n\t   */\n\n\t  this.last_lit = 0;      /* running index in l_buf */\n\n\t  this.d_buf = 0;\n\t  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n\t   * the same number of elements. To use different lengths, an extra flag\n\t   * array would be necessary.\n\t   */\n\n\t  this.opt_len = 0;       /* bit length of current block with optimal trees */\n\t  this.static_len = 0;    /* bit length of current block with static trees */\n\t  this.matches = 0;       /* number of string matches in current block */\n\t  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n\t  this.bi_buf = 0;\n\t  /* Output buffer. bits are inserted starting at the bottom (least\n\t   * significant bits).\n\t   */\n\t  this.bi_valid = 0;\n\t  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n\t   * are always zero.\n\t   */\n\n\t  // Used for window memory init. We safely ignore it for JS. That makes\n\t  // sense only for pointers and memory check tools.\n\t  //this.high_water = 0;\n\t  /* High water mark offset in window for initialized bytes -- bytes above\n\t   * this are set to zero in order to avoid memory check warnings when\n\t   * longest match routines access bytes past the input.  This is then\n\t   * updated to the new high water mark.\n\t   */\n\t}\n\n\n\tfunction deflateResetKeep(strm) {\n\t  var s;\n\n\t  if (!strm || !strm.state) {\n\t    return err(strm, Z_STREAM_ERROR);\n\t  }\n\n\t  strm.total_in = strm.total_out = 0;\n\t  strm.data_type = Z_UNKNOWN;\n\n\t  s = strm.state;\n\t  s.pending = 0;\n\t  s.pending_out = 0;\n\n\t  if (s.wrap < 0) {\n\t    s.wrap = -s.wrap;\n\t    /* was made negative by deflate(..., Z_FINISH); */\n\t  }\n\t  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n\t  strm.adler = (s.wrap === 2) ?\n\t    0  // crc32(0, Z_NULL, 0)\n\t  :\n\t    1; // adler32(0, Z_NULL, 0)\n\t  s.last_flush = Z_NO_FLUSH;\n\t  trees._tr_init(s);\n\t  return Z_OK;\n\t}\n\n\n\tfunction deflateReset(strm) {\n\t  var ret = deflateResetKeep(strm);\n\t  if (ret === Z_OK) {\n\t    lm_init(strm.state);\n\t  }\n\t  return ret;\n\t}\n\n\n\tfunction deflateSetHeader(strm, head) {\n\t  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n\t  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n\t  strm.state.gzhead = head;\n\t  return Z_OK;\n\t}\n\n\n\tfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n\t  if (!strm) { // === Z_NULL\n\t    return Z_STREAM_ERROR;\n\t  }\n\t  var wrap = 1;\n\n\t  if (level === Z_DEFAULT_COMPRESSION) {\n\t    level = 6;\n\t  }\n\n\t  if (windowBits < 0) { /* suppress zlib wrapper */\n\t    wrap = 0;\n\t    windowBits = -windowBits;\n\t  }\n\n\t  else if (windowBits > 15) {\n\t    wrap = 2;           /* write gzip wrapper instead */\n\t    windowBits -= 16;\n\t  }\n\n\n\t  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n\t    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n\t    strategy < 0 || strategy > Z_FIXED) {\n\t    return err(strm, Z_STREAM_ERROR);\n\t  }\n\n\n\t  if (windowBits === 8) {\n\t    windowBits = 9;\n\t  }\n\t  /* until 256-byte window bug fixed */\n\n\t  var s = new DeflateState();\n\n\t  strm.state = s;\n\t  s.strm = strm;\n\n\t  s.wrap = wrap;\n\t  s.gzhead = null;\n\t  s.w_bits = windowBits;\n\t  s.w_size = 1 << s.w_bits;\n\t  s.w_mask = s.w_size - 1;\n\n\t  s.hash_bits = memLevel + 7;\n\t  s.hash_size = 1 << s.hash_bits;\n\t  s.hash_mask = s.hash_size - 1;\n\t  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n\t  s.window = new utils.Buf8(s.w_size * 2);\n\t  s.head = new utils.Buf16(s.hash_size);\n\t  s.prev = new utils.Buf16(s.w_size);\n\n\t  // Don't need mem init magic for JS.\n\t  //s.high_water = 0;  /* nothing written to s->window yet */\n\n\t  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n\t  s.pending_buf_size = s.lit_bufsize * 4;\n\t  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n\t  s.d_buf = s.lit_bufsize >> 1;\n\t  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n\t  s.level = level;\n\t  s.strategy = strategy;\n\t  s.method = method;\n\n\t  return deflateReset(strm);\n\t}\n\n\tfunction deflateInit(strm, level) {\n\t  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n\t}\n\n\n\tfunction deflate(strm, flush) {\n\t  var old_flush, s;\n\t  var beg, val; // for gzip header write only\n\n\t  if (!strm || !strm.state ||\n\t    flush > Z_BLOCK || flush < 0) {\n\t    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n\t  }\n\n\t  s = strm.state;\n\n\t  if (!strm.output ||\n\t      (!strm.input && strm.avail_in !== 0) ||\n\t      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n\t    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n\t  }\n\n\t  s.strm = strm; /* just in case */\n\t  old_flush = s.last_flush;\n\t  s.last_flush = flush;\n\n\t  /* Write the header */\n\t  if (s.status === INIT_STATE) {\n\n\t    if (s.wrap === 2) { // GZIP header\n\t      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n\t      put_byte(s, 31);\n\t      put_byte(s, 139);\n\t      put_byte(s, 8);\n\t      if (!s.gzhead) { // s->gzhead == Z_NULL\n\t        put_byte(s, 0);\n\t        put_byte(s, 0);\n\t        put_byte(s, 0);\n\t        put_byte(s, 0);\n\t        put_byte(s, 0);\n\t        put_byte(s, s.level === 9 ? 2 :\n\t                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n\t                     4 : 0));\n\t        put_byte(s, OS_CODE);\n\t        s.status = BUSY_STATE;\n\t      }\n\t      else {\n\t        put_byte(s, (s.gzhead.text ? 1 : 0) +\n\t                    (s.gzhead.hcrc ? 2 : 0) +\n\t                    (!s.gzhead.extra ? 0 : 4) +\n\t                    (!s.gzhead.name ? 0 : 8) +\n\t                    (!s.gzhead.comment ? 0 : 16)\n\t                );\n\t        put_byte(s, s.gzhead.time & 0xff);\n\t        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n\t        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n\t        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n\t        put_byte(s, s.level === 9 ? 2 :\n\t                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n\t                     4 : 0));\n\t        put_byte(s, s.gzhead.os & 0xff);\n\t        if (s.gzhead.extra && s.gzhead.extra.length) {\n\t          put_byte(s, s.gzhead.extra.length & 0xff);\n\t          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n\t        }\n\t        if (s.gzhead.hcrc) {\n\t          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n\t        }\n\t        s.gzindex = 0;\n\t        s.status = EXTRA_STATE;\n\t      }\n\t    }\n\t    else // DEFLATE header\n\t    {\n\t      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n\t      var level_flags = -1;\n\n\t      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n\t        level_flags = 0;\n\t      } else if (s.level < 6) {\n\t        level_flags = 1;\n\t      } else if (s.level === 6) {\n\t        level_flags = 2;\n\t      } else {\n\t        level_flags = 3;\n\t      }\n\t      header |= (level_flags << 6);\n\t      if (s.strstart !== 0) { header |= PRESET_DICT; }\n\t      header += 31 - (header % 31);\n\n\t      s.status = BUSY_STATE;\n\t      putShortMSB(s, header);\n\n\t      /* Save the adler32 of the preset dictionary: */\n\t      if (s.strstart !== 0) {\n\t        putShortMSB(s, strm.adler >>> 16);\n\t        putShortMSB(s, strm.adler & 0xffff);\n\t      }\n\t      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n\t    }\n\t  }\n\n\t//#ifdef GZIP\n\t  if (s.status === EXTRA_STATE) {\n\t    if (s.gzhead.extra/* != Z_NULL*/) {\n\t      beg = s.pending;  /* start of bytes to update crc */\n\n\t      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n\t        if (s.pending === s.pending_buf_size) {\n\t          if (s.gzhead.hcrc && s.pending > beg) {\n\t            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t          }\n\t          flush_pending(strm);\n\t          beg = s.pending;\n\t          if (s.pending === s.pending_buf_size) {\n\t            break;\n\t          }\n\t        }\n\t        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n\t        s.gzindex++;\n\t      }\n\t      if (s.gzhead.hcrc && s.pending > beg) {\n\t        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t      }\n\t      if (s.gzindex === s.gzhead.extra.length) {\n\t        s.gzindex = 0;\n\t        s.status = NAME_STATE;\n\t      }\n\t    }\n\t    else {\n\t      s.status = NAME_STATE;\n\t    }\n\t  }\n\t  if (s.status === NAME_STATE) {\n\t    if (s.gzhead.name/* != Z_NULL*/) {\n\t      beg = s.pending;  /* start of bytes to update crc */\n\t      //int val;\n\n\t      do {\n\t        if (s.pending === s.pending_buf_size) {\n\t          if (s.gzhead.hcrc && s.pending > beg) {\n\t            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t          }\n\t          flush_pending(strm);\n\t          beg = s.pending;\n\t          if (s.pending === s.pending_buf_size) {\n\t            val = 1;\n\t            break;\n\t          }\n\t        }\n\t        // JS specific: little magic to add zero terminator to end of string\n\t        if (s.gzindex < s.gzhead.name.length) {\n\t          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n\t        } else {\n\t          val = 0;\n\t        }\n\t        put_byte(s, val);\n\t      } while (val !== 0);\n\n\t      if (s.gzhead.hcrc && s.pending > beg){\n\t        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t      }\n\t      if (val === 0) {\n\t        s.gzindex = 0;\n\t        s.status = COMMENT_STATE;\n\t      }\n\t    }\n\t    else {\n\t      s.status = COMMENT_STATE;\n\t    }\n\t  }\n\t  if (s.status === COMMENT_STATE) {\n\t    if (s.gzhead.comment/* != Z_NULL*/) {\n\t      beg = s.pending;  /* start of bytes to update crc */\n\t      //int val;\n\n\t      do {\n\t        if (s.pending === s.pending_buf_size) {\n\t          if (s.gzhead.hcrc && s.pending > beg) {\n\t            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t          }\n\t          flush_pending(strm);\n\t          beg = s.pending;\n\t          if (s.pending === s.pending_buf_size) {\n\t            val = 1;\n\t            break;\n\t          }\n\t        }\n\t        // JS specific: little magic to add zero terminator to end of string\n\t        if (s.gzindex < s.gzhead.comment.length) {\n\t          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n\t        } else {\n\t          val = 0;\n\t        }\n\t        put_byte(s, val);\n\t      } while (val !== 0);\n\n\t      if (s.gzhead.hcrc && s.pending > beg) {\n\t        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n\t      }\n\t      if (val === 0) {\n\t        s.status = HCRC_STATE;\n\t      }\n\t    }\n\t    else {\n\t      s.status = HCRC_STATE;\n\t    }\n\t  }\n\t  if (s.status === HCRC_STATE) {\n\t    if (s.gzhead.hcrc) {\n\t      if (s.pending + 2 > s.pending_buf_size) {\n\t        flush_pending(strm);\n\t      }\n\t      if (s.pending + 2 <= s.pending_buf_size) {\n\t        put_byte(s, strm.adler & 0xff);\n\t        put_byte(s, (strm.adler >> 8) & 0xff);\n\t        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n\t        s.status = BUSY_STATE;\n\t      }\n\t    }\n\t    else {\n\t      s.status = BUSY_STATE;\n\t    }\n\t  }\n\t//#endif\n\n\t  /* Flush as much pending output as possible */\n\t  if (s.pending !== 0) {\n\t    flush_pending(strm);\n\t    if (strm.avail_out === 0) {\n\t      /* Since avail_out is 0, deflate will be called again with\n\t       * more output space, but possibly with both pending and\n\t       * avail_in equal to zero. There won't be anything to do,\n\t       * but this is not an error situation so make sure we\n\t       * return OK instead of BUF_ERROR at next call of deflate:\n\t       */\n\t      s.last_flush = -1;\n\t      return Z_OK;\n\t    }\n\n\t    /* Make sure there is something to do and avoid duplicate consecutive\n\t     * flushes. For repeated and useless calls with Z_FINISH, we keep\n\t     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n\t     */\n\t  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n\t    flush !== Z_FINISH) {\n\t    return err(strm, Z_BUF_ERROR);\n\t  }\n\n\t  /* User must not provide more input after the first FINISH: */\n\t  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n\t    return err(strm, Z_BUF_ERROR);\n\t  }\n\n\t  /* Start a new block or continue the current one.\n\t   */\n\t  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n\t    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n\t    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n\t      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n\t        configuration_table[s.level].func(s, flush));\n\n\t    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n\t      s.status = FINISH_STATE;\n\t    }\n\t    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n\t      if (strm.avail_out === 0) {\n\t        s.last_flush = -1;\n\t        /* avoid BUF_ERROR next call, see above */\n\t      }\n\t      return Z_OK;\n\t      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n\t       * of deflate should use the same flush parameter to make sure\n\t       * that the flush is complete. So we don't have to output an\n\t       * empty block here, this will be done at next call. This also\n\t       * ensures that for a very small output buffer, we emit at most\n\t       * one empty block.\n\t       */\n\t    }\n\t    if (bstate === BS_BLOCK_DONE) {\n\t      if (flush === Z_PARTIAL_FLUSH) {\n\t        trees._tr_align(s);\n\t      }\n\t      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n\t        trees._tr_stored_block(s, 0, 0, false);\n\t        /* For a full flush, this empty block will be recognized\n\t         * as a special marker by inflate_sync().\n\t         */\n\t        if (flush === Z_FULL_FLUSH) {\n\t          /*** CLEAR_HASH(s); ***/             /* forget history */\n\t          zero(s.head); // Fill with NIL (= 0);\n\n\t          if (s.lookahead === 0) {\n\t            s.strstart = 0;\n\t            s.block_start = 0;\n\t            s.insert = 0;\n\t          }\n\t        }\n\t      }\n\t      flush_pending(strm);\n\t      if (strm.avail_out === 0) {\n\t        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n\t        return Z_OK;\n\t      }\n\t    }\n\t  }\n\t  //Assert(strm->avail_out > 0, \"bug2\");\n\t  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n\t  if (flush !== Z_FINISH) { return Z_OK; }\n\t  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n\t  /* Write the trailer */\n\t  if (s.wrap === 2) {\n\t    put_byte(s, strm.adler & 0xff);\n\t    put_byte(s, (strm.adler >> 8) & 0xff);\n\t    put_byte(s, (strm.adler >> 16) & 0xff);\n\t    put_byte(s, (strm.adler >> 24) & 0xff);\n\t    put_byte(s, strm.total_in & 0xff);\n\t    put_byte(s, (strm.total_in >> 8) & 0xff);\n\t    put_byte(s, (strm.total_in >> 16) & 0xff);\n\t    put_byte(s, (strm.total_in >> 24) & 0xff);\n\t  }\n\t  else\n\t  {\n\t    putShortMSB(s, strm.adler >>> 16);\n\t    putShortMSB(s, strm.adler & 0xffff);\n\t  }\n\n\t  flush_pending(strm);\n\t  /* If avail_out is zero, the application will call deflate again\n\t   * to flush the rest.\n\t   */\n\t  if (s.wrap > 0) { s.wrap = -s.wrap; }\n\t  /* write the trailer only once! */\n\t  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n\t}\n\n\tfunction deflateEnd(strm) {\n\t  var status;\n\n\t  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n\t    return Z_STREAM_ERROR;\n\t  }\n\n\t  status = strm.state.status;\n\t  if (status !== INIT_STATE &&\n\t    status !== EXTRA_STATE &&\n\t    status !== NAME_STATE &&\n\t    status !== COMMENT_STATE &&\n\t    status !== HCRC_STATE &&\n\t    status !== BUSY_STATE &&\n\t    status !== FINISH_STATE\n\t  ) {\n\t    return err(strm, Z_STREAM_ERROR);\n\t  }\n\n\t  strm.state = null;\n\n\t  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n\t}\n\n\t/* =========================================================================\n\t * Copy the source state to the destination state\n\t */\n\t//function deflateCopy(dest, source) {\n\t//\n\t//}\n\n\texports.deflateInit = deflateInit;\n\texports.deflateInit2 = deflateInit2;\n\texports.deflateReset = deflateReset;\n\texports.deflateResetKeep = deflateResetKeep;\n\texports.deflateSetHeader = deflateSetHeader;\n\texports.deflate = deflate;\n\texports.deflateEnd = deflateEnd;\n\texports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n\t/* Not implemented\n\texports.deflateBound = deflateBound;\n\texports.deflateCopy = deflateCopy;\n\texports.deflateSetDictionary = deflateSetDictionary;\n\texports.deflateParams = deflateParams;\n\texports.deflatePending = deflatePending;\n\texports.deflatePrime = deflatePrime;\n\texports.deflateTune = deflateTune;\n\t*/\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\n\tvar utils = __webpack_require__(98);\n\tvar adler32 = __webpack_require__(96);\n\tvar crc32   = __webpack_require__(97);\n\tvar inflate_fast = __webpack_require__(102);\n\tvar inflate_table = __webpack_require__(103);\n\n\tvar CODES = 0;\n\tvar LENS = 1;\n\tvar DISTS = 2;\n\n\t/* Public constants ==========================================================*/\n\t/* ===========================================================================*/\n\n\n\t/* Allowed flush values; see deflate() and inflate() below for details */\n\t//var Z_NO_FLUSH      = 0;\n\t//var Z_PARTIAL_FLUSH = 1;\n\t//var Z_SYNC_FLUSH    = 2;\n\t//var Z_FULL_FLUSH    = 3;\n\tvar Z_FINISH        = 4;\n\tvar Z_BLOCK         = 5;\n\tvar Z_TREES         = 6;\n\n\n\t/* Return codes for the compression/decompression functions. Negative values\n\t * are errors, positive values are used for special but normal events.\n\t */\n\tvar Z_OK            = 0;\n\tvar Z_STREAM_END    = 1;\n\tvar Z_NEED_DICT     = 2;\n\t//var Z_ERRNO         = -1;\n\tvar Z_STREAM_ERROR  = -2;\n\tvar Z_DATA_ERROR    = -3;\n\tvar Z_MEM_ERROR     = -4;\n\tvar Z_BUF_ERROR     = -5;\n\t//var Z_VERSION_ERROR = -6;\n\n\t/* The deflate compression method */\n\tvar Z_DEFLATED  = 8;\n\n\n\t/* STATES ====================================================================*/\n\t/* ===========================================================================*/\n\n\n\tvar    HEAD = 1;       /* i: waiting for magic header */\n\tvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\n\tvar    TIME = 3;       /* i: waiting for modification time (gzip) */\n\tvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\n\tvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\n\tvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\n\tvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\n\tvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\n\tvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\n\tvar    DICTID = 10;    /* i: waiting for dictionary check value */\n\tvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\n\tvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\tvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\n\tvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\n\tvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\n\tvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\n\tvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\n\tvar        LENLENS = 18;   /* i: waiting for code length code lengths */\n\tvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\n\tvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\n\tvar            LEN = 21;       /* i: waiting for length/lit/eob code */\n\tvar            LENEXT = 22;    /* i: waiting for length extra bits */\n\tvar            DIST = 23;      /* i: waiting for distance code */\n\tvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\n\tvar            MATCH = 25;     /* o: waiting for output space to copy string */\n\tvar            LIT = 26;       /* o: waiting for output space to write literal */\n\tvar    CHECK = 27;     /* i: waiting for 32-bit check value */\n\tvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\n\tvar    DONE = 29;      /* finished check, done -- remain here until reset */\n\tvar    BAD = 30;       /* got a data error -- remain here until reset */\n\tvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\n\tvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n\t/* ===========================================================================*/\n\n\n\n\tvar ENOUGH_LENS = 852;\n\tvar ENOUGH_DISTS = 592;\n\t//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\n\tvar MAX_WBITS = 15;\n\t/* 32K LZ77 window */\n\tvar DEF_WBITS = MAX_WBITS;\n\n\n\tfunction ZSWAP32(q) {\n\t  return  (((q >>> 24) & 0xff) +\n\t          ((q >>> 8) & 0xff00) +\n\t          ((q & 0xff00) << 8) +\n\t          ((q & 0xff) << 24));\n\t}\n\n\n\tfunction InflateState() {\n\t  this.mode = 0;             /* current inflate mode */\n\t  this.last = false;          /* true if processing last block */\n\t  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n\t  this.havedict = false;      /* true if dictionary provided */\n\t  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n\t  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n\t  this.check = 0;             /* protected copy of check value */\n\t  this.total = 0;             /* protected copy of output count */\n\t  // TODO: may be {}\n\t  this.head = null;           /* where to save gzip header information */\n\n\t  /* sliding window */\n\t  this.wbits = 0;             /* log base 2 of requested window size */\n\t  this.wsize = 0;             /* window size or zero if not using window */\n\t  this.whave = 0;             /* valid bytes in the window */\n\t  this.wnext = 0;             /* window write index */\n\t  this.window = null;         /* allocated sliding window, if needed */\n\n\t  /* bit accumulator */\n\t  this.hold = 0;              /* input bit accumulator */\n\t  this.bits = 0;              /* number of bits in \"in\" */\n\n\t  /* for string and stored block copying */\n\t  this.length = 0;            /* literal or length of data to copy */\n\t  this.offset = 0;            /* distance back to copy string from */\n\n\t  /* for table and code decoding */\n\t  this.extra = 0;             /* extra bits needed */\n\n\t  /* fixed and dynamic code tables */\n\t  this.lencode = null;          /* starting table for length/literal codes */\n\t  this.distcode = null;         /* starting table for distance codes */\n\t  this.lenbits = 0;           /* index bits for lencode */\n\t  this.distbits = 0;          /* index bits for distcode */\n\n\t  /* dynamic table building */\n\t  this.ncode = 0;             /* number of code length code lengths */\n\t  this.nlen = 0;              /* number of length code lengths */\n\t  this.ndist = 0;             /* number of distance code lengths */\n\t  this.have = 0;              /* number of code lengths in lens[] */\n\t  this.next = null;              /* next available space in codes[] */\n\n\t  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n\t  this.work = new utils.Buf16(288); /* work area for code table building */\n\n\t  /*\n\t   because we don't have pointers in js, we use lencode and distcode directly\n\t   as buffers so we don't need codes\n\t  */\n\t  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n\t  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n\t  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n\t  this.sane = 0;                   /* if false, allow invalid distance too far */\n\t  this.back = 0;                   /* bits back of last unprocessed length/lit */\n\t  this.was = 0;                    /* initial length of match */\n\t}\n\n\tfunction inflateResetKeep(strm) {\n\t  var state;\n\n\t  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n\t  state = strm.state;\n\t  strm.total_in = strm.total_out = state.total = 0;\n\t  strm.msg = ''; /*Z_NULL*/\n\t  if (state.wrap) {       /* to support ill-conceived Java test suite */\n\t    strm.adler = state.wrap & 1;\n\t  }\n\t  state.mode = HEAD;\n\t  state.last = 0;\n\t  state.havedict = 0;\n\t  state.dmax = 32768;\n\t  state.head = null/*Z_NULL*/;\n\t  state.hold = 0;\n\t  state.bits = 0;\n\t  //state.lencode = state.distcode = state.next = state.codes;\n\t  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n\t  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n\t  state.sane = 1;\n\t  state.back = -1;\n\t  //Tracev((stderr, \"inflate: reset\\n\"));\n\t  return Z_OK;\n\t}\n\n\tfunction inflateReset(strm) {\n\t  var state;\n\n\t  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n\t  state = strm.state;\n\t  state.wsize = 0;\n\t  state.whave = 0;\n\t  state.wnext = 0;\n\t  return inflateResetKeep(strm);\n\n\t}\n\n\tfunction inflateReset2(strm, windowBits) {\n\t  var wrap;\n\t  var state;\n\n\t  /* get the state */\n\t  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n\t  state = strm.state;\n\n\t  /* extract wrap request from windowBits parameter */\n\t  if (windowBits < 0) {\n\t    wrap = 0;\n\t    windowBits = -windowBits;\n\t  }\n\t  else {\n\t    wrap = (windowBits >> 4) + 1;\n\t    if (windowBits < 48) {\n\t      windowBits &= 15;\n\t    }\n\t  }\n\n\t  /* set number of window bits, free window if different */\n\t  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n\t    return Z_STREAM_ERROR;\n\t  }\n\t  if (state.window !== null && state.wbits !== windowBits) {\n\t    state.window = null;\n\t  }\n\n\t  /* update state and reset the rest of it */\n\t  state.wrap = wrap;\n\t  state.wbits = windowBits;\n\t  return inflateReset(strm);\n\t}\n\n\tfunction inflateInit2(strm, windowBits) {\n\t  var ret;\n\t  var state;\n\n\t  if (!strm) { return Z_STREAM_ERROR; }\n\t  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n\t  state = new InflateState();\n\n\t  //if (state === Z_NULL) return Z_MEM_ERROR;\n\t  //Tracev((stderr, \"inflate: allocated\\n\"));\n\t  strm.state = state;\n\t  state.window = null/*Z_NULL*/;\n\t  ret = inflateReset2(strm, windowBits);\n\t  if (ret !== Z_OK) {\n\t    strm.state = null/*Z_NULL*/;\n\t  }\n\t  return ret;\n\t}\n\n\tfunction inflateInit(strm) {\n\t  return inflateInit2(strm, DEF_WBITS);\n\t}\n\n\n\t/*\n\t Return state with length and distance decoding tables and index sizes set to\n\t fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n\t If BUILDFIXED is defined, then instead this routine builds the tables the\n\t first time it's called, and returns those tables the first time and\n\t thereafter.  This reduces the size of the code by about 2K bytes, in\n\t exchange for a little execution time.  However, BUILDFIXED should not be\n\t used for threaded applications, since the rewriting of the tables and virgin\n\t may not be thread-safe.\n\t */\n\tvar virgin = true;\n\n\tvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\tfunction fixedtables(state) {\n\t  /* build fixed huffman tables if first call (may not be thread safe) */\n\t  if (virgin) {\n\t    var sym;\n\n\t    lenfix = new utils.Buf32(512);\n\t    distfix = new utils.Buf32(32);\n\n\t    /* literal/length table */\n\t    sym = 0;\n\t    while (sym < 144) { state.lens[sym++] = 8; }\n\t    while (sym < 256) { state.lens[sym++] = 9; }\n\t    while (sym < 280) { state.lens[sym++] = 7; }\n\t    while (sym < 288) { state.lens[sym++] = 8; }\n\n\t    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});\n\n\t    /* distance table */\n\t    sym = 0;\n\t    while (sym < 32) { state.lens[sym++] = 5; }\n\n\t    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});\n\n\t    /* do this just once */\n\t    virgin = false;\n\t  }\n\n\t  state.lencode = lenfix;\n\t  state.lenbits = 9;\n\t  state.distcode = distfix;\n\t  state.distbits = 5;\n\t}\n\n\n\t/*\n\t Update the window with the last wsize (normally 32K) bytes written before\n\t returning.  If window does not exist yet, create it.  This is only called\n\t when a window is already in use, or when output has been written during this\n\t inflate call, but the end of the deflate stream has not been reached yet.\n\t It is also called to create a window for dictionary data when a dictionary\n\t is loaded.\n\n\t Providing output buffers larger than 32K to inflate() should provide a speed\n\t advantage, since only the last 32K of output is copied to the sliding window\n\t upon return from inflate(), and since all distances after the first 32K of\n\t output will fall in the output data, making match copies simpler and faster.\n\t The advantage may be dependent on the size of the processor's data caches.\n\t */\n\tfunction updatewindow(strm, src, end, copy) {\n\t  var dist;\n\t  var state = strm.state;\n\n\t  /* if it hasn't been done already, allocate space for the window */\n\t  if (state.window === null) {\n\t    state.wsize = 1 << state.wbits;\n\t    state.wnext = 0;\n\t    state.whave = 0;\n\n\t    state.window = new utils.Buf8(state.wsize);\n\t  }\n\n\t  /* copy state->wsize or less output bytes into the circular window */\n\t  if (copy >= state.wsize) {\n\t    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);\n\t    state.wnext = 0;\n\t    state.whave = state.wsize;\n\t  }\n\t  else {\n\t    dist = state.wsize - state.wnext;\n\t    if (dist > copy) {\n\t      dist = copy;\n\t    }\n\t    //zmemcpy(state->window + state->wnext, end - copy, dist);\n\t    utils.arraySet(state.window,src, end - copy, dist, state.wnext);\n\t    copy -= dist;\n\t    if (copy) {\n\t      //zmemcpy(state->window, end - copy, copy);\n\t      utils.arraySet(state.window,src, end - copy, copy, 0);\n\t      state.wnext = copy;\n\t      state.whave = state.wsize;\n\t    }\n\t    else {\n\t      state.wnext += dist;\n\t      if (state.wnext === state.wsize) { state.wnext = 0; }\n\t      if (state.whave < state.wsize) { state.whave += dist; }\n\t    }\n\t  }\n\t  return 0;\n\t}\n\n\tfunction inflate(strm, flush) {\n\t  var state;\n\t  var input, output;          // input/output buffers\n\t  var next;                   /* next input INDEX */\n\t  var put;                    /* next output INDEX */\n\t  var have, left;             /* available input and output */\n\t  var hold;                   /* bit buffer */\n\t  var bits;                   /* bits in bit buffer */\n\t  var _in, _out;              /* save starting available input and output */\n\t  var copy;                   /* number of stored or match bytes to copy */\n\t  var from;                   /* where to copy match bytes from */\n\t  var from_source;\n\t  var here = 0;               /* current decoding table entry */\n\t  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n\t  //var last;                   /* parent table entry */\n\t  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n\t  var len;                    /* length to copy for repeats, bits to drop */\n\t  var ret;                    /* return code */\n\t  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n\t  var opts;\n\n\t  var n; // temporary var for NEED_BITS\n\n\t  var order = /* permutation of code lengths */\n\t    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\n\t  if (!strm || !strm.state || !strm.output ||\n\t      (!strm.input && strm.avail_in !== 0)) {\n\t    return Z_STREAM_ERROR;\n\t  }\n\n\t  state = strm.state;\n\t  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n\t  //--- LOAD() ---\n\t  put = strm.next_out;\n\t  output = strm.output;\n\t  left = strm.avail_out;\n\t  next = strm.next_in;\n\t  input = strm.input;\n\t  have = strm.avail_in;\n\t  hold = state.hold;\n\t  bits = state.bits;\n\t  //---\n\n\t  _in = have;\n\t  _out = left;\n\t  ret = Z_OK;\n\n\t  inf_leave: // goto emulation\n\t  for (;;) {\n\t    switch (state.mode) {\n\t    case HEAD:\n\t      if (state.wrap === 0) {\n\t        state.mode = TYPEDO;\n\t        break;\n\t      }\n\t      //=== NEEDBITS(16);\n\t      while (bits < 16) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n\t        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n\t        //=== CRC2(state.check, hold);\n\t        hbuf[0] = hold & 0xff;\n\t        hbuf[1] = (hold >>> 8) & 0xff;\n\t        state.check = crc32(state.check, hbuf, 2, 0);\n\t        //===//\n\n\t        //=== INITBITS();\n\t        hold = 0;\n\t        bits = 0;\n\t        //===//\n\t        state.mode = FLAGS;\n\t        break;\n\t      }\n\t      state.flags = 0;           /* expect zlib header */\n\t      if (state.head) {\n\t        state.head.done = false;\n\t      }\n\t      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n\t        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n\t        strm.msg = 'incorrect header check';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n\t        strm.msg = 'unknown compression method';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      //--- DROPBITS(4) ---//\n\t      hold >>>= 4;\n\t      bits -= 4;\n\t      //---//\n\t      len = (hold & 0x0f)/*BITS(4)*/ + 8;\n\t      if (state.wbits === 0) {\n\t        state.wbits = len;\n\t      }\n\t      else if (len > state.wbits) {\n\t        strm.msg = 'invalid window size';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      state.dmax = 1 << len;\n\t      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n\t      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n\t      state.mode = hold & 0x200 ? DICTID : TYPE;\n\t      //=== INITBITS();\n\t      hold = 0;\n\t      bits = 0;\n\t      //===//\n\t      break;\n\t    case FLAGS:\n\t      //=== NEEDBITS(16); */\n\t      while (bits < 16) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      state.flags = hold;\n\t      if ((state.flags & 0xff) !== Z_DEFLATED) {\n\t        strm.msg = 'unknown compression method';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      if (state.flags & 0xe000) {\n\t        strm.msg = 'unknown header flags set';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      if (state.head) {\n\t        state.head.text = ((hold >> 8) & 1);\n\t      }\n\t      if (state.flags & 0x0200) {\n\t        //=== CRC2(state.check, hold);\n\t        hbuf[0] = hold & 0xff;\n\t        hbuf[1] = (hold >>> 8) & 0xff;\n\t        state.check = crc32(state.check, hbuf, 2, 0);\n\t        //===//\n\t      }\n\t      //=== INITBITS();\n\t      hold = 0;\n\t      bits = 0;\n\t      //===//\n\t      state.mode = TIME;\n\t      /* falls through */\n\t    case TIME:\n\t      //=== NEEDBITS(32); */\n\t      while (bits < 32) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      if (state.head) {\n\t        state.head.time = hold;\n\t      }\n\t      if (state.flags & 0x0200) {\n\t        //=== CRC4(state.check, hold)\n\t        hbuf[0] = hold & 0xff;\n\t        hbuf[1] = (hold >>> 8) & 0xff;\n\t        hbuf[2] = (hold >>> 16) & 0xff;\n\t        hbuf[3] = (hold >>> 24) & 0xff;\n\t        state.check = crc32(state.check, hbuf, 4, 0);\n\t        //===\n\t      }\n\t      //=== INITBITS();\n\t      hold = 0;\n\t      bits = 0;\n\t      //===//\n\t      state.mode = OS;\n\t      /* falls through */\n\t    case OS:\n\t      //=== NEEDBITS(16); */\n\t      while (bits < 16) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      if (state.head) {\n\t        state.head.xflags = (hold & 0xff);\n\t        state.head.os = (hold >> 8);\n\t      }\n\t      if (state.flags & 0x0200) {\n\t        //=== CRC2(state.check, hold);\n\t        hbuf[0] = hold & 0xff;\n\t        hbuf[1] = (hold >>> 8) & 0xff;\n\t        state.check = crc32(state.check, hbuf, 2, 0);\n\t        //===//\n\t      }\n\t      //=== INITBITS();\n\t      hold = 0;\n\t      bits = 0;\n\t      //===//\n\t      state.mode = EXLEN;\n\t      /* falls through */\n\t    case EXLEN:\n\t      if (state.flags & 0x0400) {\n\t        //=== NEEDBITS(16); */\n\t        while (bits < 16) {\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t        }\n\t        //===//\n\t        state.length = hold;\n\t        if (state.head) {\n\t          state.head.extra_len = hold;\n\t        }\n\t        if (state.flags & 0x0200) {\n\t          //=== CRC2(state.check, hold);\n\t          hbuf[0] = hold & 0xff;\n\t          hbuf[1] = (hold >>> 8) & 0xff;\n\t          state.check = crc32(state.check, hbuf, 2, 0);\n\t          //===//\n\t        }\n\t        //=== INITBITS();\n\t        hold = 0;\n\t        bits = 0;\n\t        //===//\n\t      }\n\t      else if (state.head) {\n\t        state.head.extra = null/*Z_NULL*/;\n\t      }\n\t      state.mode = EXTRA;\n\t      /* falls through */\n\t    case EXTRA:\n\t      if (state.flags & 0x0400) {\n\t        copy = state.length;\n\t        if (copy > have) { copy = have; }\n\t        if (copy) {\n\t          if (state.head) {\n\t            len = state.head.extra_len - state.length;\n\t            if (!state.head.extra) {\n\t              // Use untyped array for more conveniend processing later\n\t              state.head.extra = new Array(state.head.extra_len);\n\t            }\n\t            utils.arraySet(\n\t              state.head.extra,\n\t              input,\n\t              next,\n\t              // extra field is limited to 65536 bytes\n\t              // - no need for additional size check\n\t              copy,\n\t              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n\t              len\n\t            );\n\t            //zmemcpy(state.head.extra + len, next,\n\t            //        len + copy > state.head.extra_max ?\n\t            //        state.head.extra_max - len : copy);\n\t          }\n\t          if (state.flags & 0x0200) {\n\t            state.check = crc32(state.check, input, copy, next);\n\t          }\n\t          have -= copy;\n\t          next += copy;\n\t          state.length -= copy;\n\t        }\n\t        if (state.length) { break inf_leave; }\n\t      }\n\t      state.length = 0;\n\t      state.mode = NAME;\n\t      /* falls through */\n\t    case NAME:\n\t      if (state.flags & 0x0800) {\n\t        if (have === 0) { break inf_leave; }\n\t        copy = 0;\n\t        do {\n\t          // TODO: 2 or 1 bytes?\n\t          len = input[next + copy++];\n\t          /* use constant limit because in js we should not preallocate memory */\n\t          if (state.head && len &&\n\t              (state.length < 65536 /*state.head.name_max*/)) {\n\t            state.head.name += String.fromCharCode(len);\n\t          }\n\t        } while (len && copy < have);\n\n\t        if (state.flags & 0x0200) {\n\t          state.check = crc32(state.check, input, copy, next);\n\t        }\n\t        have -= copy;\n\t        next += copy;\n\t        if (len) { break inf_leave; }\n\t      }\n\t      else if (state.head) {\n\t        state.head.name = null;\n\t      }\n\t      state.length = 0;\n\t      state.mode = COMMENT;\n\t      /* falls through */\n\t    case COMMENT:\n\t      if (state.flags & 0x1000) {\n\t        if (have === 0) { break inf_leave; }\n\t        copy = 0;\n\t        do {\n\t          len = input[next + copy++];\n\t          /* use constant limit because in js we should not preallocate memory */\n\t          if (state.head && len &&\n\t              (state.length < 65536 /*state.head.comm_max*/)) {\n\t            state.head.comment += String.fromCharCode(len);\n\t          }\n\t        } while (len && copy < have);\n\t        if (state.flags & 0x0200) {\n\t          state.check = crc32(state.check, input, copy, next);\n\t        }\n\t        have -= copy;\n\t        next += copy;\n\t        if (len) { break inf_leave; }\n\t      }\n\t      else if (state.head) {\n\t        state.head.comment = null;\n\t      }\n\t      state.mode = HCRC;\n\t      /* falls through */\n\t    case HCRC:\n\t      if (state.flags & 0x0200) {\n\t        //=== NEEDBITS(16); */\n\t        while (bits < 16) {\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t        }\n\t        //===//\n\t        if (hold !== (state.check & 0xffff)) {\n\t          strm.msg = 'header crc mismatch';\n\t          state.mode = BAD;\n\t          break;\n\t        }\n\t        //=== INITBITS();\n\t        hold = 0;\n\t        bits = 0;\n\t        //===//\n\t      }\n\t      if (state.head) {\n\t        state.head.hcrc = ((state.flags >> 9) & 1);\n\t        state.head.done = true;\n\t      }\n\t      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;\n\t      state.mode = TYPE;\n\t      break;\n\t    case DICTID:\n\t      //=== NEEDBITS(32); */\n\t      while (bits < 32) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      strm.adler = state.check = ZSWAP32(hold);\n\t      //=== INITBITS();\n\t      hold = 0;\n\t      bits = 0;\n\t      //===//\n\t      state.mode = DICT;\n\t      /* falls through */\n\t    case DICT:\n\t      if (state.havedict === 0) {\n\t        //--- RESTORE() ---\n\t        strm.next_out = put;\n\t        strm.avail_out = left;\n\t        strm.next_in = next;\n\t        strm.avail_in = have;\n\t        state.hold = hold;\n\t        state.bits = bits;\n\t        //---\n\t        return Z_NEED_DICT;\n\t      }\n\t      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n\t      state.mode = TYPE;\n\t      /* falls through */\n\t    case TYPE:\n\t      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n\t      /* falls through */\n\t    case TYPEDO:\n\t      if (state.last) {\n\t        //--- BYTEBITS() ---//\n\t        hold >>>= bits & 7;\n\t        bits -= bits & 7;\n\t        //---//\n\t        state.mode = CHECK;\n\t        break;\n\t      }\n\t      //=== NEEDBITS(3); */\n\t      while (bits < 3) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      state.last = (hold & 0x01)/*BITS(1)*/;\n\t      //--- DROPBITS(1) ---//\n\t      hold >>>= 1;\n\t      bits -= 1;\n\t      //---//\n\n\t      switch ((hold & 0x03)/*BITS(2)*/) {\n\t      case 0:                             /* stored block */\n\t        //Tracev((stderr, \"inflate:     stored block%s\\n\",\n\t        //        state.last ? \" (last)\" : \"\"));\n\t        state.mode = STORED;\n\t        break;\n\t      case 1:                             /* fixed block */\n\t        fixedtables(state);\n\t        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n\t        //        state.last ? \" (last)\" : \"\"));\n\t        state.mode = LEN_;             /* decode codes */\n\t        if (flush === Z_TREES) {\n\t          //--- DROPBITS(2) ---//\n\t          hold >>>= 2;\n\t          bits -= 2;\n\t          //---//\n\t          break inf_leave;\n\t        }\n\t        break;\n\t      case 2:                             /* dynamic block */\n\t        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n\t        //        state.last ? \" (last)\" : \"\"));\n\t        state.mode = TABLE;\n\t        break;\n\t      case 3:\n\t        strm.msg = 'invalid block type';\n\t        state.mode = BAD;\n\t      }\n\t      //--- DROPBITS(2) ---//\n\t      hold >>>= 2;\n\t      bits -= 2;\n\t      //---//\n\t      break;\n\t    case STORED:\n\t      //--- BYTEBITS() ---// /* go to byte boundary */\n\t      hold >>>= bits & 7;\n\t      bits -= bits & 7;\n\t      //---//\n\t      //=== NEEDBITS(32); */\n\t      while (bits < 32) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n\t        strm.msg = 'invalid stored block lengths';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      state.length = hold & 0xffff;\n\t      //Tracev((stderr, \"inflate:       stored length %u\\n\",\n\t      //        state.length));\n\t      //=== INITBITS();\n\t      hold = 0;\n\t      bits = 0;\n\t      //===//\n\t      state.mode = COPY_;\n\t      if (flush === Z_TREES) { break inf_leave; }\n\t      /* falls through */\n\t    case COPY_:\n\t      state.mode = COPY;\n\t      /* falls through */\n\t    case COPY:\n\t      copy = state.length;\n\t      if (copy) {\n\t        if (copy > have) { copy = have; }\n\t        if (copy > left) { copy = left; }\n\t        if (copy === 0) { break inf_leave; }\n\t        //--- zmemcpy(put, next, copy); ---\n\t        utils.arraySet(output, input, next, copy, put);\n\t        //---//\n\t        have -= copy;\n\t        next += copy;\n\t        left -= copy;\n\t        put += copy;\n\t        state.length -= copy;\n\t        break;\n\t      }\n\t      //Tracev((stderr, \"inflate:       stored end\\n\"));\n\t      state.mode = TYPE;\n\t      break;\n\t    case TABLE:\n\t      //=== NEEDBITS(14); */\n\t      while (bits < 14) {\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t      }\n\t      //===//\n\t      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n\t      //--- DROPBITS(5) ---//\n\t      hold >>>= 5;\n\t      bits -= 5;\n\t      //---//\n\t      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n\t      //--- DROPBITS(5) ---//\n\t      hold >>>= 5;\n\t      bits -= 5;\n\t      //---//\n\t      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n\t      //--- DROPBITS(4) ---//\n\t      hold >>>= 4;\n\t      bits -= 4;\n\t      //---//\n\t//#ifndef PKZIP_BUG_WORKAROUND\n\t      if (state.nlen > 286 || state.ndist > 30) {\n\t        strm.msg = 'too many length or distance symbols';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t//#endif\n\t      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n\t      state.have = 0;\n\t      state.mode = LENLENS;\n\t      /* falls through */\n\t    case LENLENS:\n\t      while (state.have < state.ncode) {\n\t        //=== NEEDBITS(3);\n\t        while (bits < 3) {\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t        }\n\t        //===//\n\t        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n\t        //--- DROPBITS(3) ---//\n\t        hold >>>= 3;\n\t        bits -= 3;\n\t        //---//\n\t      }\n\t      while (state.have < 19) {\n\t        state.lens[order[state.have++]] = 0;\n\t      }\n\t      // We have separate tables & no pointers. 2 commented lines below not needed.\n\t      //state.next = state.codes;\n\t      //state.lencode = state.next;\n\t      // Switch to use dynamic table\n\t      state.lencode = state.lendyn;\n\t      state.lenbits = 7;\n\n\t      opts = {bits: state.lenbits};\n\t      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n\t      state.lenbits = opts.bits;\n\n\t      if (ret) {\n\t        strm.msg = 'invalid code lengths set';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n\t      state.have = 0;\n\t      state.mode = CODELENS;\n\t      /* falls through */\n\t    case CODELENS:\n\t      while (state.have < state.nlen + state.ndist) {\n\t        for (;;) {\n\t          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n\t          here_bits = here >>> 24;\n\t          here_op = (here >>> 16) & 0xff;\n\t          here_val = here & 0xffff;\n\n\t          if ((here_bits) <= bits) { break; }\n\t          //--- PULLBYTE() ---//\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t          //---//\n\t        }\n\t        if (here_val < 16) {\n\t          //--- DROPBITS(here.bits) ---//\n\t          hold >>>= here_bits;\n\t          bits -= here_bits;\n\t          //---//\n\t          state.lens[state.have++] = here_val;\n\t        }\n\t        else {\n\t          if (here_val === 16) {\n\t            //=== NEEDBITS(here.bits + 2);\n\t            n = here_bits + 2;\n\t            while (bits < n) {\n\t              if (have === 0) { break inf_leave; }\n\t              have--;\n\t              hold += input[next++] << bits;\n\t              bits += 8;\n\t            }\n\t            //===//\n\t            //--- DROPBITS(here.bits) ---//\n\t            hold >>>= here_bits;\n\t            bits -= here_bits;\n\t            //---//\n\t            if (state.have === 0) {\n\t              strm.msg = 'invalid bit length repeat';\n\t              state.mode = BAD;\n\t              break;\n\t            }\n\t            len = state.lens[state.have - 1];\n\t            copy = 3 + (hold & 0x03);//BITS(2);\n\t            //--- DROPBITS(2) ---//\n\t            hold >>>= 2;\n\t            bits -= 2;\n\t            //---//\n\t          }\n\t          else if (here_val === 17) {\n\t            //=== NEEDBITS(here.bits + 3);\n\t            n = here_bits + 3;\n\t            while (bits < n) {\n\t              if (have === 0) { break inf_leave; }\n\t              have--;\n\t              hold += input[next++] << bits;\n\t              bits += 8;\n\t            }\n\t            //===//\n\t            //--- DROPBITS(here.bits) ---//\n\t            hold >>>= here_bits;\n\t            bits -= here_bits;\n\t            //---//\n\t            len = 0;\n\t            copy = 3 + (hold & 0x07);//BITS(3);\n\t            //--- DROPBITS(3) ---//\n\t            hold >>>= 3;\n\t            bits -= 3;\n\t            //---//\n\t          }\n\t          else {\n\t            //=== NEEDBITS(here.bits + 7);\n\t            n = here_bits + 7;\n\t            while (bits < n) {\n\t              if (have === 0) { break inf_leave; }\n\t              have--;\n\t              hold += input[next++] << bits;\n\t              bits += 8;\n\t            }\n\t            //===//\n\t            //--- DROPBITS(here.bits) ---//\n\t            hold >>>= here_bits;\n\t            bits -= here_bits;\n\t            //---//\n\t            len = 0;\n\t            copy = 11 + (hold & 0x7f);//BITS(7);\n\t            //--- DROPBITS(7) ---//\n\t            hold >>>= 7;\n\t            bits -= 7;\n\t            //---//\n\t          }\n\t          if (state.have + copy > state.nlen + state.ndist) {\n\t            strm.msg = 'invalid bit length repeat';\n\t            state.mode = BAD;\n\t            break;\n\t          }\n\t          while (copy--) {\n\t            state.lens[state.have++] = len;\n\t          }\n\t        }\n\t      }\n\n\t      /* handle error breaks in while */\n\t      if (state.mode === BAD) { break; }\n\n\t      /* check for end-of-block code (better have one) */\n\t      if (state.lens[256] === 0) {\n\t        strm.msg = 'invalid code -- missing end-of-block';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\n\t      /* build code tables -- note: do not change the lenbits or distbits\n\t         values here (9 and 6) without reading the comments in inftrees.h\n\t         concerning the ENOUGH constants, which depend on those values */\n\t      state.lenbits = 9;\n\n\t      opts = {bits: state.lenbits};\n\t      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n\t      // We have separate tables & no pointers. 2 commented lines below not needed.\n\t      // state.next_index = opts.table_index;\n\t      state.lenbits = opts.bits;\n\t      // state.lencode = state.next;\n\n\t      if (ret) {\n\t        strm.msg = 'invalid literal/lengths set';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\n\t      state.distbits = 6;\n\t      //state.distcode.copy(state.codes);\n\t      // Switch to use dynamic table\n\t      state.distcode = state.distdyn;\n\t      opts = {bits: state.distbits};\n\t      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n\t      // We have separate tables & no pointers. 2 commented lines below not needed.\n\t      // state.next_index = opts.table_index;\n\t      state.distbits = opts.bits;\n\t      // state.distcode = state.next;\n\n\t      if (ret) {\n\t        strm.msg = 'invalid distances set';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      //Tracev((stderr, 'inflate:       codes ok\\n'));\n\t      state.mode = LEN_;\n\t      if (flush === Z_TREES) { break inf_leave; }\n\t      /* falls through */\n\t    case LEN_:\n\t      state.mode = LEN;\n\t      /* falls through */\n\t    case LEN:\n\t      if (have >= 6 && left >= 258) {\n\t        //--- RESTORE() ---\n\t        strm.next_out = put;\n\t        strm.avail_out = left;\n\t        strm.next_in = next;\n\t        strm.avail_in = have;\n\t        state.hold = hold;\n\t        state.bits = bits;\n\t        //---\n\t        inflate_fast(strm, _out);\n\t        //--- LOAD() ---\n\t        put = strm.next_out;\n\t        output = strm.output;\n\t        left = strm.avail_out;\n\t        next = strm.next_in;\n\t        input = strm.input;\n\t        have = strm.avail_in;\n\t        hold = state.hold;\n\t        bits = state.bits;\n\t        //---\n\n\t        if (state.mode === TYPE) {\n\t          state.back = -1;\n\t        }\n\t        break;\n\t      }\n\t      state.back = 0;\n\t      for (;;) {\n\t        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/\n\t        here_bits = here >>> 24;\n\t        here_op = (here >>> 16) & 0xff;\n\t        here_val = here & 0xffff;\n\n\t        if (here_bits <= bits) { break; }\n\t        //--- PULLBYTE() ---//\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t        //---//\n\t      }\n\t      if (here_op && (here_op & 0xf0) === 0) {\n\t        last_bits = here_bits;\n\t        last_op = here_op;\n\t        last_val = here_val;\n\t        for (;;) {\n\t          here = state.lencode[last_val +\n\t                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n\t          here_bits = here >>> 24;\n\t          here_op = (here >>> 16) & 0xff;\n\t          here_val = here & 0xffff;\n\n\t          if ((last_bits + here_bits) <= bits) { break; }\n\t          //--- PULLBYTE() ---//\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t          //---//\n\t        }\n\t        //--- DROPBITS(last.bits) ---//\n\t        hold >>>= last_bits;\n\t        bits -= last_bits;\n\t        //---//\n\t        state.back += last_bits;\n\t      }\n\t      //--- DROPBITS(here.bits) ---//\n\t      hold >>>= here_bits;\n\t      bits -= here_bits;\n\t      //---//\n\t      state.back += here_bits;\n\t      state.length = here_val;\n\t      if (here_op === 0) {\n\t        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n\t        //        \"inflate:         literal '%c'\\n\" :\n\t        //        \"inflate:         literal 0x%02x\\n\", here.val));\n\t        state.mode = LIT;\n\t        break;\n\t      }\n\t      if (here_op & 32) {\n\t        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n\t        state.back = -1;\n\t        state.mode = TYPE;\n\t        break;\n\t      }\n\t      if (here_op & 64) {\n\t        strm.msg = 'invalid literal/length code';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      state.extra = here_op & 15;\n\t      state.mode = LENEXT;\n\t      /* falls through */\n\t    case LENEXT:\n\t      if (state.extra) {\n\t        //=== NEEDBITS(state.extra);\n\t        n = state.extra;\n\t        while (bits < n) {\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t        }\n\t        //===//\n\t        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n\t        //--- DROPBITS(state.extra) ---//\n\t        hold >>>= state.extra;\n\t        bits -= state.extra;\n\t        //---//\n\t        state.back += state.extra;\n\t      }\n\t      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n\t      state.was = state.length;\n\t      state.mode = DIST;\n\t      /* falls through */\n\t    case DIST:\n\t      for (;;) {\n\t        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/\n\t        here_bits = here >>> 24;\n\t        here_op = (here >>> 16) & 0xff;\n\t        here_val = here & 0xffff;\n\n\t        if ((here_bits) <= bits) { break; }\n\t        //--- PULLBYTE() ---//\n\t        if (have === 0) { break inf_leave; }\n\t        have--;\n\t        hold += input[next++] << bits;\n\t        bits += 8;\n\t        //---//\n\t      }\n\t      if ((here_op & 0xf0) === 0) {\n\t        last_bits = here_bits;\n\t        last_op = here_op;\n\t        last_val = here_val;\n\t        for (;;) {\n\t          here = state.distcode[last_val +\n\t                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n\t          here_bits = here >>> 24;\n\t          here_op = (here >>> 16) & 0xff;\n\t          here_val = here & 0xffff;\n\n\t          if ((last_bits + here_bits) <= bits) { break; }\n\t          //--- PULLBYTE() ---//\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t          //---//\n\t        }\n\t        //--- DROPBITS(last.bits) ---//\n\t        hold >>>= last_bits;\n\t        bits -= last_bits;\n\t        //---//\n\t        state.back += last_bits;\n\t      }\n\t      //--- DROPBITS(here.bits) ---//\n\t      hold >>>= here_bits;\n\t      bits -= here_bits;\n\t      //---//\n\t      state.back += here_bits;\n\t      if (here_op & 64) {\n\t        strm.msg = 'invalid distance code';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t      state.offset = here_val;\n\t      state.extra = (here_op) & 15;\n\t      state.mode = DISTEXT;\n\t      /* falls through */\n\t    case DISTEXT:\n\t      if (state.extra) {\n\t        //=== NEEDBITS(state.extra);\n\t        n = state.extra;\n\t        while (bits < n) {\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t        }\n\t        //===//\n\t        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n\t        //--- DROPBITS(state.extra) ---//\n\t        hold >>>= state.extra;\n\t        bits -= state.extra;\n\t        //---//\n\t        state.back += state.extra;\n\t      }\n\t//#ifdef INFLATE_STRICT\n\t      if (state.offset > state.dmax) {\n\t        strm.msg = 'invalid distance too far back';\n\t        state.mode = BAD;\n\t        break;\n\t      }\n\t//#endif\n\t      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n\t      state.mode = MATCH;\n\t      /* falls through */\n\t    case MATCH:\n\t      if (left === 0) { break inf_leave; }\n\t      copy = _out - left;\n\t      if (state.offset > copy) {         /* copy from window */\n\t        copy = state.offset - copy;\n\t        if (copy > state.whave) {\n\t          if (state.sane) {\n\t            strm.msg = 'invalid distance too far back';\n\t            state.mode = BAD;\n\t            break;\n\t          }\n\t// (!) This block is disabled in zlib defailts,\n\t// don't enable it for binary compatibility\n\t//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n\t//          Trace((stderr, \"inflate.c too far\\n\"));\n\t//          copy -= state.whave;\n\t//          if (copy > state.length) { copy = state.length; }\n\t//          if (copy > left) { copy = left; }\n\t//          left -= copy;\n\t//          state.length -= copy;\n\t//          do {\n\t//            output[put++] = 0;\n\t//          } while (--copy);\n\t//          if (state.length === 0) { state.mode = LEN; }\n\t//          break;\n\t//#endif\n\t        }\n\t        if (copy > state.wnext) {\n\t          copy -= state.wnext;\n\t          from = state.wsize - copy;\n\t        }\n\t        else {\n\t          from = state.wnext - copy;\n\t        }\n\t        if (copy > state.length) { copy = state.length; }\n\t        from_source = state.window;\n\t      }\n\t      else {                              /* copy from output */\n\t        from_source = output;\n\t        from = put - state.offset;\n\t        copy = state.length;\n\t      }\n\t      if (copy > left) { copy = left; }\n\t      left -= copy;\n\t      state.length -= copy;\n\t      do {\n\t        output[put++] = from_source[from++];\n\t      } while (--copy);\n\t      if (state.length === 0) { state.mode = LEN; }\n\t      break;\n\t    case LIT:\n\t      if (left === 0) { break inf_leave; }\n\t      output[put++] = state.length;\n\t      left--;\n\t      state.mode = LEN;\n\t      break;\n\t    case CHECK:\n\t      if (state.wrap) {\n\t        //=== NEEDBITS(32);\n\t        while (bits < 32) {\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          // Use '|' insdead of '+' to make sure that result is signed\n\t          hold |= input[next++] << bits;\n\t          bits += 8;\n\t        }\n\t        //===//\n\t        _out -= left;\n\t        strm.total_out += _out;\n\t        state.total += _out;\n\t        if (_out) {\n\t          strm.adler = state.check =\n\t              /*UPDATE(state.check, put - _out, _out);*/\n\t              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n\t        }\n\t        _out = left;\n\t        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too\n\t        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {\n\t          strm.msg = 'incorrect data check';\n\t          state.mode = BAD;\n\t          break;\n\t        }\n\t        //=== INITBITS();\n\t        hold = 0;\n\t        bits = 0;\n\t        //===//\n\t        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n\t      }\n\t      state.mode = LENGTH;\n\t      /* falls through */\n\t    case LENGTH:\n\t      if (state.wrap && state.flags) {\n\t        //=== NEEDBITS(32);\n\t        while (bits < 32) {\n\t          if (have === 0) { break inf_leave; }\n\t          have--;\n\t          hold += input[next++] << bits;\n\t          bits += 8;\n\t        }\n\t        //===//\n\t        if (hold !== (state.total & 0xffffffff)) {\n\t          strm.msg = 'incorrect length check';\n\t          state.mode = BAD;\n\t          break;\n\t        }\n\t        //=== INITBITS();\n\t        hold = 0;\n\t        bits = 0;\n\t        //===//\n\t        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n\t      }\n\t      state.mode = DONE;\n\t      /* falls through */\n\t    case DONE:\n\t      ret = Z_STREAM_END;\n\t      break inf_leave;\n\t    case BAD:\n\t      ret = Z_DATA_ERROR;\n\t      break inf_leave;\n\t    case MEM:\n\t      return Z_MEM_ERROR;\n\t    case SYNC:\n\t      /* falls through */\n\t    default:\n\t      return Z_STREAM_ERROR;\n\t    }\n\t  }\n\n\t  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n\t  /*\n\t     Return from inflate(), updating the total counts and the check value.\n\t     If there was no progress during the inflate() call, return a buffer\n\t     error.  Call updatewindow() to create and/or update the window state.\n\t     Note: a memory error from inflate() is non-recoverable.\n\t   */\n\n\t  //--- RESTORE() ---\n\t  strm.next_out = put;\n\t  strm.avail_out = left;\n\t  strm.next_in = next;\n\t  strm.avail_in = have;\n\t  state.hold = hold;\n\t  state.bits = bits;\n\t  //---\n\n\t  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n\t                      (state.mode < CHECK || flush !== Z_FINISH))) {\n\t    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n\t      state.mode = MEM;\n\t      return Z_MEM_ERROR;\n\t    }\n\t  }\n\t  _in -= strm.avail_in;\n\t  _out -= strm.avail_out;\n\t  strm.total_in += _in;\n\t  strm.total_out += _out;\n\t  state.total += _out;\n\t  if (state.wrap && _out) {\n\t    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n\t      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n\t  }\n\t  strm.data_type = state.bits + (state.last ? 64 : 0) +\n\t                    (state.mode === TYPE ? 128 : 0) +\n\t                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n\t  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n\t    ret = Z_BUF_ERROR;\n\t  }\n\t  return ret;\n\t}\n\n\tfunction inflateEnd(strm) {\n\n\t  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n\t    return Z_STREAM_ERROR;\n\t  }\n\n\t  var state = strm.state;\n\t  if (state.window) {\n\t    state.window = null;\n\t  }\n\t  strm.state = null;\n\t  return Z_OK;\n\t}\n\n\tfunction inflateGetHeader(strm, head) {\n\t  var state;\n\n\t  /* check state */\n\t  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n\t  state = strm.state;\n\t  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n\t  /* save header structure */\n\t  state.head = head;\n\t  head.done = false;\n\t  return Z_OK;\n\t}\n\n\n\texports.inflateReset = inflateReset;\n\texports.inflateReset2 = inflateReset2;\n\texports.inflateResetKeep = inflateResetKeep;\n\texports.inflateInit = inflateInit;\n\texports.inflateInit2 = inflateInit2;\n\texports.inflate = inflate;\n\texports.inflateEnd = inflateEnd;\n\texports.inflateGetHeader = inflateGetHeader;\n\texports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n\t/* Not implemented\n\texports.inflateCopy = inflateCopy;\n\texports.inflateGetDictionary = inflateGetDictionary;\n\texports.inflateMark = inflateMark;\n\texports.inflatePrime = inflatePrime;\n\texports.inflateSetDictionary = inflateSetDictionary;\n\texports.inflateSync = inflateSync;\n\texports.inflateSyncPoint = inflateSyncPoint;\n\texports.inflateUndermine = inflateUndermine;\n\t*/\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\n\t  /* Allowed flush values; see deflate() and inflate() below for details */\n\t  Z_NO_FLUSH:         0,\n\t  Z_PARTIAL_FLUSH:    1,\n\t  Z_SYNC_FLUSH:       2,\n\t  Z_FULL_FLUSH:       3,\n\t  Z_FINISH:           4,\n\t  Z_BLOCK:            5,\n\t  Z_TREES:            6,\n\n\t  /* Return codes for the compression/decompression functions. Negative values\n\t  * are errors, positive values are used for special but normal events.\n\t  */\n\t  Z_OK:               0,\n\t  Z_STREAM_END:       1,\n\t  Z_NEED_DICT:        2,\n\t  Z_ERRNO:           -1,\n\t  Z_STREAM_ERROR:    -2,\n\t  Z_DATA_ERROR:      -3,\n\t  //Z_MEM_ERROR:     -4,\n\t  Z_BUF_ERROR:       -5,\n\t  //Z_VERSION_ERROR: -6,\n\n\t  /* compression levels */\n\t  Z_NO_COMPRESSION:         0,\n\t  Z_BEST_SPEED:             1,\n\t  Z_BEST_COMPRESSION:       9,\n\t  Z_DEFAULT_COMPRESSION:   -1,\n\n\n\t  Z_FILTERED:               1,\n\t  Z_HUFFMAN_ONLY:           2,\n\t  Z_RLE:                    3,\n\t  Z_FIXED:                  4,\n\t  Z_DEFAULT_STRATEGY:       0,\n\n\t  /* Possible values of the data_type field (though see inflate()) */\n\t  Z_BINARY:                 0,\n\t  Z_TEXT:                   1,\n\t  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n\t  Z_UNKNOWN:                2,\n\n\t  /* The deflate compression method */\n\t  Z_DEFLATED:               8\n\t  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n\t};\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\n\tfunction ZStream() {\n\t  /* next input byte */\n\t  this.input = null; // JS specific, because we have no pointers\n\t  this.next_in = 0;\n\t  /* number of bytes available at input */\n\t  this.avail_in = 0;\n\t  /* total number of input bytes read so far */\n\t  this.total_in = 0;\n\t  /* next output byte should be put there */\n\t  this.output = null; // JS specific, because we have no pointers\n\t  this.next_out = 0;\n\t  /* remaining free space at output */\n\t  this.avail_out = 0;\n\t  /* total number of bytes output so far */\n\t  this.total_out = 0;\n\t  /* last error message, NULL if no error */\n\t  this.msg = ''/*Z_NULL*/;\n\t  /* not visible by applications */\n\t  this.state = null;\n\t  /* best guess about the data type: binary or text */\n\t  this.data_type = 2/*Z_UNKNOWN*/;\n\t  /* adler32 value of the uncompressed data */\n\t  this.adler = 0;\n\t}\n\n\tmodule.exports = ZStream;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var DFont, Data, Directory, NameTable, fs;\n\n\t  fs = __webpack_require__(10);\n\n\t  Data = __webpack_require__(34);\n\n\t  Directory = __webpack_require__(79);\n\n\t  NameTable = __webpack_require__(80);\n\n\t  DFont = (function() {\n\t    DFont.open = function(filename) {\n\t      var contents;\n\t      contents = fs.readFileSync(filename);\n\t      return new DFont(contents);\n\t    };\n\n\t    function DFont(contents) {\n\t      this.contents = new Data(contents);\n\t      this.parse(this.contents);\n\t    }\n\n\t    DFont.prototype.parse = function(data) {\n\t      var attr, b2, b3, b4, dataLength, dataOffset, dataOfs, entry, font, handle, i, id, j, len, length, mapLength, mapOffset, maxIndex, maxTypeIndex, name, nameListOffset, nameOfs, p, pos, refListOffset, type, typeListOffset, _i, _j;\n\t      dataOffset = data.readInt();\n\t      mapOffset = data.readInt();\n\t      dataLength = data.readInt();\n\t      mapLength = data.readInt();\n\t      this.map = {};\n\t      data.pos = mapOffset + 24;\n\t      typeListOffset = data.readShort() + mapOffset;\n\t      nameListOffset = data.readShort() + mapOffset;\n\t      data.pos = typeListOffset;\n\t      maxIndex = data.readShort();\n\t      for (i = _i = 0; _i <= maxIndex; i = _i += 1) {\n\t        type = data.readString(4);\n\t        maxTypeIndex = data.readShort();\n\t        refListOffset = data.readShort();\n\t        this.map[type] = {\n\t          list: [],\n\t          named: {}\n\t        };\n\t        pos = data.pos;\n\t        data.pos = typeListOffset + refListOffset;\n\t        for (j = _j = 0; _j <= maxTypeIndex; j = _j += 1) {\n\t          id = data.readShort();\n\t          nameOfs = data.readShort();\n\t          attr = data.readByte();\n\t          b2 = data.readByte() << 16;\n\t          b3 = data.readByte() << 8;\n\t          b4 = data.readByte();\n\t          dataOfs = dataOffset + (0 | b2 | b3 | b4);\n\t          handle = data.readUInt32();\n\t          entry = {\n\t            id: id,\n\t            attributes: attr,\n\t            offset: dataOfs,\n\t            handle: handle\n\t          };\n\t          p = data.pos;\n\t          if (nameOfs !== -1 && (nameListOffset + nameOfs < mapOffset + mapLength)) {\n\t            data.pos = nameListOffset + nameOfs;\n\t            len = data.readByte();\n\t            entry.name = data.readString(len);\n\t          } else if (type === 'sfnt') {\n\t            data.pos = entry.offset;\n\t            length = data.readUInt32();\n\t            font = {};\n\t            font.contents = new Data(data.slice(data.pos, data.pos + length));\n\t            font.directory = new Directory(font.contents);\n\t            name = new NameTable(font);\n\t            entry.name = name.fontName[0].raw;\n\t          }\n\t          data.pos = p;\n\t          this.map[type].list.push(entry);\n\t          if (entry.name) {\n\t            this.map[type].named[entry.name] = entry;\n\t          }\n\t        }\n\t        data.pos = pos;\n\t      }\n\t    };\n\n\t    DFont.prototype.getNamedFont = function(name) {\n\t      var data, entry, length, pos, ret, _ref;\n\t      data = this.contents;\n\t      pos = data.pos;\n\t      entry = (_ref = this.map.sfnt) != null ? _ref.named[name] : void 0;\n\t      if (!entry) {\n\t        throw new Error(\"Font \" + name + \" not found in DFont file.\");\n\t      }\n\t      data.pos = entry.offset;\n\t      length = data.readUInt32();\n\t      ret = data.slice(data.pos, data.pos + length);\n\t      data.pos = pos;\n\t      return ret;\n\t    };\n\n\t    return DFont;\n\n\t  })();\n\n\t  module.exports = DFont;\n\n\t}).call(this);\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, Directory,\n\t    __slice = [].slice;\n\n\t  Data = __webpack_require__(34);\n\n\t  Directory = (function() {\n\t    var checksum;\n\n\t    function Directory(data) {\n\t      var entry, i, _i, _ref;\n\t      this.scalarType = data.readInt();\n\t      this.tableCount = data.readShort();\n\t      this.searchRange = data.readShort();\n\t      this.entrySelector = data.readShort();\n\t      this.rangeShift = data.readShort();\n\t      this.tables = {};\n\t      for (i = _i = 0, _ref = this.tableCount; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        entry = {\n\t          tag: data.readString(4),\n\t          checksum: data.readInt(),\n\t          offset: data.readInt(),\n\t          length: data.readInt()\n\t        };\n\t        this.tables[entry.tag] = entry;\n\t      }\n\t    }\n\n\t    Directory.prototype.encode = function(tables) {\n\t      var adjustment, directory, directoryLength, entrySelector, headOffset, log2, offset, rangeShift, searchRange, sum, table, tableCount, tableData, tag;\n\t      tableCount = Object.keys(tables).length;\n\t      log2 = Math.log(2);\n\t      searchRange = Math.floor(Math.log(tableCount) / log2) * 16;\n\t      entrySelector = Math.floor(searchRange / log2);\n\t      rangeShift = tableCount * 16 - searchRange;\n\t      directory = new Data;\n\t      directory.writeInt(this.scalarType);\n\t      directory.writeShort(tableCount);\n\t      directory.writeShort(searchRange);\n\t      directory.writeShort(entrySelector);\n\t      directory.writeShort(rangeShift);\n\t      directoryLength = tableCount * 16;\n\t      offset = directory.pos + directoryLength;\n\t      headOffset = null;\n\t      tableData = [];\n\t      for (tag in tables) {\n\t        table = tables[tag];\n\t        directory.writeString(tag);\n\t        directory.writeInt(checksum(table));\n\t        directory.writeInt(offset);\n\t        directory.writeInt(table.length);\n\t        tableData = tableData.concat(table);\n\t        if (tag === 'head') {\n\t          headOffset = offset;\n\t        }\n\t        offset += table.length;\n\t        while (offset % 4) {\n\t          tableData.push(0);\n\t          offset++;\n\t        }\n\t      }\n\t      directory.write(tableData);\n\t      sum = checksum(directory.data);\n\t      adjustment = 0xB1B0AFBA - sum;\n\t      directory.pos = headOffset + 8;\n\t      directory.writeUInt32(adjustment);\n\t      return new Buffer(directory.data);\n\t    };\n\n\t    checksum = function(data) {\n\t      var i, sum, tmp, _i, _ref;\n\t      data = __slice.call(data);\n\t      while (data.length % 4) {\n\t        data.push(0);\n\t      }\n\t      tmp = new Data(data);\n\t      sum = 0;\n\t      for (i = _i = 0, _ref = data.length; _i < _ref; i = _i += 4) {\n\t        sum += tmp.readUInt32();\n\t      }\n\t      return sum & 0xFFFFFFFF;\n\t    };\n\n\t    return Directory;\n\n\t  })();\n\n\t  module.exports = Directory;\n\n\t}).call(this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, NameEntry, NameTable, Table, utils,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  utils = __webpack_require__(89);\n\n\t  NameTable = (function(_super) {\n\t    var subsetTag;\n\n\t    __extends(NameTable, _super);\n\n\t    function NameTable() {\n\t      return NameTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    NameTable.prototype.tag = 'name';\n\n\t    NameTable.prototype.parse = function(data) {\n\t      var count, entries, entry, format, i, name, stringOffset, strings, text, _i, _j, _len, _name;\n\t      data.pos = this.offset;\n\t      format = data.readShort();\n\t      count = data.readShort();\n\t      stringOffset = data.readShort();\n\t      entries = [];\n\t      for (i = _i = 0; 0 <= count ? _i < count : _i > count; i = 0 <= count ? ++_i : --_i) {\n\t        entries.push({\n\t          platformID: data.readShort(),\n\t          encodingID: data.readShort(),\n\t          languageID: data.readShort(),\n\t          nameID: data.readShort(),\n\t          length: data.readShort(),\n\t          offset: this.offset + stringOffset + data.readShort()\n\t        });\n\t      }\n\t      strings = {};\n\t      for (i = _j = 0, _len = entries.length; _j < _len; i = ++_j) {\n\t        entry = entries[i];\n\t        data.pos = entry.offset;\n\t        text = data.readString(entry.length);\n\t        name = new NameEntry(text, entry);\n\t        if (strings[_name = entry.nameID] == null) {\n\t          strings[_name] = [];\n\t        }\n\t        strings[entry.nameID].push(name);\n\t      }\n\t      this.strings = strings;\n\t      this.copyright = strings[0];\n\t      this.fontFamily = strings[1];\n\t      this.fontSubfamily = strings[2];\n\t      this.uniqueSubfamily = strings[3];\n\t      this.fontName = strings[4];\n\t      this.version = strings[5];\n\t      this.postscriptName = strings[6][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g, \"\");\n\t      this.trademark = strings[7];\n\t      this.manufacturer = strings[8];\n\t      this.designer = strings[9];\n\t      this.description = strings[10];\n\t      this.vendorUrl = strings[11];\n\t      this.designerUrl = strings[12];\n\t      this.license = strings[13];\n\t      this.licenseUrl = strings[14];\n\t      this.preferredFamily = strings[15];\n\t      this.preferredSubfamily = strings[17];\n\t      this.compatibleFull = strings[18];\n\t      return this.sampleText = strings[19];\n\t    };\n\n\t    subsetTag = \"AAAAAA\";\n\n\t    NameTable.prototype.encode = function() {\n\t      var id, list, nameID, nameTable, postscriptName, strCount, strTable, string, strings, table, val, _i, _len, _ref;\n\t      strings = {};\n\t      _ref = this.strings;\n\t      for (id in _ref) {\n\t        val = _ref[id];\n\t        strings[id] = val;\n\t      }\n\t      postscriptName = new NameEntry(\"\" + subsetTag + \"+\" + this.postscriptName, {\n\t        platformID: 1,\n\t        encodingID: 0,\n\t        languageID: 0\n\t      });\n\t      strings[6] = [postscriptName];\n\t      subsetTag = utils.successorOf(subsetTag);\n\t      strCount = 0;\n\t      for (id in strings) {\n\t        list = strings[id];\n\t        if (list != null) {\n\t          strCount += list.length;\n\t        }\n\t      }\n\t      table = new Data;\n\t      strTable = new Data;\n\t      table.writeShort(0);\n\t      table.writeShort(strCount);\n\t      table.writeShort(6 + 12 * strCount);\n\t      for (nameID in strings) {\n\t        list = strings[nameID];\n\t        if (list != null) {\n\t          for (_i = 0, _len = list.length; _i < _len; _i++) {\n\t            string = list[_i];\n\t            table.writeShort(string.platformID);\n\t            table.writeShort(string.encodingID);\n\t            table.writeShort(string.languageID);\n\t            table.writeShort(nameID);\n\t            table.writeShort(string.length);\n\t            table.writeShort(strTable.pos);\n\t            strTable.writeString(string.raw);\n\t          }\n\t        }\n\t      }\n\t      return nameTable = {\n\t        postscriptName: postscriptName.raw,\n\t        table: table.data.concat(strTable.data)\n\t      };\n\t    };\n\n\t    return NameTable;\n\n\t  })(Table);\n\n\t  module.exports = NameTable;\n\n\t  NameEntry = (function() {\n\t    function NameEntry(raw, entry) {\n\t      this.raw = raw;\n\t      this.length = this.raw.length;\n\t      this.platformID = entry.platformID;\n\t      this.encodingID = entry.encodingID;\n\t      this.languageID = entry.languageID;\n\t    }\n\n\t    return NameEntry;\n\n\t  })();\n\n\t}).call(this);\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, HeadTable, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  HeadTable = (function(_super) {\n\t    __extends(HeadTable, _super);\n\n\t    function HeadTable() {\n\t      return HeadTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    HeadTable.prototype.tag = 'head';\n\n\t    HeadTable.prototype.parse = function(data) {\n\t      data.pos = this.offset;\n\t      this.version = data.readInt();\n\t      this.revision = data.readInt();\n\t      this.checkSumAdjustment = data.readInt();\n\t      this.magicNumber = data.readInt();\n\t      this.flags = data.readShort();\n\t      this.unitsPerEm = data.readShort();\n\t      this.created = data.readLongLong();\n\t      this.modified = data.readLongLong();\n\t      this.xMin = data.readShort();\n\t      this.yMin = data.readShort();\n\t      this.xMax = data.readShort();\n\t      this.yMax = data.readShort();\n\t      this.macStyle = data.readShort();\n\t      this.lowestRecPPEM = data.readShort();\n\t      this.fontDirectionHint = data.readShort();\n\t      this.indexToLocFormat = data.readShort();\n\t      return this.glyphDataFormat = data.readShort();\n\t    };\n\n\t    HeadTable.prototype.encode = function(loca) {\n\t      var table;\n\t      table = new Data;\n\t      table.writeInt(this.version);\n\t      table.writeInt(this.revision);\n\t      table.writeInt(this.checkSumAdjustment);\n\t      table.writeInt(this.magicNumber);\n\t      table.writeShort(this.flags);\n\t      table.writeShort(this.unitsPerEm);\n\t      table.writeLongLong(this.created);\n\t      table.writeLongLong(this.modified);\n\t      table.writeShort(this.xMin);\n\t      table.writeShort(this.yMin);\n\t      table.writeShort(this.xMax);\n\t      table.writeShort(this.yMax);\n\t      table.writeShort(this.macStyle);\n\t      table.writeShort(this.lowestRecPPEM);\n\t      table.writeShort(this.fontDirectionHint);\n\t      table.writeShort(loca.type);\n\t      table.writeShort(this.glyphDataFormat);\n\t      return table.data;\n\t    };\n\n\t    return HeadTable;\n\n\t  })(Table);\n\n\t  module.exports = HeadTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var CmapEntry, CmapTable, Data, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  CmapTable = (function(_super) {\n\t    __extends(CmapTable, _super);\n\n\t    function CmapTable() {\n\t      return CmapTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    CmapTable.prototype.tag = 'cmap';\n\n\t    CmapTable.prototype.parse = function(data) {\n\t      var entry, i, tableCount, _i;\n\t      data.pos = this.offset;\n\t      this.version = data.readUInt16();\n\t      tableCount = data.readUInt16();\n\t      this.tables = [];\n\t      this.unicode = null;\n\t      for (i = _i = 0; 0 <= tableCount ? _i < tableCount : _i > tableCount; i = 0 <= tableCount ? ++_i : --_i) {\n\t        entry = new CmapEntry(data, this.offset);\n\t        this.tables.push(entry);\n\t        if (entry.isUnicode) {\n\t          if (this.unicode == null) {\n\t            this.unicode = entry;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    };\n\n\t    CmapTable.encode = function(charmap, encoding) {\n\t      var result, table;\n\t      if (encoding == null) {\n\t        encoding = 'macroman';\n\t      }\n\t      result = CmapEntry.encode(charmap, encoding);\n\t      table = new Data;\n\t      table.writeUInt16(0);\n\t      table.writeUInt16(1);\n\t      result.table = table.data.concat(result.subtable);\n\t      return result;\n\t    };\n\n\t    return CmapTable;\n\n\t  })(Table);\n\n\t  CmapEntry = (function() {\n\t    function CmapEntry(data, offset) {\n\t      var code, count, endCode, glyphId, glyphIds, i, idDelta, idRangeOffset, index, saveOffset, segCount, segCountX2, start, startCode, tail, _i, _j, _k, _len;\n\t      this.platformID = data.readUInt16();\n\t      this.encodingID = data.readShort();\n\t      this.offset = offset + data.readInt();\n\t      saveOffset = data.pos;\n\t      data.pos = this.offset;\n\t      this.format = data.readUInt16();\n\t      this.length = data.readUInt16();\n\t      this.language = data.readUInt16();\n\t      this.isUnicode = (this.platformID === 3 && this.encodingID === 1 && this.format === 4) || this.platformID === 0 && this.format === 4;\n\t      this.codeMap = {};\n\t      switch (this.format) {\n\t        case 0:\n\t          for (i = _i = 0; _i < 256; i = ++_i) {\n\t            this.codeMap[i] = data.readByte();\n\t          }\n\t          break;\n\t        case 4:\n\t          segCountX2 = data.readUInt16();\n\t          segCount = segCountX2 / 2;\n\t          data.pos += 6;\n\t          endCode = (function() {\n\t            var _j, _results;\n\t            _results = [];\n\t            for (i = _j = 0; 0 <= segCount ? _j < segCount : _j > segCount; i = 0 <= segCount ? ++_j : --_j) {\n\t              _results.push(data.readUInt16());\n\t            }\n\t            return _results;\n\t          })();\n\t          data.pos += 2;\n\t          startCode = (function() {\n\t            var _j, _results;\n\t            _results = [];\n\t            for (i = _j = 0; 0 <= segCount ? _j < segCount : _j > segCount; i = 0 <= segCount ? ++_j : --_j) {\n\t              _results.push(data.readUInt16());\n\t            }\n\t            return _results;\n\t          })();\n\t          idDelta = (function() {\n\t            var _j, _results;\n\t            _results = [];\n\t            for (i = _j = 0; 0 <= segCount ? _j < segCount : _j > segCount; i = 0 <= segCount ? ++_j : --_j) {\n\t              _results.push(data.readUInt16());\n\t            }\n\t            return _results;\n\t          })();\n\t          idRangeOffset = (function() {\n\t            var _j, _results;\n\t            _results = [];\n\t            for (i = _j = 0; 0 <= segCount ? _j < segCount : _j > segCount; i = 0 <= segCount ? ++_j : --_j) {\n\t              _results.push(data.readUInt16());\n\t            }\n\t            return _results;\n\t          })();\n\t          count = (this.length - data.pos + this.offset) / 2;\n\t          glyphIds = (function() {\n\t            var _j, _results;\n\t            _results = [];\n\t            for (i = _j = 0; 0 <= count ? _j < count : _j > count; i = 0 <= count ? ++_j : --_j) {\n\t              _results.push(data.readUInt16());\n\t            }\n\t            return _results;\n\t          })();\n\t          for (i = _j = 0, _len = endCode.length; _j < _len; i = ++_j) {\n\t            tail = endCode[i];\n\t            start = startCode[i];\n\t            for (code = _k = start; start <= tail ? _k <= tail : _k >= tail; code = start <= tail ? ++_k : --_k) {\n\t              if (idRangeOffset[i] === 0) {\n\t                glyphId = code + idDelta[i];\n\t              } else {\n\t                index = idRangeOffset[i] / 2 + (code - start) - (segCount - i);\n\t                glyphId = glyphIds[index] || 0;\n\t                if (glyphId !== 0) {\n\t                  glyphId += idDelta[i];\n\t                }\n\t              }\n\t              this.codeMap[code] = glyphId & 0xFFFF;\n\t            }\n\t          }\n\t      }\n\t      data.pos = saveOffset;\n\t    }\n\n\t    CmapEntry.encode = function(charmap, encoding) {\n\t      var charMap, code, codeMap, codes, delta, deltas, diff, endCode, endCodes, entrySelector, glyphIDs, i, id, indexes, last, map, nextID, offset, old, rangeOffsets, rangeShift, result, searchRange, segCount, segCountX2, startCode, startCodes, startGlyph, subtable, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _len5, _len6, _len7, _m, _n, _name, _o, _p, _q;\n\t      subtable = new Data;\n\t      codes = Object.keys(charmap).sort(function(a, b) {\n\t        return a - b;\n\t      });\n\t      switch (encoding) {\n\t        case 'macroman':\n\t          id = 0;\n\t          indexes = (function() {\n\t            var _i, _results;\n\t            _results = [];\n\t            for (i = _i = 0; _i < 256; i = ++_i) {\n\t              _results.push(0);\n\t            }\n\t            return _results;\n\t          })();\n\t          map = {\n\t            0: 0\n\t          };\n\t          codeMap = {};\n\t          for (_i = 0, _len = codes.length; _i < _len; _i++) {\n\t            code = codes[_i];\n\t            if (map[_name = charmap[code]] == null) {\n\t              map[_name] = ++id;\n\t            }\n\t            codeMap[code] = {\n\t              old: charmap[code],\n\t              \"new\": map[charmap[code]]\n\t            };\n\t            indexes[code] = map[charmap[code]];\n\t          }\n\t          subtable.writeUInt16(1);\n\t          subtable.writeUInt16(0);\n\t          subtable.writeUInt32(12);\n\t          subtable.writeUInt16(0);\n\t          subtable.writeUInt16(262);\n\t          subtable.writeUInt16(0);\n\t          subtable.write(indexes);\n\t          return result = {\n\t            charMap: codeMap,\n\t            subtable: subtable.data,\n\t            maxGlyphID: id + 1\n\t          };\n\t        case 'unicode':\n\t          startCodes = [];\n\t          endCodes = [];\n\t          nextID = 0;\n\t          map = {};\n\t          charMap = {};\n\t          last = diff = null;\n\t          for (_j = 0, _len1 = codes.length; _j < _len1; _j++) {\n\t            code = codes[_j];\n\t            old = charmap[code];\n\t            if (map[old] == null) {\n\t              map[old] = ++nextID;\n\t            }\n\t            charMap[code] = {\n\t              old: old,\n\t              \"new\": map[old]\n\t            };\n\t            delta = map[old] - code;\n\t            if ((last == null) || delta !== diff) {\n\t              if (last) {\n\t                endCodes.push(last);\n\t              }\n\t              startCodes.push(code);\n\t              diff = delta;\n\t            }\n\t            last = code;\n\t          }\n\t          if (last) {\n\t            endCodes.push(last);\n\t          }\n\t          endCodes.push(0xFFFF);\n\t          startCodes.push(0xFFFF);\n\t          segCount = startCodes.length;\n\t          segCountX2 = segCount * 2;\n\t          searchRange = 2 * Math.pow(Math.log(segCount) / Math.LN2, 2);\n\t          entrySelector = Math.log(searchRange / 2) / Math.LN2;\n\t          rangeShift = 2 * segCount - searchRange;\n\t          deltas = [];\n\t          rangeOffsets = [];\n\t          glyphIDs = [];\n\t          for (i = _k = 0, _len2 = startCodes.length; _k < _len2; i = ++_k) {\n\t            startCode = startCodes[i];\n\t            endCode = endCodes[i];\n\t            if (startCode === 0xFFFF) {\n\t              deltas.push(0);\n\t              rangeOffsets.push(0);\n\t              break;\n\t            }\n\t            startGlyph = charMap[startCode][\"new\"];\n\t            if (startCode - startGlyph >= 0x8000) {\n\t              deltas.push(0);\n\t              rangeOffsets.push(2 * (glyphIDs.length + segCount - i));\n\t              for (code = _l = startCode; startCode <= endCode ? _l <= endCode : _l >= endCode; code = startCode <= endCode ? ++_l : --_l) {\n\t                glyphIDs.push(charMap[code][\"new\"]);\n\t              }\n\t            } else {\n\t              deltas.push(startGlyph - startCode);\n\t              rangeOffsets.push(0);\n\t            }\n\t          }\n\t          subtable.writeUInt16(3);\n\t          subtable.writeUInt16(1);\n\t          subtable.writeUInt32(12);\n\t          subtable.writeUInt16(4);\n\t          subtable.writeUInt16(16 + segCount * 8 + glyphIDs.length * 2);\n\t          subtable.writeUInt16(0);\n\t          subtable.writeUInt16(segCountX2);\n\t          subtable.writeUInt16(searchRange);\n\t          subtable.writeUInt16(entrySelector);\n\t          subtable.writeUInt16(rangeShift);\n\t          for (_m = 0, _len3 = endCodes.length; _m < _len3; _m++) {\n\t            code = endCodes[_m];\n\t            subtable.writeUInt16(code);\n\t          }\n\t          subtable.writeUInt16(0);\n\t          for (_n = 0, _len4 = startCodes.length; _n < _len4; _n++) {\n\t            code = startCodes[_n];\n\t            subtable.writeUInt16(code);\n\t          }\n\t          for (_o = 0, _len5 = deltas.length; _o < _len5; _o++) {\n\t            delta = deltas[_o];\n\t            subtable.writeUInt16(delta);\n\t          }\n\t          for (_p = 0, _len6 = rangeOffsets.length; _p < _len6; _p++) {\n\t            offset = rangeOffsets[_p];\n\t            subtable.writeUInt16(offset);\n\t          }\n\t          for (_q = 0, _len7 = glyphIDs.length; _q < _len7; _q++) {\n\t            id = glyphIDs[_q];\n\t            subtable.writeUInt16(id);\n\t          }\n\t          return result = {\n\t            charMap: charMap,\n\t            subtable: subtable.data,\n\t            maxGlyphID: nextID + 1\n\t          };\n\t      }\n\t    };\n\n\t    return CmapEntry;\n\n\t  })();\n\n\t  module.exports = CmapTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, HmtxTable, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  HmtxTable = (function(_super) {\n\t    __extends(HmtxTable, _super);\n\n\t    function HmtxTable() {\n\t      return HmtxTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    HmtxTable.prototype.tag = 'hmtx';\n\n\t    HmtxTable.prototype.parse = function(data) {\n\t      var i, last, lsbCount, m, _i, _j, _ref, _results;\n\t      data.pos = this.offset;\n\t      this.metrics = [];\n\t      for (i = _i = 0, _ref = this.file.hhea.numberOfMetrics; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        this.metrics.push({\n\t          advance: data.readUInt16(),\n\t          lsb: data.readInt16()\n\t        });\n\t      }\n\t      lsbCount = this.file.maxp.numGlyphs - this.file.hhea.numberOfMetrics;\n\t      this.leftSideBearings = (function() {\n\t        var _j, _results;\n\t        _results = [];\n\t        for (i = _j = 0; 0 <= lsbCount ? _j < lsbCount : _j > lsbCount; i = 0 <= lsbCount ? ++_j : --_j) {\n\t          _results.push(data.readInt16());\n\t        }\n\t        return _results;\n\t      })();\n\t      this.widths = (function() {\n\t        var _j, _len, _ref1, _results;\n\t        _ref1 = this.metrics;\n\t        _results = [];\n\t        for (_j = 0, _len = _ref1.length; _j < _len; _j++) {\n\t          m = _ref1[_j];\n\t          _results.push(m.advance);\n\t        }\n\t        return _results;\n\t      }).call(this);\n\t      last = this.widths[this.widths.length - 1];\n\t      _results = [];\n\t      for (i = _j = 0; 0 <= lsbCount ? _j < lsbCount : _j > lsbCount; i = 0 <= lsbCount ? ++_j : --_j) {\n\t        _results.push(this.widths.push(last));\n\t      }\n\t      return _results;\n\t    };\n\n\t    HmtxTable.prototype.forGlyph = function(id) {\n\t      var metrics;\n\t      if (id in this.metrics) {\n\t        return this.metrics[id];\n\t      }\n\t      return metrics = {\n\t        advance: this.metrics[this.metrics.length - 1].advance,\n\t        lsb: this.leftSideBearings[id - this.metrics.length]\n\t      };\n\t    };\n\n\t    HmtxTable.prototype.encode = function(mapping) {\n\t      var id, metric, table, _i, _len;\n\t      table = new Data;\n\t      for (_i = 0, _len = mapping.length; _i < _len; _i++) {\n\t        id = mapping[_i];\n\t        metric = this.forGlyph(id);\n\t        table.writeUInt16(metric.advance);\n\t        table.writeUInt16(metric.lsb);\n\t      }\n\t      return table.data;\n\t    };\n\n\t    return HmtxTable;\n\n\t  })(Table);\n\n\t  module.exports = HmtxTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, HheaTable, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  HheaTable = (function(_super) {\n\t    __extends(HheaTable, _super);\n\n\t    function HheaTable() {\n\t      return HheaTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    HheaTable.prototype.tag = 'hhea';\n\n\t    HheaTable.prototype.parse = function(data) {\n\t      data.pos = this.offset;\n\t      this.version = data.readInt();\n\t      this.ascender = data.readShort();\n\t      this.decender = data.readShort();\n\t      this.lineGap = data.readShort();\n\t      this.advanceWidthMax = data.readShort();\n\t      this.minLeftSideBearing = data.readShort();\n\t      this.minRightSideBearing = data.readShort();\n\t      this.xMaxExtent = data.readShort();\n\t      this.caretSlopeRise = data.readShort();\n\t      this.caretSlopeRun = data.readShort();\n\t      this.caretOffset = data.readShort();\n\t      data.pos += 4 * 2;\n\t      this.metricDataFormat = data.readShort();\n\t      return this.numberOfMetrics = data.readUInt16();\n\t    };\n\n\t    HheaTable.prototype.encode = function(ids) {\n\t      var i, table, _i, _ref;\n\t      table = new Data;\n\t      table.writeInt(this.version);\n\t      table.writeShort(this.ascender);\n\t      table.writeShort(this.decender);\n\t      table.writeShort(this.lineGap);\n\t      table.writeShort(this.advanceWidthMax);\n\t      table.writeShort(this.minLeftSideBearing);\n\t      table.writeShort(this.minRightSideBearing);\n\t      table.writeShort(this.xMaxExtent);\n\t      table.writeShort(this.caretSlopeRise);\n\t      table.writeShort(this.caretSlopeRun);\n\t      table.writeShort(this.caretOffset);\n\t      for (i = _i = 0, _ref = 4 * 2; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        table.writeByte(0);\n\t      }\n\t      table.writeShort(this.metricDataFormat);\n\t      table.writeUInt16(ids.length);\n\t      return table.data;\n\t    };\n\n\t    return HheaTable;\n\n\t  })(Table);\n\n\t  module.exports = HheaTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, MaxpTable, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  MaxpTable = (function(_super) {\n\t    __extends(MaxpTable, _super);\n\n\t    function MaxpTable() {\n\t      return MaxpTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    MaxpTable.prototype.tag = 'maxp';\n\n\t    MaxpTable.prototype.parse = function(data) {\n\t      data.pos = this.offset;\n\t      this.version = data.readInt();\n\t      this.numGlyphs = data.readUInt16();\n\t      this.maxPoints = data.readUInt16();\n\t      this.maxContours = data.readUInt16();\n\t      this.maxCompositePoints = data.readUInt16();\n\t      this.maxComponentContours = data.readUInt16();\n\t      this.maxZones = data.readUInt16();\n\t      this.maxTwilightPoints = data.readUInt16();\n\t      this.maxStorage = data.readUInt16();\n\t      this.maxFunctionDefs = data.readUInt16();\n\t      this.maxInstructionDefs = data.readUInt16();\n\t      this.maxStackElements = data.readUInt16();\n\t      this.maxSizeOfInstructions = data.readUInt16();\n\t      this.maxComponentElements = data.readUInt16();\n\t      return this.maxComponentDepth = data.readUInt16();\n\t    };\n\n\t    MaxpTable.prototype.encode = function(ids) {\n\t      var table;\n\t      table = new Data;\n\t      table.writeInt(this.version);\n\t      table.writeUInt16(ids.length);\n\t      table.writeUInt16(this.maxPoints);\n\t      table.writeUInt16(this.maxContours);\n\t      table.writeUInt16(this.maxCompositePoints);\n\t      table.writeUInt16(this.maxComponentContours);\n\t      table.writeUInt16(this.maxZones);\n\t      table.writeUInt16(this.maxTwilightPoints);\n\t      table.writeUInt16(this.maxStorage);\n\t      table.writeUInt16(this.maxFunctionDefs);\n\t      table.writeUInt16(this.maxInstructionDefs);\n\t      table.writeUInt16(this.maxStackElements);\n\t      table.writeUInt16(this.maxSizeOfInstructions);\n\t      table.writeUInt16(this.maxComponentElements);\n\t      table.writeUInt16(this.maxComponentDepth);\n\t      return table.data;\n\t    };\n\n\t    return MaxpTable;\n\n\t  })(Table);\n\n\t  module.exports = MaxpTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, PostTable, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  PostTable = (function(_super) {\n\t    var POSTSCRIPT_GLYPHS;\n\n\t    __extends(PostTable, _super);\n\n\t    function PostTable() {\n\t      return PostTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    PostTable.prototype.tag = 'post';\n\n\t    PostTable.prototype.parse = function(data) {\n\t      var i, length, numberOfGlyphs, _i, _results;\n\t      data.pos = this.offset;\n\t      this.format = data.readInt();\n\t      this.italicAngle = data.readInt();\n\t      this.underlinePosition = data.readShort();\n\t      this.underlineThickness = data.readShort();\n\t      this.isFixedPitch = data.readInt();\n\t      this.minMemType42 = data.readInt();\n\t      this.maxMemType42 = data.readInt();\n\t      this.minMemType1 = data.readInt();\n\t      this.maxMemType1 = data.readInt();\n\t      switch (this.format) {\n\t        case 0x00010000:\n\t          break;\n\t        case 0x00020000:\n\t          numberOfGlyphs = data.readUInt16();\n\t          this.glyphNameIndex = [];\n\t          for (i = _i = 0; 0 <= numberOfGlyphs ? _i < numberOfGlyphs : _i > numberOfGlyphs; i = 0 <= numberOfGlyphs ? ++_i : --_i) {\n\t            this.glyphNameIndex.push(data.readUInt16());\n\t          }\n\t          this.names = [];\n\t          _results = [];\n\t          while (data.pos < this.offset + this.length) {\n\t            length = data.readByte();\n\t            _results.push(this.names.push(data.readString(length)));\n\t          }\n\t          return _results;\n\t          break;\n\t        case 0x00025000:\n\t          numberOfGlyphs = data.readUInt16();\n\t          return this.offsets = data.read(numberOfGlyphs);\n\t        case 0x00030000:\n\t          break;\n\t        case 0x00040000:\n\t          return this.map = (function() {\n\t            var _j, _ref, _results1;\n\t            _results1 = [];\n\t            for (i = _j = 0, _ref = this.file.maxp.numGlyphs; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {\n\t              _results1.push(data.readUInt32());\n\t            }\n\t            return _results1;\n\t          }).call(this);\n\t      }\n\t    };\n\n\t    PostTable.prototype.glyphFor = function(code) {\n\t      var index;\n\t      switch (this.format) {\n\t        case 0x00010000:\n\t          return POSTSCRIPT_GLYPHS[code] || '.notdef';\n\t        case 0x00020000:\n\t          index = this.glyphNameIndex[code];\n\t          if (index <= 257) {\n\t            return POSTSCRIPT_GLYPHS[index];\n\t          } else {\n\t            return this.names[index - 258] || '.notdef';\n\t          }\n\t          break;\n\t        case 0x00025000:\n\t          return POSTSCRIPT_GLYPHS[code + this.offsets[code]] || '.notdef';\n\t        case 0x00030000:\n\t          return '.notdef';\n\t        case 0x00040000:\n\t          return this.map[code] || 0xFFFF;\n\t      }\n\t    };\n\n\t    PostTable.prototype.encode = function(mapping) {\n\t      var id, index, indexes, position, post, raw, string, strings, table, _i, _j, _k, _len, _len1, _len2;\n\t      if (!this.exists) {\n\t        return null;\n\t      }\n\t      raw = this.raw();\n\t      if (this.format === 0x00030000) {\n\t        return raw;\n\t      }\n\t      table = new Data(raw.slice(0, 32));\n\t      table.writeUInt32(0x00020000);\n\t      table.pos = 32;\n\t      indexes = [];\n\t      strings = [];\n\t      for (_i = 0, _len = mapping.length; _i < _len; _i++) {\n\t        id = mapping[_i];\n\t        post = this.glyphFor(id);\n\t        position = POSTSCRIPT_GLYPHS.indexOf(post);\n\t        if (position !== -1) {\n\t          indexes.push(position);\n\t        } else {\n\t          indexes.push(257 + strings.length);\n\t          strings.push(post);\n\t        }\n\t      }\n\t      table.writeUInt16(Object.keys(mapping).length);\n\t      for (_j = 0, _len1 = indexes.length; _j < _len1; _j++) {\n\t        index = indexes[_j];\n\t        table.writeUInt16(index);\n\t      }\n\t      for (_k = 0, _len2 = strings.length; _k < _len2; _k++) {\n\t        string = strings[_k];\n\t        table.writeByte(string.length);\n\t        table.writeString(string);\n\t      }\n\t      return table.data;\n\t    };\n\n\t    POSTSCRIPT_GLYPHS = '.notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent\\nampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash\\nzero one two three four five six seven eight nine colon semicolon less equal greater\\nquestion at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\nbracketleft backslash bracketright asciicircum underscore grave\\na b c d e f g h i j k l m n o p q r s t u v w x y z\\nbraceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis\\nUdieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave\\necircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve\\nocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent\\nsterling section bullet paragraph germandbls registered copyright trademark acute\\ndieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu\\npartialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash\\nquestiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft\\nguillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash\\nquotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis\\nfraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered\\nquotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis\\nEgrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute\\nUcircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla\\nhungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth\\neth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior\\nonehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla\\nCacute cacute Ccaron ccaron dcroat'.split(/\\s+/g);\n\n\t    return PostTable;\n\n\t  })(Table);\n\n\t  module.exports = PostTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var OS2Table, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  OS2Table = (function(_super) {\n\t    __extends(OS2Table, _super);\n\n\t    function OS2Table() {\n\t      return OS2Table.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    OS2Table.prototype.tag = 'OS/2';\n\n\t    OS2Table.prototype.parse = function(data) {\n\t      var i;\n\t      data.pos = this.offset;\n\t      this.version = data.readUInt16();\n\t      this.averageCharWidth = data.readShort();\n\t      this.weightClass = data.readUInt16();\n\t      this.widthClass = data.readUInt16();\n\t      this.type = data.readShort();\n\t      this.ySubscriptXSize = data.readShort();\n\t      this.ySubscriptYSize = data.readShort();\n\t      this.ySubscriptXOffset = data.readShort();\n\t      this.ySubscriptYOffset = data.readShort();\n\t      this.ySuperscriptXSize = data.readShort();\n\t      this.ySuperscriptYSize = data.readShort();\n\t      this.ySuperscriptXOffset = data.readShort();\n\t      this.ySuperscriptYOffset = data.readShort();\n\t      this.yStrikeoutSize = data.readShort();\n\t      this.yStrikeoutPosition = data.readShort();\n\t      this.familyClass = data.readShort();\n\t      this.panose = (function() {\n\t        var _i, _results;\n\t        _results = [];\n\t        for (i = _i = 0; _i < 10; i = ++_i) {\n\t          _results.push(data.readByte());\n\t        }\n\t        return _results;\n\t      })();\n\t      this.charRange = (function() {\n\t        var _i, _results;\n\t        _results = [];\n\t        for (i = _i = 0; _i < 4; i = ++_i) {\n\t          _results.push(data.readInt());\n\t        }\n\t        return _results;\n\t      })();\n\t      this.vendorID = data.readString(4);\n\t      this.selection = data.readShort();\n\t      this.firstCharIndex = data.readShort();\n\t      this.lastCharIndex = data.readShort();\n\t      if (this.version > 0) {\n\t        this.ascent = data.readShort();\n\t        this.descent = data.readShort();\n\t        this.lineGap = data.readShort();\n\t        this.winAscent = data.readShort();\n\t        this.winDescent = data.readShort();\n\t        this.codePageRange = (function() {\n\t          var _i, _results;\n\t          _results = [];\n\t          for (i = _i = 0; _i < 2; i = ++_i) {\n\t            _results.push(data.readInt());\n\t          }\n\t          return _results;\n\t        })();\n\t        if (this.version > 1) {\n\t          this.xHeight = data.readShort();\n\t          this.capHeight = data.readShort();\n\t          this.defaultChar = data.readShort();\n\t          this.breakChar = data.readShort();\n\t          return this.maxContext = data.readShort();\n\t        }\n\t      }\n\t    };\n\n\t    OS2Table.prototype.encode = function() {\n\t      return this.raw();\n\t    };\n\n\t    return OS2Table;\n\n\t  })(Table);\n\n\t  module.exports = OS2Table;\n\n\t}).call(this);\n\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, LocaTable, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  LocaTable = (function(_super) {\n\t    __extends(LocaTable, _super);\n\n\t    function LocaTable() {\n\t      return LocaTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    LocaTable.prototype.tag = 'loca';\n\n\t    LocaTable.prototype.parse = function(data) {\n\t      var format, i;\n\t      data.pos = this.offset;\n\t      format = this.file.head.indexToLocFormat;\n\t      if (format === 0) {\n\t        return this.offsets = (function() {\n\t          var _i, _ref, _results;\n\t          _results = [];\n\t          for (i = _i = 0, _ref = this.length; _i < _ref; i = _i += 2) {\n\t            _results.push(data.readUInt16() * 2);\n\t          }\n\t          return _results;\n\t        }).call(this);\n\t      } else {\n\t        return this.offsets = (function() {\n\t          var _i, _ref, _results;\n\t          _results = [];\n\t          for (i = _i = 0, _ref = this.length; _i < _ref; i = _i += 4) {\n\t            _results.push(data.readUInt32());\n\t          }\n\t          return _results;\n\t        }).call(this);\n\t      }\n\t    };\n\n\t    LocaTable.prototype.indexOf = function(id) {\n\t      return this.offsets[id];\n\t    };\n\n\t    LocaTable.prototype.lengthOf = function(id) {\n\t      return this.offsets[id + 1] - this.offsets[id];\n\t    };\n\n\t    LocaTable.prototype.encode = function(offsets) {\n\t      var o, offset, ret, table, _i, _j, _k, _len, _len1, _len2, _ref;\n\t      table = new Data;\n\t      for (_i = 0, _len = offsets.length; _i < _len; _i++) {\n\t        offset = offsets[_i];\n\t        if (!(offset > 0xFFFF)) {\n\t          continue;\n\t        }\n\t        _ref = this.offsets;\n\t        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n\t          o = _ref[_j];\n\t          table.writeUInt32(o);\n\t        }\n\t        return ret = {\n\t          format: 1,\n\t          table: table.data\n\t        };\n\t      }\n\t      for (_k = 0, _len2 = offsets.length; _k < _len2; _k++) {\n\t        o = offsets[_k];\n\t        table.writeUInt16(o / 2);\n\t      }\n\t      return ret = {\n\t        format: 0,\n\t        table: table.data\n\t      };\n\t    };\n\n\t    return LocaTable;\n\n\t  })(Table);\n\n\t  module.exports = LocaTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\n\t/*\n\t * An implementation of Ruby's string.succ method.\n\t * By Devon Govett\n\t *\n\t * Returns the successor to str. The successor is calculated by incrementing characters starting\n\t * from the rightmost alphanumeric (or the rightmost character if there are no alphanumerics) in the\n\t * string. Incrementing a digit always results in another digit, and incrementing a letter results in\n\t * another letter of the same case.\n\t *\n\t * If the increment generates a carry, the character to the left of it is incremented. This\n\t * process repeats until there is no carry, adding an additional character if necessary.\n\t *\n\t * succ(\"abcd\")      == \"abce\"\n\t * succ(\"THX1138\")   == \"THX1139\"\n\t * succ(\"<<koala>>\") == \"<<koalb>>\"\n\t * succ(\"1999zzz\")   == \"2000aaa\"\n\t * succ(\"ZZZ9999\")   == \"AAAA0000\"\n\t */\n\n\t(function() {\n\t  exports.successorOf = function(input) {\n\t    var added, alphabet, carry, i, index, isUpperCase, last, length, next, result;\n\t    alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\t    length = alphabet.length;\n\t    result = input;\n\t    i = input.length;\n\t    while (i >= 0) {\n\t      last = input.charAt(--i);\n\t      if (isNaN(last)) {\n\t        index = alphabet.indexOf(last.toLowerCase());\n\t        if (index === -1) {\n\t          next = last;\n\t          carry = true;\n\t        } else {\n\t          next = alphabet.charAt((index + 1) % length);\n\t          isUpperCase = last === last.toUpperCase();\n\t          if (isUpperCase) {\n\t            next = next.toUpperCase();\n\t          }\n\t          carry = index + 1 >= length;\n\t          if (carry && i === 0) {\n\t            added = isUpperCase ? 'A' : 'a';\n\t            result = added + next + result.slice(1);\n\t            break;\n\t          }\n\t        }\n\t      } else {\n\t        next = +last + 1;\n\t        carry = next > 9;\n\t        if (carry) {\n\t          next = 0;\n\t        }\n\t        if (carry && i === 0) {\n\t          result = '1' + next + result.slice(1);\n\t          break;\n\t        }\n\t      }\n\t      result = result.slice(0, i) + next + result.slice(i + 1);\n\t      if (!carry) {\n\t        break;\n\t      }\n\t    }\n\t    return result;\n\t  };\n\n\t  exports.invert = function(object) {\n\t    var key, ret, val;\n\t    ret = {};\n\t    for (key in object) {\n\t      val = object[key];\n\t      ret[val] = key;\n\t    }\n\t    return ret;\n\t  };\n\n\t}).call(this);\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var CompoundGlyph, Data, GlyfTable, SimpleGlyph, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t    __slice = [].slice;\n\n\t  Table = __webpack_require__(99);\n\n\t  Data = __webpack_require__(34);\n\n\t  GlyfTable = (function(_super) {\n\t    __extends(GlyfTable, _super);\n\n\t    function GlyfTable() {\n\t      return GlyfTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    GlyfTable.prototype.tag = 'glyf';\n\n\t    GlyfTable.prototype.parse = function(data) {\n\t      return this.cache = {};\n\t    };\n\n\t    GlyfTable.prototype.glyphFor = function(id) {\n\t      var data, index, length, loca, numberOfContours, raw, xMax, xMin, yMax, yMin;\n\t      if (id in this.cache) {\n\t        return this.cache[id];\n\t      }\n\t      loca = this.file.loca;\n\t      data = this.file.contents;\n\t      index = loca.indexOf(id);\n\t      length = loca.lengthOf(id);\n\t      if (length === 0) {\n\t        return this.cache[id] = null;\n\t      }\n\t      data.pos = this.offset + index;\n\t      raw = new Data(data.read(length));\n\t      numberOfContours = raw.readShort();\n\t      xMin = raw.readShort();\n\t      yMin = raw.readShort();\n\t      xMax = raw.readShort();\n\t      yMax = raw.readShort();\n\t      if (numberOfContours === -1) {\n\t        this.cache[id] = new CompoundGlyph(raw, xMin, yMin, xMax, yMax);\n\t      } else {\n\t        this.cache[id] = new SimpleGlyph(raw, numberOfContours, xMin, yMin, xMax, yMax);\n\t      }\n\t      return this.cache[id];\n\t    };\n\n\t    GlyfTable.prototype.encode = function(glyphs, mapping, old2new) {\n\t      var glyph, id, offsets, table, _i, _len;\n\t      table = [];\n\t      offsets = [];\n\t      for (_i = 0, _len = mapping.length; _i < _len; _i++) {\n\t        id = mapping[_i];\n\t        glyph = glyphs[id];\n\t        offsets.push(table.length);\n\t        if (glyph) {\n\t          table = table.concat(glyph.encode(old2new));\n\t        }\n\t      }\n\t      offsets.push(table.length);\n\t      return {\n\t        table: table,\n\t        offsets: offsets\n\t      };\n\t    };\n\n\t    return GlyfTable;\n\n\t  })(Table);\n\n\t  SimpleGlyph = (function() {\n\t    function SimpleGlyph(raw, numberOfContours, xMin, yMin, xMax, yMax) {\n\t      this.raw = raw;\n\t      this.numberOfContours = numberOfContours;\n\t      this.xMin = xMin;\n\t      this.yMin = yMin;\n\t      this.xMax = xMax;\n\t      this.yMax = yMax;\n\t      this.compound = false;\n\t    }\n\n\t    SimpleGlyph.prototype.encode = function() {\n\t      return this.raw.data;\n\t    };\n\n\t    return SimpleGlyph;\n\n\t  })();\n\n\t  CompoundGlyph = (function() {\n\t    var ARG_1_AND_2_ARE_WORDS, MORE_COMPONENTS, WE_HAVE_AN_X_AND_Y_SCALE, WE_HAVE_A_SCALE, WE_HAVE_A_TWO_BY_TWO, WE_HAVE_INSTRUCTIONS;\n\n\t    ARG_1_AND_2_ARE_WORDS = 0x0001;\n\n\t    WE_HAVE_A_SCALE = 0x0008;\n\n\t    MORE_COMPONENTS = 0x0020;\n\n\t    WE_HAVE_AN_X_AND_Y_SCALE = 0x0040;\n\n\t    WE_HAVE_A_TWO_BY_TWO = 0x0080;\n\n\t    WE_HAVE_INSTRUCTIONS = 0x0100;\n\n\t    function CompoundGlyph(raw, xMin, yMin, xMax, yMax) {\n\t      var data, flags;\n\t      this.raw = raw;\n\t      this.xMin = xMin;\n\t      this.yMin = yMin;\n\t      this.xMax = xMax;\n\t      this.yMax = yMax;\n\t      this.compound = true;\n\t      this.glyphIDs = [];\n\t      this.glyphOffsets = [];\n\t      data = this.raw;\n\t      while (true) {\n\t        flags = data.readShort();\n\t        this.glyphOffsets.push(data.pos);\n\t        this.glyphIDs.push(data.readShort());\n\t        if (!(flags & MORE_COMPONENTS)) {\n\t          break;\n\t        }\n\t        if (flags & ARG_1_AND_2_ARE_WORDS) {\n\t          data.pos += 4;\n\t        } else {\n\t          data.pos += 2;\n\t        }\n\t        if (flags & WE_HAVE_A_TWO_BY_TWO) {\n\t          data.pos += 8;\n\t        } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n\t          data.pos += 4;\n\t        } else if (flags & WE_HAVE_A_SCALE) {\n\t          data.pos += 2;\n\t        }\n\t      }\n\t    }\n\n\t    CompoundGlyph.prototype.encode = function(mapping) {\n\t      var i, id, result, _i, _len, _ref;\n\t      result = new Data(__slice.call(this.raw.data));\n\t      _ref = this.glyphIDs;\n\t      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n\t        id = _ref[i];\n\t        result.pos = this.glyphOffsets[i];\n\t        result.writeShort(mapping[id]);\n\t      }\n\t      return result.data;\n\t    };\n\n\t    return CompoundGlyph;\n\n\t  })();\n\n\t  module.exports = GlyfTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var CI_BRK, CP_BRK, DI_BRK, IN_BRK, PR_BRK;\n\n\t  exports.DI_BRK = DI_BRK = 0;\n\n\t  exports.IN_BRK = IN_BRK = 1;\n\n\t  exports.CI_BRK = CI_BRK = 2;\n\n\t  exports.CP_BRK = CP_BRK = 3;\n\n\t  exports.PR_BRK = PR_BRK = 4;\n\n\t  exports.pairTable = [[PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, CP_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, PR_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK]];\n\n\t}).call(this);\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var AI, AL, B2, BA, BB, BK, CB, CJ, CL, CM, CP, CR, EX, GL, H2, H3, HL, HY, ID, IN, IS, JL, JT, JV, LF, NL, NS, NU, OP, PO, PR, QU, RI, SA, SG, SP, SY, WJ, XX, ZW;\n\n\t  exports.OP = OP = 0;\n\n\t  exports.CL = CL = 1;\n\n\t  exports.CP = CP = 2;\n\n\t  exports.QU = QU = 3;\n\n\t  exports.GL = GL = 4;\n\n\t  exports.NS = NS = 5;\n\n\t  exports.EX = EX = 6;\n\n\t  exports.SY = SY = 7;\n\n\t  exports.IS = IS = 8;\n\n\t  exports.PR = PR = 9;\n\n\t  exports.PO = PO = 10;\n\n\t  exports.NU = NU = 11;\n\n\t  exports.AL = AL = 12;\n\n\t  exports.HL = HL = 13;\n\n\t  exports.ID = ID = 14;\n\n\t  exports.IN = IN = 15;\n\n\t  exports.HY = HY = 16;\n\n\t  exports.BA = BA = 17;\n\n\t  exports.BB = BB = 18;\n\n\t  exports.B2 = B2 = 19;\n\n\t  exports.ZW = ZW = 20;\n\n\t  exports.CM = CM = 21;\n\n\t  exports.WJ = WJ = 22;\n\n\t  exports.H2 = H2 = 23;\n\n\t  exports.H3 = H3 = 24;\n\n\t  exports.JL = JL = 25;\n\n\t  exports.JV = JV = 26;\n\n\t  exports.JT = JT = 27;\n\n\t  exports.RI = RI = 28;\n\n\t  exports.AI = AI = 29;\n\n\t  exports.BK = BK = 30;\n\n\t  exports.CB = CB = 31;\n\n\t  exports.CJ = CJ = 32;\n\n\t  exports.CR = CR = 33;\n\n\t  exports.LF = LF = 34;\n\n\t  exports.NL = NL = 35;\n\n\t  exports.SA = SA = 36;\n\n\t  exports.SG = SG = 37;\n\n\t  exports.SP = SP = 38;\n\n\t  exports.XX = XX = 39;\n\n\t}).call(this);\n\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\n\tvar utils = __webpack_require__(98);\n\n\t/* Public constants ==========================================================*/\n\t/* ===========================================================================*/\n\n\n\t//var Z_FILTERED          = 1;\n\t//var Z_HUFFMAN_ONLY      = 2;\n\t//var Z_RLE               = 3;\n\tvar Z_FIXED               = 4;\n\t//var Z_DEFAULT_STRATEGY  = 0;\n\n\t/* Possible values of the data_type field (though see inflate()) */\n\tvar Z_BINARY              = 0;\n\tvar Z_TEXT                = 1;\n\t//var Z_ASCII             = 1; // = Z_TEXT\n\tvar Z_UNKNOWN             = 2;\n\n\t/*============================================================================*/\n\n\n\tfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\t// From zutil.h\n\n\tvar STORED_BLOCK = 0;\n\tvar STATIC_TREES = 1;\n\tvar DYN_TREES    = 2;\n\t/* The three kinds of block type */\n\n\tvar MIN_MATCH    = 3;\n\tvar MAX_MATCH    = 258;\n\t/* The minimum and maximum match lengths */\n\n\t// From deflate.h\n\t/* ===========================================================================\n\t * Internal compression state.\n\t */\n\n\tvar LENGTH_CODES  = 29;\n\t/* number of length codes, not counting the special END_BLOCK code */\n\n\tvar LITERALS      = 256;\n\t/* number of literal bytes 0..255 */\n\n\tvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n\t/* number of Literal or Length codes, including the END_BLOCK code */\n\n\tvar D_CODES       = 30;\n\t/* number of distance codes */\n\n\tvar BL_CODES      = 19;\n\t/* number of codes used to transfer the bit lengths */\n\n\tvar HEAP_SIZE     = 2*L_CODES + 1;\n\t/* maximum heap size */\n\n\tvar MAX_BITS      = 15;\n\t/* All codes must not exceed MAX_BITS bits */\n\n\tvar Buf_size      = 16;\n\t/* size of bit buffer in bi_buf */\n\n\n\t/* ===========================================================================\n\t * Constants\n\t */\n\n\tvar MAX_BL_BITS = 7;\n\t/* Bit length codes must not exceed MAX_BL_BITS bits */\n\n\tvar END_BLOCK   = 256;\n\t/* end of block literal code */\n\n\tvar REP_3_6     = 16;\n\t/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\n\tvar REPZ_3_10   = 17;\n\t/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\n\tvar REPZ_11_138 = 18;\n\t/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n\tvar extra_lbits =   /* extra bits for each length code */\n\t  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\n\tvar extra_dbits =   /* extra bits for each distance code */\n\t  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\n\tvar extra_blbits =  /* extra bits for each bit length code */\n\t  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\n\tvar bl_order =\n\t  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n\t/* The lengths of the bit length codes are sent in order of decreasing\n\t * probability, to avoid transmitting the lengths for unused bit length codes.\n\t */\n\n\t/* ===========================================================================\n\t * Local data. These are initialized only once.\n\t */\n\n\t// We pre-fill arrays with 0 to avoid uninitialized gaps\n\n\tvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n\t// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\n\tvar static_ltree  = new Array((L_CODES+2) * 2);\n\tzero(static_ltree);\n\t/* The static literal tree. Since the bit lengths are imposed, there is no\n\t * need for the L_CODES extra codes used during heap construction. However\n\t * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n\t * below).\n\t */\n\n\tvar static_dtree  = new Array(D_CODES * 2);\n\tzero(static_dtree);\n\t/* The static distance tree. (Actually a trivial tree since all codes use\n\t * 5 bits.)\n\t */\n\n\tvar _dist_code    = new Array(DIST_CODE_LEN);\n\tzero(_dist_code);\n\t/* Distance codes. The first 256 values correspond to the distances\n\t * 3 .. 258, the last 256 values correspond to the top 8 bits of\n\t * the 15 bit distances.\n\t */\n\n\tvar _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);\n\tzero(_length_code);\n\t/* length code for each normalized match length (0 == MIN_MATCH) */\n\n\tvar base_length   = new Array(LENGTH_CODES);\n\tzero(base_length);\n\t/* First normalized length for each code (0 = MIN_MATCH) */\n\n\tvar base_dist     = new Array(D_CODES);\n\tzero(base_dist);\n\t/* First normalized distance for each code (0 = distance of 1) */\n\n\n\tvar StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {\n\n\t  this.static_tree  = static_tree;  /* static tree or NULL */\n\t  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n\t  this.extra_base   = extra_base;   /* base index for extra_bits */\n\t  this.elems        = elems;        /* max number of elements in the tree */\n\t  this.max_length   = max_length;   /* max bit length for the codes */\n\n\t  // show if `static_tree` has data or dummy - needed for monomorphic objects\n\t  this.has_stree    = static_tree && static_tree.length;\n\t};\n\n\n\tvar static_l_desc;\n\tvar static_d_desc;\n\tvar static_bl_desc;\n\n\n\tvar TreeDesc = function(dyn_tree, stat_desc) {\n\t  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n\t  this.max_code = 0;            /* largest code with non zero frequency */\n\t  this.stat_desc = stat_desc;   /* the corresponding static tree */\n\t};\n\n\n\n\tfunction d_code(dist) {\n\t  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n\t}\n\n\n\t/* ===========================================================================\n\t * Output a short LSB first on the stream.\n\t * IN assertion: there is enough room in pendingBuf.\n\t */\n\tfunction put_short (s, w) {\n\t//    put_byte(s, (uch)((w) & 0xff));\n\t//    put_byte(s, (uch)((ush)(w) >> 8));\n\t  s.pending_buf[s.pending++] = (w) & 0xff;\n\t  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n\t}\n\n\n\t/* ===========================================================================\n\t * Send a value on a given number of bits.\n\t * IN assertion: length <= 16 and value fits in length bits.\n\t */\n\tfunction send_bits(s, value, length) {\n\t  if (s.bi_valid > (Buf_size - length)) {\n\t    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n\t    put_short(s, s.bi_buf);\n\t    s.bi_buf = value >> (Buf_size - s.bi_valid);\n\t    s.bi_valid += length - Buf_size;\n\t  } else {\n\t    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n\t    s.bi_valid += length;\n\t  }\n\t}\n\n\n\tfunction send_code(s, c, tree) {\n\t  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);\n\t}\n\n\n\t/* ===========================================================================\n\t * Reverse the first len bits of a code, using straightforward code (a faster\n\t * method would use a table)\n\t * IN assertion: 1 <= len <= 15\n\t */\n\tfunction bi_reverse(code, len) {\n\t  var res = 0;\n\t  do {\n\t    res |= code & 1;\n\t    code >>>= 1;\n\t    res <<= 1;\n\t  } while (--len > 0);\n\t  return res >>> 1;\n\t}\n\n\n\t/* ===========================================================================\n\t * Flush the bit buffer, keeping at most 7 bits in it.\n\t */\n\tfunction bi_flush(s) {\n\t  if (s.bi_valid === 16) {\n\t    put_short(s, s.bi_buf);\n\t    s.bi_buf = 0;\n\t    s.bi_valid = 0;\n\n\t  } else if (s.bi_valid >= 8) {\n\t    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n\t    s.bi_buf >>= 8;\n\t    s.bi_valid -= 8;\n\t  }\n\t}\n\n\n\t/* ===========================================================================\n\t * Compute the optimal bit lengths for a tree and update the total bit length\n\t * for the current block.\n\t * IN assertion: the fields freq and dad are set, heap[heap_max] and\n\t *    above are the tree nodes sorted by increasing frequency.\n\t * OUT assertions: the field len is set to the optimal bit length, the\n\t *     array bl_count contains the frequencies for each bit length.\n\t *     The length opt_len is updated; static_len is also updated if stree is\n\t *     not null.\n\t */\n\tfunction gen_bitlen(s, desc)\n\t//    deflate_state *s;\n\t//    tree_desc *desc;    /* the tree descriptor */\n\t{\n\t  var tree            = desc.dyn_tree;\n\t  var max_code        = desc.max_code;\n\t  var stree           = desc.stat_desc.static_tree;\n\t  var has_stree       = desc.stat_desc.has_stree;\n\t  var extra           = desc.stat_desc.extra_bits;\n\t  var base            = desc.stat_desc.extra_base;\n\t  var max_length      = desc.stat_desc.max_length;\n\t  var h;              /* heap index */\n\t  var n, m;           /* iterate over the tree elements */\n\t  var bits;           /* bit length */\n\t  var xbits;          /* extra bits */\n\t  var f;              /* frequency */\n\t  var overflow = 0;   /* number of elements with bit length too large */\n\n\t  for (bits = 0; bits <= MAX_BITS; bits++) {\n\t    s.bl_count[bits] = 0;\n\t  }\n\n\t  /* In a first pass, compute the optimal bit lengths (which may\n\t   * overflow in the case of the bit length tree).\n\t   */\n\t  tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n\t  for (h = s.heap_max+1; h < HEAP_SIZE; h++) {\n\t    n = s.heap[h];\n\t    bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n\t    if (bits > max_length) {\n\t      bits = max_length;\n\t      overflow++;\n\t    }\n\t    tree[n*2 + 1]/*.Len*/ = bits;\n\t    /* We overwrite tree[n].Dad which is no longer needed */\n\n\t    if (n > max_code) { continue; } /* not a leaf node */\n\n\t    s.bl_count[bits]++;\n\t    xbits = 0;\n\t    if (n >= base) {\n\t      xbits = extra[n-base];\n\t    }\n\t    f = tree[n * 2]/*.Freq*/;\n\t    s.opt_len += f * (bits + xbits);\n\t    if (has_stree) {\n\t      s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);\n\t    }\n\t  }\n\t  if (overflow === 0) { return; }\n\n\t  // Trace((stderr,\"\\nbit length overflow\\n\"));\n\t  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n\t  /* Find the first bit length which could increase: */\n\t  do {\n\t    bits = max_length-1;\n\t    while (s.bl_count[bits] === 0) { bits--; }\n\t    s.bl_count[bits]--;      /* move one leaf down the tree */\n\t    s.bl_count[bits+1] += 2; /* move one overflow item as its brother */\n\t    s.bl_count[max_length]--;\n\t    /* The brother of the overflow item also moves one step up,\n\t     * but this does not affect bl_count[max_length]\n\t     */\n\t    overflow -= 2;\n\t  } while (overflow > 0);\n\n\t  /* Now recompute all bit lengths, scanning in increasing frequency.\n\t   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n\t   * lengths instead of fixing only the wrong ones. This idea is taken\n\t   * from 'ar' written by Haruhiko Okumura.)\n\t   */\n\t  for (bits = max_length; bits !== 0; bits--) {\n\t    n = s.bl_count[bits];\n\t    while (n !== 0) {\n\t      m = s.heap[--h];\n\t      if (m > max_code) { continue; }\n\t      if (tree[m*2 + 1]/*.Len*/ !== bits) {\n\t        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n\t        s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;\n\t        tree[m*2 + 1]/*.Len*/ = bits;\n\t      }\n\t      n--;\n\t    }\n\t  }\n\t}\n\n\n\t/* ===========================================================================\n\t * Generate the codes for a given tree and bit counts (which need not be\n\t * optimal).\n\t * IN assertion: the array bl_count contains the bit length statistics for\n\t * the given tree and the field len is set for all tree elements.\n\t * OUT assertion: the field code is set for all tree elements of non\n\t *     zero code length.\n\t */\n\tfunction gen_codes(tree, max_code, bl_count)\n\t//    ct_data *tree;             /* the tree to decorate */\n\t//    int max_code;              /* largest code with non zero frequency */\n\t//    ushf *bl_count;            /* number of codes at each bit length */\n\t{\n\t  var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */\n\t  var code = 0;              /* running code value */\n\t  var bits;                  /* bit index */\n\t  var n;                     /* code index */\n\n\t  /* The distribution counts are first used to generate the code values\n\t   * without bit reversal.\n\t   */\n\t  for (bits = 1; bits <= MAX_BITS; bits++) {\n\t    next_code[bits] = code = (code + bl_count[bits-1]) << 1;\n\t  }\n\t  /* Check that the bit counts in bl_count are consistent. The last code\n\t   * must be all ones.\n\t   */\n\t  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n\t  //        \"inconsistent bit counts\");\n\t  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n\t  for (n = 0;  n <= max_code; n++) {\n\t    var len = tree[n*2 + 1]/*.Len*/;\n\t    if (len === 0) { continue; }\n\t    /* Now reverse the bits */\n\t    tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n\t    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n\t    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n\t  }\n\t}\n\n\n\t/* ===========================================================================\n\t * Initialize the various 'constant' tables.\n\t */\n\tfunction tr_static_init() {\n\t  var n;        /* iterates over tree elements */\n\t  var bits;     /* bit counter */\n\t  var length;   /* length value */\n\t  var code;     /* code value */\n\t  var dist;     /* distance index */\n\t  var bl_count = new Array(MAX_BITS+1);\n\t  /* number of codes at each bit length for an optimal tree */\n\n\t  // do check in _tr_init()\n\t  //if (static_init_done) return;\n\n\t  /* For some embedded targets, global variables are not initialized: */\n\t/*#ifdef NO_INIT_GLOBAL_POINTERS\n\t  static_l_desc.static_tree = static_ltree;\n\t  static_l_desc.extra_bits = extra_lbits;\n\t  static_d_desc.static_tree = static_dtree;\n\t  static_d_desc.extra_bits = extra_dbits;\n\t  static_bl_desc.extra_bits = extra_blbits;\n\t#endif*/\n\n\t  /* Initialize the mapping length (0..255) -> length code (0..28) */\n\t  length = 0;\n\t  for (code = 0; code < LENGTH_CODES-1; code++) {\n\t    base_length[code] = length;\n\t    for (n = 0; n < (1<<extra_lbits[code]); n++) {\n\t      _length_code[length++] = code;\n\t    }\n\t  }\n\t  //Assert (length == 256, \"tr_static_init: length != 256\");\n\t  /* Note that the length 255 (match length 258) can be represented\n\t   * in two different ways: code 284 + 5 bits or code 285, so we\n\t   * overwrite length_code[255] to use the best encoding:\n\t   */\n\t  _length_code[length-1] = code;\n\n\t  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n\t  dist = 0;\n\t  for (code = 0 ; code < 16; code++) {\n\t    base_dist[code] = dist;\n\t    for (n = 0; n < (1<<extra_dbits[code]); n++) {\n\t      _dist_code[dist++] = code;\n\t    }\n\t  }\n\t  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n\t  dist >>= 7; /* from now on, all distances are divided by 128 */\n\t  for ( ; code < D_CODES; code++) {\n\t    base_dist[code] = dist << 7;\n\t    for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {\n\t      _dist_code[256 + dist++] = code;\n\t    }\n\t  }\n\t  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n\t  /* Construct the codes of the static literal tree */\n\t  for (bits = 0; bits <= MAX_BITS; bits++) {\n\t    bl_count[bits] = 0;\n\t  }\n\n\t  n = 0;\n\t  while (n <= 143) {\n\t    static_ltree[n*2 + 1]/*.Len*/ = 8;\n\t    n++;\n\t    bl_count[8]++;\n\t  }\n\t  while (n <= 255) {\n\t    static_ltree[n*2 + 1]/*.Len*/ = 9;\n\t    n++;\n\t    bl_count[9]++;\n\t  }\n\t  while (n <= 279) {\n\t    static_ltree[n*2 + 1]/*.Len*/ = 7;\n\t    n++;\n\t    bl_count[7]++;\n\t  }\n\t  while (n <= 287) {\n\t    static_ltree[n*2 + 1]/*.Len*/ = 8;\n\t    n++;\n\t    bl_count[8]++;\n\t  }\n\t  /* Codes 286 and 287 do not exist, but we must include them in the\n\t   * tree construction to get a canonical Huffman tree (longest code\n\t   * all ones)\n\t   */\n\t  gen_codes(static_ltree, L_CODES+1, bl_count);\n\n\t  /* The static distance tree is trivial: */\n\t  for (n = 0; n < D_CODES; n++) {\n\t    static_dtree[n*2 + 1]/*.Len*/ = 5;\n\t    static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);\n\t  }\n\n\t  // Now data ready and we can init static trees\n\t  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);\n\t  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n\t  static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n\t  //static_init_done = true;\n\t}\n\n\n\t/* ===========================================================================\n\t * Initialize a new block.\n\t */\n\tfunction init_block(s) {\n\t  var n; /* iterates over tree elements */\n\n\t  /* Initialize the trees. */\n\t  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }\n\t  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }\n\t  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }\n\n\t  s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;\n\t  s.opt_len = s.static_len = 0;\n\t  s.last_lit = s.matches = 0;\n\t}\n\n\n\t/* ===========================================================================\n\t * Flush the bit buffer and align the output on a byte boundary\n\t */\n\tfunction bi_windup(s)\n\t{\n\t  if (s.bi_valid > 8) {\n\t    put_short(s, s.bi_buf);\n\t  } else if (s.bi_valid > 0) {\n\t    //put_byte(s, (Byte)s->bi_buf);\n\t    s.pending_buf[s.pending++] = s.bi_buf;\n\t  }\n\t  s.bi_buf = 0;\n\t  s.bi_valid = 0;\n\t}\n\n\t/* ===========================================================================\n\t * Copy a stored block, storing first the length and its\n\t * one's complement if requested.\n\t */\n\tfunction copy_block(s, buf, len, header)\n\t//DeflateState *s;\n\t//charf    *buf;    /* the input data */\n\t//unsigned len;     /* its length */\n\t//int      header;  /* true if block header must be written */\n\t{\n\t  bi_windup(s);        /* align on byte boundary */\n\n\t  if (header) {\n\t    put_short(s, len);\n\t    put_short(s, ~len);\n\t  }\n\t//  while (len--) {\n\t//    put_byte(s, *buf++);\n\t//  }\n\t  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n\t  s.pending += len;\n\t}\n\n\t/* ===========================================================================\n\t * Compares to subtrees, using the tree depth as tie breaker when\n\t * the subtrees have equal frequency. This minimizes the worst case length.\n\t */\n\tfunction smaller(tree, n, m, depth) {\n\t  var _n2 = n*2;\n\t  var _m2 = m*2;\n\t  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n\t         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n\t}\n\n\t/* ===========================================================================\n\t * Restore the heap property by moving down the tree starting at node k,\n\t * exchanging a node with the smallest of its two sons if necessary, stopping\n\t * when the heap property is re-established (each father smaller than its\n\t * two sons).\n\t */\n\tfunction pqdownheap(s, tree, k)\n\t//    deflate_state *s;\n\t//    ct_data *tree;  /* the tree to restore */\n\t//    int k;               /* node to move down */\n\t{\n\t  var v = s.heap[k];\n\t  var j = k << 1;  /* left son of k */\n\t  while (j <= s.heap_len) {\n\t    /* Set j to the smallest of the two sons: */\n\t    if (j < s.heap_len &&\n\t      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {\n\t      j++;\n\t    }\n\t    /* Exit if v is smaller than both sons */\n\t    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n\t    /* Exchange v with the smallest son */\n\t    s.heap[k] = s.heap[j];\n\t    k = j;\n\n\t    /* And continue down the tree, setting j to the left son of k */\n\t    j <<= 1;\n\t  }\n\t  s.heap[k] = v;\n\t}\n\n\n\t// inlined manually\n\t// var SMALLEST = 1;\n\n\t/* ===========================================================================\n\t * Send the block data compressed using the given Huffman trees\n\t */\n\tfunction compress_block(s, ltree, dtree)\n\t//    deflate_state *s;\n\t//    const ct_data *ltree; /* literal tree */\n\t//    const ct_data *dtree; /* distance tree */\n\t{\n\t  var dist;           /* distance of matched string */\n\t  var lc;             /* match length or unmatched char (if dist == 0) */\n\t  var lx = 0;         /* running index in l_buf */\n\t  var code;           /* the code to send */\n\t  var extra;          /* number of extra bits to send */\n\n\t  if (s.last_lit !== 0) {\n\t    do {\n\t      dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);\n\t      lc = s.pending_buf[s.l_buf + lx];\n\t      lx++;\n\n\t      if (dist === 0) {\n\t        send_code(s, lc, ltree); /* send a literal byte */\n\t        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n\t      } else {\n\t        /* Here, lc is the match length - MIN_MATCH */\n\t        code = _length_code[lc];\n\t        send_code(s, code+LITERALS+1, ltree); /* send the length code */\n\t        extra = extra_lbits[code];\n\t        if (extra !== 0) {\n\t          lc -= base_length[code];\n\t          send_bits(s, lc, extra);       /* send the extra length bits */\n\t        }\n\t        dist--; /* dist is now the match distance - 1 */\n\t        code = d_code(dist);\n\t        //Assert (code < D_CODES, \"bad d_code\");\n\n\t        send_code(s, code, dtree);       /* send the distance code */\n\t        extra = extra_dbits[code];\n\t        if (extra !== 0) {\n\t          dist -= base_dist[code];\n\t          send_bits(s, dist, extra);   /* send the extra distance bits */\n\t        }\n\t      } /* literal or match pair ? */\n\n\t      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n\t      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n\t      //       \"pendingBuf overflow\");\n\n\t    } while (lx < s.last_lit);\n\t  }\n\n\t  send_code(s, END_BLOCK, ltree);\n\t}\n\n\n\t/* ===========================================================================\n\t * Construct one Huffman tree and assigns the code bit strings and lengths.\n\t * Update the total bit length for the current block.\n\t * IN assertion: the field freq is set for all tree elements.\n\t * OUT assertions: the fields len and code are set to the optimal bit length\n\t *     and corresponding code. The length opt_len is updated; static_len is\n\t *     also updated if stree is not null. The field max_code is set.\n\t */\n\tfunction build_tree(s, desc)\n\t//    deflate_state *s;\n\t//    tree_desc *desc; /* the tree descriptor */\n\t{\n\t  var tree     = desc.dyn_tree;\n\t  var stree    = desc.stat_desc.static_tree;\n\t  var has_stree = desc.stat_desc.has_stree;\n\t  var elems    = desc.stat_desc.elems;\n\t  var n, m;          /* iterate over heap elements */\n\t  var max_code = -1; /* largest code with non zero frequency */\n\t  var node;          /* new node being created */\n\n\t  /* Construct the initial heap, with least frequent element in\n\t   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n\t   * heap[0] is not used.\n\t   */\n\t  s.heap_len = 0;\n\t  s.heap_max = HEAP_SIZE;\n\n\t  for (n = 0; n < elems; n++) {\n\t    if (tree[n * 2]/*.Freq*/ !== 0) {\n\t      s.heap[++s.heap_len] = max_code = n;\n\t      s.depth[n] = 0;\n\n\t    } else {\n\t      tree[n*2 + 1]/*.Len*/ = 0;\n\t    }\n\t  }\n\n\t  /* The pkzip format requires that at least one distance code exists,\n\t   * and that at least one bit should be sent even if there is only one\n\t   * possible code. So to avoid special checks later on we force at least\n\t   * two codes of non zero frequency.\n\t   */\n\t  while (s.heap_len < 2) {\n\t    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n\t    tree[node * 2]/*.Freq*/ = 1;\n\t    s.depth[node] = 0;\n\t    s.opt_len--;\n\n\t    if (has_stree) {\n\t      s.static_len -= stree[node*2 + 1]/*.Len*/;\n\t    }\n\t    /* node is 0 or 1 so it does not have extra bits */\n\t  }\n\t  desc.max_code = max_code;\n\n\t  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n\t   * establish sub-heaps of increasing lengths:\n\t   */\n\t  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n\t  /* Construct the Huffman tree by repeatedly combining the least two\n\t   * frequent nodes.\n\t   */\n\t  node = elems;              /* next internal node of the tree */\n\t  do {\n\t    //pqremove(s, tree, n);  /* n = node of least frequency */\n\t    /*** pqremove ***/\n\t    n = s.heap[1/*SMALLEST*/];\n\t    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n\t    pqdownheap(s, tree, 1/*SMALLEST*/);\n\t    /***/\n\n\t    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n\t    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n\t    s.heap[--s.heap_max] = m;\n\n\t    /* Create a new node father of n and m */\n\t    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n\t    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n\t    tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;\n\n\t    /* and insert the new node in the heap */\n\t    s.heap[1/*SMALLEST*/] = node++;\n\t    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n\t  } while (s.heap_len >= 2);\n\n\t  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n\t  /* At this point, the fields freq and dad are set. We can now\n\t   * generate the bit lengths.\n\t   */\n\t  gen_bitlen(s, desc);\n\n\t  /* The field len is now set, we can generate the bit codes */\n\t  gen_codes(tree, max_code, s.bl_count);\n\t}\n\n\n\t/* ===========================================================================\n\t * Scan a literal or distance tree to determine the frequencies of the codes\n\t * in the bit length tree.\n\t */\n\tfunction scan_tree(s, tree, max_code)\n\t//    deflate_state *s;\n\t//    ct_data *tree;   /* the tree to be scanned */\n\t//    int max_code;    /* and its largest code of non zero frequency */\n\t{\n\t  var n;                     /* iterates over all tree elements */\n\t  var prevlen = -1;          /* last emitted length */\n\t  var curlen;                /* length of current code */\n\n\t  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n\t  var count = 0;             /* repeat count of the current code */\n\t  var max_count = 7;         /* max repeat count */\n\t  var min_count = 4;         /* min repeat count */\n\n\t  if (nextlen === 0) {\n\t    max_count = 138;\n\t    min_count = 3;\n\t  }\n\t  tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n\t  for (n = 0; n <= max_code; n++) {\n\t    curlen = nextlen;\n\t    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n\t    if (++count < max_count && curlen === nextlen) {\n\t      continue;\n\n\t    } else if (count < min_count) {\n\t      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n\t    } else if (curlen !== 0) {\n\n\t      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n\t      s.bl_tree[REP_3_6*2]/*.Freq*/++;\n\n\t    } else if (count <= 10) {\n\t      s.bl_tree[REPZ_3_10*2]/*.Freq*/++;\n\n\t    } else {\n\t      s.bl_tree[REPZ_11_138*2]/*.Freq*/++;\n\t    }\n\n\t    count = 0;\n\t    prevlen = curlen;\n\n\t    if (nextlen === 0) {\n\t      max_count = 138;\n\t      min_count = 3;\n\n\t    } else if (curlen === nextlen) {\n\t      max_count = 6;\n\t      min_count = 3;\n\n\t    } else {\n\t      max_count = 7;\n\t      min_count = 4;\n\t    }\n\t  }\n\t}\n\n\n\t/* ===========================================================================\n\t * Send a literal or distance tree in compressed form, using the codes in\n\t * bl_tree.\n\t */\n\tfunction send_tree(s, tree, max_code)\n\t//    deflate_state *s;\n\t//    ct_data *tree; /* the tree to be scanned */\n\t//    int max_code;       /* and its largest code of non zero frequency */\n\t{\n\t  var n;                     /* iterates over all tree elements */\n\t  var prevlen = -1;          /* last emitted length */\n\t  var curlen;                /* length of current code */\n\n\t  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n\t  var count = 0;             /* repeat count of the current code */\n\t  var max_count = 7;         /* max repeat count */\n\t  var min_count = 4;         /* min repeat count */\n\n\t  /* tree[max_code+1].Len = -1; */  /* guard already set */\n\t  if (nextlen === 0) {\n\t    max_count = 138;\n\t    min_count = 3;\n\t  }\n\n\t  for (n = 0; n <= max_code; n++) {\n\t    curlen = nextlen;\n\t    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n\t    if (++count < max_count && curlen === nextlen) {\n\t      continue;\n\n\t    } else if (count < min_count) {\n\t      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n\t    } else if (curlen !== 0) {\n\t      if (curlen !== prevlen) {\n\t        send_code(s, curlen, s.bl_tree);\n\t        count--;\n\t      }\n\t      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n\t      send_code(s, REP_3_6, s.bl_tree);\n\t      send_bits(s, count-3, 2);\n\n\t    } else if (count <= 10) {\n\t      send_code(s, REPZ_3_10, s.bl_tree);\n\t      send_bits(s, count-3, 3);\n\n\t    } else {\n\t      send_code(s, REPZ_11_138, s.bl_tree);\n\t      send_bits(s, count-11, 7);\n\t    }\n\n\t    count = 0;\n\t    prevlen = curlen;\n\t    if (nextlen === 0) {\n\t      max_count = 138;\n\t      min_count = 3;\n\n\t    } else if (curlen === nextlen) {\n\t      max_count = 6;\n\t      min_count = 3;\n\n\t    } else {\n\t      max_count = 7;\n\t      min_count = 4;\n\t    }\n\t  }\n\t}\n\n\n\t/* ===========================================================================\n\t * Construct the Huffman tree for the bit lengths and return the index in\n\t * bl_order of the last bit length code to send.\n\t */\n\tfunction build_bl_tree(s) {\n\t  var max_blindex;  /* index of last bit length code of non zero freq */\n\n\t  /* Determine the bit length frequencies for literal and distance trees */\n\t  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n\t  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n\t  /* Build the bit length tree: */\n\t  build_tree(s, s.bl_desc);\n\t  /* opt_len now includes the length of the tree representations, except\n\t   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n\t   */\n\n\t  /* Determine the number of bit length codes to send. The pkzip format\n\t   * requires that at least 4 bit length codes be sent. (appnote.txt says\n\t   * 3 but the actual value used is 4.)\n\t   */\n\t  for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {\n\t    if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {\n\t      break;\n\t    }\n\t  }\n\t  /* Update opt_len to include the bit length tree and counts */\n\t  s.opt_len += 3*(max_blindex+1) + 5+5+4;\n\t  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n\t  //        s->opt_len, s->static_len));\n\n\t  return max_blindex;\n\t}\n\n\n\t/* ===========================================================================\n\t * Send the header for a block using dynamic Huffman trees: the counts, the\n\t * lengths of the bit length codes, the literal tree and the distance tree.\n\t * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n\t */\n\tfunction send_all_trees(s, lcodes, dcodes, blcodes)\n\t//    deflate_state *s;\n\t//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\t{\n\t  var rank;                    /* index in bl_order */\n\n\t  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n\t  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n\t  //        \"too many codes\");\n\t  //Tracev((stderr, \"\\nbl counts: \"));\n\t  send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */\n\t  send_bits(s, dcodes-1,   5);\n\t  send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */\n\t  for (rank = 0; rank < blcodes; rank++) {\n\t    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n\t    send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);\n\t  }\n\t  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n\t  send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */\n\t  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n\t  send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */\n\t  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n\t}\n\n\n\t/* ===========================================================================\n\t * Check if the data type is TEXT or BINARY, using the following algorithm:\n\t * - TEXT if the two conditions below are satisfied:\n\t *    a) There are no non-portable control characters belonging to the\n\t *       \"black list\" (0..6, 14..25, 28..31).\n\t *    b) There is at least one printable character belonging to the\n\t *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n\t * - BINARY otherwise.\n\t * - The following partially-portable control characters form a\n\t *   \"gray list\" that is ignored in this detection algorithm:\n\t *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n\t * IN assertion: the fields Freq of dyn_ltree are set.\n\t */\n\tfunction detect_data_type(s) {\n\t  /* black_mask is the bit mask of black-listed bytes\n\t   * set bits 0..6, 14..25, and 28..31\n\t   * 0xf3ffc07f = binary 11110011111111111100000001111111\n\t   */\n\t  var black_mask = 0xf3ffc07f;\n\t  var n;\n\n\t  /* Check for non-textual (\"black-listed\") bytes. */\n\t  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n\t    if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {\n\t      return Z_BINARY;\n\t    }\n\t  }\n\n\t  /* Check for textual (\"white-listed\") bytes. */\n\t  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n\t      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n\t    return Z_TEXT;\n\t  }\n\t  for (n = 32; n < LITERALS; n++) {\n\t    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n\t      return Z_TEXT;\n\t    }\n\t  }\n\n\t  /* There are no \"black-listed\" or \"white-listed\" bytes:\n\t   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n\t   */\n\t  return Z_BINARY;\n\t}\n\n\n\tvar static_init_done = false;\n\n\t/* ===========================================================================\n\t * Initialize the tree data structures for a new zlib stream.\n\t */\n\tfunction _tr_init(s)\n\t{\n\n\t  if (!static_init_done) {\n\t    tr_static_init();\n\t    static_init_done = true;\n\t  }\n\n\t  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n\t  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n\t  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n\t  s.bi_buf = 0;\n\t  s.bi_valid = 0;\n\n\t  /* Initialize the first block of the first file: */\n\t  init_block(s);\n\t}\n\n\n\t/* ===========================================================================\n\t * Send a stored block\n\t */\n\tfunction _tr_stored_block(s, buf, stored_len, last)\n\t//DeflateState *s;\n\t//charf *buf;       /* input block */\n\t//ulg stored_len;   /* length of input block */\n\t//int last;         /* one if this is the last block for a file */\n\t{\n\t  send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */\n\t  copy_block(s, buf, stored_len, true); /* with header */\n\t}\n\n\n\t/* ===========================================================================\n\t * Send one empty static block to give enough lookahead for inflate.\n\t * This takes 10 bits, of which 7 may remain in the bit buffer.\n\t */\n\tfunction _tr_align(s) {\n\t  send_bits(s, STATIC_TREES<<1, 3);\n\t  send_code(s, END_BLOCK, static_ltree);\n\t  bi_flush(s);\n\t}\n\n\n\t/* ===========================================================================\n\t * Determine the best encoding for the current block: dynamic trees, static\n\t * trees or store, and output the encoded block to the zip file.\n\t */\n\tfunction _tr_flush_block(s, buf, stored_len, last)\n\t//DeflateState *s;\n\t//charf *buf;       /* input block, or NULL if too old */\n\t//ulg stored_len;   /* length of input block */\n\t//int last;         /* one if this is the last block for a file */\n\t{\n\t  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n\t  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n\t  /* Build the Huffman trees unless a stored block is forced */\n\t  if (s.level > 0) {\n\n\t    /* Check if the file is binary or text */\n\t    if (s.strm.data_type === Z_UNKNOWN) {\n\t      s.strm.data_type = detect_data_type(s);\n\t    }\n\n\t    /* Construct the literal and distance trees */\n\t    build_tree(s, s.l_desc);\n\t    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n\t    //        s->static_len));\n\n\t    build_tree(s, s.d_desc);\n\t    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n\t    //        s->static_len));\n\t    /* At this point, opt_len and static_len are the total bit lengths of\n\t     * the compressed block data, excluding the tree representations.\n\t     */\n\n\t    /* Build the bit length tree for the above two trees, and get the index\n\t     * in bl_order of the last bit length code to send.\n\t     */\n\t    max_blindex = build_bl_tree(s);\n\n\t    /* Determine the best encoding. Compute the block lengths in bytes. */\n\t    opt_lenb = (s.opt_len+3+7) >>> 3;\n\t    static_lenb = (s.static_len+3+7) >>> 3;\n\n\t    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n\t    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n\t    //        s->last_lit));\n\n\t    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n\t  } else {\n\t    // Assert(buf != (char*)0, \"lost buf\");\n\t    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n\t  }\n\n\t  if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {\n\t    /* 4: two words for the lengths */\n\n\t    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n\t     * Otherwise we can't have processed more than WSIZE input bytes since\n\t     * the last block flush, because compression would have been\n\t     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n\t     * transform a block into a stored block.\n\t     */\n\t    _tr_stored_block(s, buf, stored_len, last);\n\n\t  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n\t    send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);\n\t    compress_block(s, static_ltree, static_dtree);\n\n\t  } else {\n\t    send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);\n\t    send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);\n\t    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n\t  }\n\t  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n\t  /* The above check is made mod 2^32, for files larger than 512 MB\n\t   * and uLong implemented on 32 bits.\n\t   */\n\t  init_block(s);\n\n\t  if (last) {\n\t    bi_windup(s);\n\t  }\n\t  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n\t  //       s->compressed_len-7*last));\n\t}\n\n\t/* ===========================================================================\n\t * Save the match info and tally the frequency counts. Return true if\n\t * the current block must be flushed.\n\t */\n\tfunction _tr_tally(s, dist, lc)\n\t//    deflate_state *s;\n\t//    unsigned dist;  /* distance of matched string */\n\t//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\t{\n\t  //var out_length, in_length, dcode;\n\n\t  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n\t  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n\t  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n\t  s.last_lit++;\n\n\t  if (dist === 0) {\n\t    /* lc is the unmatched char */\n\t    s.dyn_ltree[lc*2]/*.Freq*/++;\n\t  } else {\n\t    s.matches++;\n\t    /* Here, lc is the match length - MIN_MATCH */\n\t    dist--;             /* dist = match distance - 1 */\n\t    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n\t    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n\t    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n\t    s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;\n\t    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n\t  }\n\n\t// (!) This block is disabled in zlib defailts,\n\t// don't enable it for binary compatibility\n\n\t//#ifdef TRUNCATE_BLOCK\n\t//  /* Try to guess if it is profitable to stop the current block here */\n\t//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n\t//    /* Compute an upper bound for the compressed length */\n\t//    out_length = s.last_lit*8;\n\t//    in_length = s.strstart - s.block_start;\n\t//\n\t//    for (dcode = 0; dcode < D_CODES; dcode++) {\n\t//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n\t//    }\n\t//    out_length >>>= 3;\n\t//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n\t//    //       s->last_lit, in_length, out_length,\n\t//    //       100L - out_length*100L/in_length));\n\t//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n\t//      return true;\n\t//    }\n\t//  }\n\t//#endif\n\n\t  return (s.last_lit === s.lit_bufsize-1);\n\t  /* We avoid equality with lit_bufsize because of wraparound at 64K\n\t   * on 16 bit machines and because stored blocks are restricted to\n\t   * 64K-1 bytes.\n\t   */\n\t}\n\n\texports._tr_init  = _tr_init;\n\texports._tr_stored_block = _tr_stored_block;\n\texports._tr_flush_block  = _tr_flush_block;\n\texports._tr_tally = _tr_tally;\n\texports._tr_align = _tr_align;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\t// Note: adler32 takes 12% for level 0 and 2% for level 6.\n\t// It doesn't worth to make additional optimizationa as in original.\n\t// Small size is preferable.\n\n\tfunction adler32(adler, buf, len, pos) {\n\t  var s1 = (adler & 0xffff) |0\n\t    , s2 = ((adler >>> 16) & 0xffff) |0\n\t    , n = 0;\n\n\t  while (len !== 0) {\n\t    // Set limit ~ twice less than 5552, to keep\n\t    // s2 in 31-bits, because we force signed ints.\n\t    // in other case %= will fail.\n\t    n = len > 2000 ? 2000 : len;\n\t    len -= n;\n\n\t    do {\n\t      s1 = (s1 + buf[pos++]) |0;\n\t      s2 = (s2 + s1) |0;\n\t    } while (--n);\n\n\t    s1 %= 65521;\n\t    s2 %= 65521;\n\t  }\n\n\t  return (s1 | (s2 << 16)) |0;\n\t}\n\n\n\tmodule.exports = adler32;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\t// Note: we can't get significant speed boost here.\n\t// So write code to minimize size - no pregenerated tables\n\t// and array tools dependencies.\n\n\n\t// Use ordinary array, since untyped makes no boost here\n\tfunction makeTable() {\n\t  var c, table = [];\n\n\t  for(var n =0; n < 256; n++){\n\t    c = n;\n\t    for(var k =0; k < 8; k++){\n\t      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n\t    }\n\t    table[n] = c;\n\t  }\n\n\t  return table;\n\t}\n\n\t// Create table on load. Just 255 signed longs. Not a problem.\n\tvar crcTable = makeTable();\n\n\n\tfunction crc32(crc, buf, len, pos) {\n\t  var t = crcTable\n\t    , end = pos + len;\n\n\t  crc = crc ^ (-1);\n\n\t  for (var i = pos; i < end; i++ ) {\n\t    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n\t  }\n\n\t  return (crc ^ (-1)); // >>> 0;\n\t}\n\n\n\tmodule.exports = crc32;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\n\tvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n\t                (typeof Uint16Array !== 'undefined') &&\n\t                (typeof Int32Array !== 'undefined');\n\n\n\texports.assign = function (obj /*from1, from2, from3, ...*/) {\n\t  var sources = Array.prototype.slice.call(arguments, 1);\n\t  while (sources.length) {\n\t    var source = sources.shift();\n\t    if (!source) { continue; }\n\n\t    if (typeof(source) !== 'object') {\n\t      throw new TypeError(source + 'must be non-object');\n\t    }\n\n\t    for (var p in source) {\n\t      if (source.hasOwnProperty(p)) {\n\t        obj[p] = source[p];\n\t      }\n\t    }\n\t  }\n\n\t  return obj;\n\t};\n\n\n\t// reduce buffer size, avoiding mem copy\n\texports.shrinkBuf = function (buf, size) {\n\t  if (buf.length === size) { return buf; }\n\t  if (buf.subarray) { return buf.subarray(0, size); }\n\t  buf.length = size;\n\t  return buf;\n\t};\n\n\n\tvar fnTyped = {\n\t  arraySet: function (dest, src, src_offs, len, dest_offs) {\n\t    //if (src.subarray && dest.subarray) {\n\t    //  dest.set(src.subarray(src_offs, src_offs+len), dest_offs);\n\t    //  return;\n\t    //}\n\t    // Fallback to ordinary array\n\t    for(var i=0; i<len; i++) {\n\t      dest[dest_offs + i] = src[src_offs + i];\n\t    }\n\t  },\n\t  // Join array of chunks to single array.\n\t  flattenChunks: function(chunks) {\n\t    var i, l, len, pos, chunk, result;\n\n\t    // calculate data length\n\t    len = 0;\n\t    for (i=0, l=chunks.length; i<l; i++) {\n\t      len += chunks[i].length;\n\t    }\n\n\t    // join chunks\n\t    result = new Uint8Array(len);\n\t    pos = 0;\n\t    for (i=0, l=chunks.length; i<l; i++) {\n\t      chunk = chunks[i];\n\t      result.set(chunk, pos);\n\t      pos += chunk.length;\n\t    }\n\n\t    return result;\n\t  }\n\t};\n\n\tvar fnUntyped = {\n\t  arraySet: function (dest, src, src_offs, len, dest_offs) {\n\t    for(var i=0; i<len; i++) {\n\t      dest[dest_offs + i] = src[src_offs + i];\n\t    }\n\t  },\n\t  // Join array of chunks to single array.\n\t  flattenChunks: function(chunks) {\n\t    return [].concat.apply([], chunks);\n\t  }\n\t};\n\n\n\t// Enable/Disable typed arrays use, for testing\n\t//\n\texports.setTyped = function (on) {\n\t  if (on) {\n\t    exports.Buf8  = Uint8Array;\n\t    exports.Buf16 = Uint16Array;\n\t    exports.Buf32 = Int32Array;\n\t    exports.assign(exports, fnTyped);\n\t  } else {\n\t    exports.Buf8  = Array;\n\t    exports.Buf16 = Array;\n\t    exports.Buf32 = Array;\n\t    exports.assign(exports, fnUntyped);\n\t  }\n\t};\n\n\texports.setTyped(TYPED_OK);\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Table;\n\n\t  Table = (function() {\n\t    function Table(file) {\n\t      var info;\n\t      this.file = file;\n\t      info = this.file.directory.tables[this.tag];\n\t      this.exists = !!info;\n\t      if (info) {\n\t        this.offset = info.offset, this.length = info.length;\n\t        this.parse(this.file.contents);\n\t      }\n\t    }\n\n\t    Table.prototype.parse = function() {};\n\n\t    Table.prototype.encode = function() {};\n\n\t    Table.prototype.raw = function() {\n\t      if (!this.exists) {\n\t        return null;\n\t      }\n\t      this.file.contents.pos = this.offset;\n\t      return this.file.contents.read(this.length);\n\t    };\n\n\t    return Table;\n\n\t  })();\n\n\t  module.exports = Table;\n\n\t}).call(this);\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\tvar UnicodeTrie,\n\t  __slice = [].slice;\n\n\tUnicodeTrie = (function() {\n\t  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;\n\n\t  SHIFT_1 = 6 + 5;\n\n\t  SHIFT_2 = 5;\n\n\t  SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n\t  OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n\t  INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n\t  INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n\t  INDEX_SHIFT = 2;\n\n\t  DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n\t  DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n\t  LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\n\n\t  LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n\t  INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n\t  UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\n\n\t  UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;\n\n\t  INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n\t  DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\n\t  function UnicodeTrie(json) {\n\t    var _ref, _ref1;\n\t    if (json == null) {\n\t      json = {};\n\t    }\n\t    this.data = json.data || [];\n\t    this.highStart = (_ref = json.highStart) != null ? _ref : 0;\n\t    this.errorValue = (_ref1 = json.errorValue) != null ? _ref1 : -1;\n\t  }\n\n\t  UnicodeTrie.prototype.get = function(codePoint) {\n\t    var index;\n\t    if (codePoint < 0 || codePoint > 0x10ffff) {\n\t      return this.errorValue;\n\t    }\n\t    if (codePoint < 0xd800 || (codePoint > 0xdbff && codePoint <= 0xffff)) {\n\t      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n\t      return this.data[index];\n\t    }\n\t    if (codePoint <= 0xffff) {\n\t      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n\t      return this.data[index];\n\t    }\n\t    if (codePoint < this.highStart) {\n\t      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n\t      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n\t      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n\t      return this.data[index];\n\t    }\n\t    return this.data[this.data.length - DATA_GRANULARITY];\n\t  };\n\n\t  UnicodeTrie.prototype.toJSON = function() {\n\t    var res;\n\t    res = {\n\t      data: __slice.call(this.data),\n\t      highStart: this.highStart,\n\t      errorValue: this.errorValue\n\t    };\n\t    return res;\n\t  };\n\n\t  return UnicodeTrie;\n\n\t})();\n\n\tmodule.exports = UnicodeTrie;\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tvar Buffer = __webpack_require__(4).Buffer;\n\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\n\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\n\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\n\t  return res;\n\t};\n\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\t// See state defs from inflate.js\n\tvar BAD = 30;       /* got a data error -- remain here until reset */\n\tvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n\t/*\n\t   Decode literal, length, and distance codes and write out the resulting\n\t   literal and match bytes until either not enough input or output is\n\t   available, an end-of-block is encountered, or a data error is encountered.\n\t   When large enough input and output buffers are supplied to inflate(), for\n\t   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n\t   inflate execution time is spent in this routine.\n\n\t   Entry assumptions:\n\n\t        state.mode === LEN\n\t        strm.avail_in >= 6\n\t        strm.avail_out >= 258\n\t        start >= strm.avail_out\n\t        state.bits < 8\n\n\t   On return, state.mode is one of:\n\n\t        LEN -- ran out of enough output space or enough available input\n\t        TYPE -- reached end of block code, inflate() to interpret next block\n\t        BAD -- error in block data\n\n\t   Notes:\n\n\t    - The maximum input bits used by a length/distance pair is 15 bits for the\n\t      length code, 5 bits for the length extra, 15 bits for the distance code,\n\t      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n\t      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n\t      checking for available input while decoding.\n\n\t    - The maximum bytes that a single length/distance pair can output is 258\n\t      bytes, which is the maximum length that can be coded.  inflate_fast()\n\t      requires strm.avail_out >= 258 for each loop to avoid checking for\n\t      output space.\n\t */\n\tmodule.exports = function inflate_fast(strm, start) {\n\t  var state;\n\t  var _in;                    /* local strm.input */\n\t  var last;                   /* have enough input while in < last */\n\t  var _out;                   /* local strm.output */\n\t  var beg;                    /* inflate()'s initial strm.output */\n\t  var end;                    /* while out < end, enough space available */\n\t//#ifdef INFLATE_STRICT\n\t  var dmax;                   /* maximum distance from zlib header */\n\t//#endif\n\t  var wsize;                  /* window size or zero if not using window */\n\t  var whave;                  /* valid bytes in the window */\n\t  var wnext;                  /* window write index */\n\t  var window;                 /* allocated sliding window, if wsize != 0 */\n\t  var hold;                   /* local strm.hold */\n\t  var bits;                   /* local strm.bits */\n\t  var lcode;                  /* local strm.lencode */\n\t  var dcode;                  /* local strm.distcode */\n\t  var lmask;                  /* mask for first level of length codes */\n\t  var dmask;                  /* mask for first level of distance codes */\n\t  var here;                   /* retrieved table entry */\n\t  var op;                     /* code bits, operation, extra bits, or */\n\t                              /*  window position, window bytes to copy */\n\t  var len;                    /* match length, unused bytes */\n\t  var dist;                   /* match distance */\n\t  var from;                   /* where to copy match from */\n\t  var from_source;\n\n\n\t  var input, output; // JS specific, because we have no pointers\n\n\t  /* copy state to local variables */\n\t  state = strm.state;\n\t  //here = state.here;\n\t  _in = strm.next_in;\n\t  input = strm.input;\n\t  last = _in + (strm.avail_in - 5);\n\t  _out = strm.next_out;\n\t  output = strm.output;\n\t  beg = _out - (start - strm.avail_out);\n\t  end = _out + (strm.avail_out - 257);\n\t//#ifdef INFLATE_STRICT\n\t  dmax = state.dmax;\n\t//#endif\n\t  wsize = state.wsize;\n\t  whave = state.whave;\n\t  wnext = state.wnext;\n\t  window = state.window;\n\t  hold = state.hold;\n\t  bits = state.bits;\n\t  lcode = state.lencode;\n\t  dcode = state.distcode;\n\t  lmask = (1 << state.lenbits) - 1;\n\t  dmask = (1 << state.distbits) - 1;\n\n\n\t  /* decode literals and length/distances until end-of-block or not enough\n\t     input data or output space */\n\n\t  top:\n\t  do {\n\t    if (bits < 15) {\n\t      hold += input[_in++] << bits;\n\t      bits += 8;\n\t      hold += input[_in++] << bits;\n\t      bits += 8;\n\t    }\n\n\t    here = lcode[hold & lmask];\n\n\t    dolen:\n\t    for (;;) { // Goto emulation\n\t      op = here >>> 24/*here.bits*/;\n\t      hold >>>= op;\n\t      bits -= op;\n\t      op = (here >>> 16) & 0xff/*here.op*/;\n\t      if (op === 0) {                          /* literal */\n\t        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n\t        //        \"inflate:         literal '%c'\\n\" :\n\t        //        \"inflate:         literal 0x%02x\\n\", here.val));\n\t        output[_out++] = here & 0xffff/*here.val*/;\n\t      }\n\t      else if (op & 16) {                     /* length base */\n\t        len = here & 0xffff/*here.val*/;\n\t        op &= 15;                           /* number of extra bits */\n\t        if (op) {\n\t          if (bits < op) {\n\t            hold += input[_in++] << bits;\n\t            bits += 8;\n\t          }\n\t          len += hold & ((1 << op) - 1);\n\t          hold >>>= op;\n\t          bits -= op;\n\t        }\n\t        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n\t        if (bits < 15) {\n\t          hold += input[_in++] << bits;\n\t          bits += 8;\n\t          hold += input[_in++] << bits;\n\t          bits += 8;\n\t        }\n\t        here = dcode[hold & dmask];\n\n\t        dodist:\n\t        for (;;) { // goto emulation\n\t          op = here >>> 24/*here.bits*/;\n\t          hold >>>= op;\n\t          bits -= op;\n\t          op = (here >>> 16) & 0xff/*here.op*/;\n\n\t          if (op & 16) {                      /* distance base */\n\t            dist = here & 0xffff/*here.val*/;\n\t            op &= 15;                       /* number of extra bits */\n\t            if (bits < op) {\n\t              hold += input[_in++] << bits;\n\t              bits += 8;\n\t              if (bits < op) {\n\t                hold += input[_in++] << bits;\n\t                bits += 8;\n\t              }\n\t            }\n\t            dist += hold & ((1 << op) - 1);\n\t//#ifdef INFLATE_STRICT\n\t            if (dist > dmax) {\n\t              strm.msg = 'invalid distance too far back';\n\t              state.mode = BAD;\n\t              break top;\n\t            }\n\t//#endif\n\t            hold >>>= op;\n\t            bits -= op;\n\t            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n\t            op = _out - beg;                /* max distance in output */\n\t            if (dist > op) {                /* see if copy from window */\n\t              op = dist - op;               /* distance back in window */\n\t              if (op > whave) {\n\t                if (state.sane) {\n\t                  strm.msg = 'invalid distance too far back';\n\t                  state.mode = BAD;\n\t                  break top;\n\t                }\n\n\t// (!) This block is disabled in zlib defailts,\n\t// don't enable it for binary compatibility\n\t//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n\t//                if (len <= op - whave) {\n\t//                  do {\n\t//                    output[_out++] = 0;\n\t//                  } while (--len);\n\t//                  continue top;\n\t//                }\n\t//                len -= op - whave;\n\t//                do {\n\t//                  output[_out++] = 0;\n\t//                } while (--op > whave);\n\t//                if (op === 0) {\n\t//                  from = _out - dist;\n\t//                  do {\n\t//                    output[_out++] = output[from++];\n\t//                  } while (--len);\n\t//                  continue top;\n\t//                }\n\t//#endif\n\t              }\n\t              from = 0; // window index\n\t              from_source = window;\n\t              if (wnext === 0) {           /* very common case */\n\t                from += wsize - op;\n\t                if (op < len) {         /* some from window */\n\t                  len -= op;\n\t                  do {\n\t                    output[_out++] = window[from++];\n\t                  } while (--op);\n\t                  from = _out - dist;  /* rest from output */\n\t                  from_source = output;\n\t                }\n\t              }\n\t              else if (wnext < op) {      /* wrap around window */\n\t                from += wsize + wnext - op;\n\t                op -= wnext;\n\t                if (op < len) {         /* some from end of window */\n\t                  len -= op;\n\t                  do {\n\t                    output[_out++] = window[from++];\n\t                  } while (--op);\n\t                  from = 0;\n\t                  if (wnext < len) {  /* some from start of window */\n\t                    op = wnext;\n\t                    len -= op;\n\t                    do {\n\t                      output[_out++] = window[from++];\n\t                    } while (--op);\n\t                    from = _out - dist;      /* rest from output */\n\t                    from_source = output;\n\t                  }\n\t                }\n\t              }\n\t              else {                      /* contiguous in window */\n\t                from += wnext - op;\n\t                if (op < len) {         /* some from window */\n\t                  len -= op;\n\t                  do {\n\t                    output[_out++] = window[from++];\n\t                  } while (--op);\n\t                  from = _out - dist;  /* rest from output */\n\t                  from_source = output;\n\t                }\n\t              }\n\t              while (len > 2) {\n\t                output[_out++] = from_source[from++];\n\t                output[_out++] = from_source[from++];\n\t                output[_out++] = from_source[from++];\n\t                len -= 3;\n\t              }\n\t              if (len) {\n\t                output[_out++] = from_source[from++];\n\t                if (len > 1) {\n\t                  output[_out++] = from_source[from++];\n\t                }\n\t              }\n\t            }\n\t            else {\n\t              from = _out - dist;          /* copy direct from output */\n\t              do {                        /* minimum length is three */\n\t                output[_out++] = output[from++];\n\t                output[_out++] = output[from++];\n\t                output[_out++] = output[from++];\n\t                len -= 3;\n\t              } while (len > 2);\n\t              if (len) {\n\t                output[_out++] = output[from++];\n\t                if (len > 1) {\n\t                  output[_out++] = output[from++];\n\t                }\n\t              }\n\t            }\n\t          }\n\t          else if ((op & 64) === 0) {          /* 2nd level distance code */\n\t            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n\t            continue dodist;\n\t          }\n\t          else {\n\t            strm.msg = 'invalid distance code';\n\t            state.mode = BAD;\n\t            break top;\n\t          }\n\n\t          break; // need to emulate goto via \"continue\"\n\t        }\n\t      }\n\t      else if ((op & 64) === 0) {              /* 2nd level length code */\n\t        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n\t        continue dolen;\n\t      }\n\t      else if (op & 32) {                     /* end-of-block */\n\t        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n\t        state.mode = TYPE;\n\t        break top;\n\t      }\n\t      else {\n\t        strm.msg = 'invalid literal/length code';\n\t        state.mode = BAD;\n\t        break top;\n\t      }\n\n\t      break; // need to emulate goto via \"continue\"\n\t    }\n\t  } while (_in < last && _out < end);\n\n\t  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n\t  len = bits >> 3;\n\t  _in -= len;\n\t  bits -= len << 3;\n\t  hold &= (1 << bits) - 1;\n\n\t  /* update state and return */\n\t  strm.next_in = _in;\n\t  strm.next_out = _out;\n\t  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n\t  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n\t  state.hold = hold;\n\t  state.bits = bits;\n\t  return;\n\t};\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\n\tvar utils = __webpack_require__(98);\n\n\tvar MAXBITS = 15;\n\tvar ENOUGH_LENS = 852;\n\tvar ENOUGH_DISTS = 592;\n\t//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\n\tvar CODES = 0;\n\tvar LENS = 1;\n\tvar DISTS = 2;\n\n\tvar lbase = [ /* Length codes 257..285 base */\n\t  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n\t  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n\t];\n\n\tvar lext = [ /* Length codes 257..285 extra */\n\t  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n\t  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n\t];\n\n\tvar dbase = [ /* Distance codes 0..29 base */\n\t  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n\t  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n\t  8193, 12289, 16385, 24577, 0, 0\n\t];\n\n\tvar dext = [ /* Distance codes 0..29 extra */\n\t  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n\t  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n\t  28, 28, 29, 29, 64, 64\n\t];\n\n\tmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n\t{\n\t  var bits = opts.bits;\n\t      //here = opts.here; /* table entry for duplication */\n\n\t  var len = 0;               /* a code's length in bits */\n\t  var sym = 0;               /* index of code symbols */\n\t  var min = 0, max = 0;          /* minimum and maximum code lengths */\n\t  var root = 0;              /* number of index bits for root table */\n\t  var curr = 0;              /* number of index bits for current table */\n\t  var drop = 0;              /* code bits to drop for sub-table */\n\t  var left = 0;                   /* number of prefix codes available */\n\t  var used = 0;              /* code entries in table used */\n\t  var huff = 0;              /* Huffman code */\n\t  var incr;              /* for incrementing code, index */\n\t  var fill;              /* index for replicating entries */\n\t  var low;               /* low bits for current root entry */\n\t  var mask;              /* mask for low root bits */\n\t  var next;             /* next available space in table */\n\t  var base = null;     /* base value table to use */\n\t  var base_index = 0;\n\t//  var shoextra;    /* extra bits table to use */\n\t  var end;                    /* use base and extra for symbol > end */\n\t  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */\n\t  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */\n\t  var extra = null;\n\t  var extra_index = 0;\n\n\t  var here_bits, here_op, here_val;\n\n\t  /*\n\t   Process a set of code lengths to create a canonical Huffman code.  The\n\t   code lengths are lens[0..codes-1].  Each length corresponds to the\n\t   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n\t   symbols by length from short to long, and retaining the symbol order\n\t   for codes with equal lengths.  Then the code starts with all zero bits\n\t   for the first code of the shortest length, and the codes are integer\n\t   increments for the same length, and zeros are appended as the length\n\t   increases.  For the deflate format, these bits are stored backwards\n\t   from their more natural integer increment ordering, and so when the\n\t   decoding tables are built in the large loop below, the integer codes\n\t   are incremented backwards.\n\n\t   This routine assumes, but does not check, that all of the entries in\n\t   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n\t   1..MAXBITS is interpreted as that code length.  zero means that that\n\t   symbol does not occur in this code.\n\n\t   The codes are sorted by computing a count of codes for each length,\n\t   creating from that a table of starting indices for each length in the\n\t   sorted table, and then entering the symbols in order in the sorted\n\t   table.  The sorted table is work[], with that space being provided by\n\t   the caller.\n\n\t   The length counts are used for other purposes as well, i.e. finding\n\t   the minimum and maximum length codes, determining if there are any\n\t   codes at all, checking for a valid set of lengths, and looking ahead\n\t   at length counts to determine sub-table sizes when building the\n\t   decoding tables.\n\t   */\n\n\t  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n\t  for (len = 0; len <= MAXBITS; len++) {\n\t    count[len] = 0;\n\t  }\n\t  for (sym = 0; sym < codes; sym++) {\n\t    count[lens[lens_index + sym]]++;\n\t  }\n\n\t  /* bound code lengths, force root to be within code lengths */\n\t  root = bits;\n\t  for (max = MAXBITS; max >= 1; max--) {\n\t    if (count[max] !== 0) { break; }\n\t  }\n\t  if (root > max) {\n\t    root = max;\n\t  }\n\t  if (max === 0) {                     /* no symbols to code at all */\n\t    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n\t    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n\t    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n\t    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n\t    //table.op[opts.table_index] = 64;\n\t    //table.bits[opts.table_index] = 1;\n\t    //table.val[opts.table_index++] = 0;\n\t    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\t    opts.bits = 1;\n\t    return 0;     /* no symbols, but wait for decoding to report error */\n\t  }\n\t  for (min = 1; min < max; min++) {\n\t    if (count[min] !== 0) { break; }\n\t  }\n\t  if (root < min) {\n\t    root = min;\n\t  }\n\n\t  /* check for an over-subscribed or incomplete set of lengths */\n\t  left = 1;\n\t  for (len = 1; len <= MAXBITS; len++) {\n\t    left <<= 1;\n\t    left -= count[len];\n\t    if (left < 0) {\n\t      return -1;\n\t    }        /* over-subscribed */\n\t  }\n\t  if (left > 0 && (type === CODES || max !== 1)) {\n\t    return -1;                      /* incomplete set */\n\t  }\n\n\t  /* generate offsets into symbol table for each length for sorting */\n\t  offs[1] = 0;\n\t  for (len = 1; len < MAXBITS; len++) {\n\t    offs[len + 1] = offs[len] + count[len];\n\t  }\n\n\t  /* sort symbols by length, by symbol order within each length */\n\t  for (sym = 0; sym < codes; sym++) {\n\t    if (lens[lens_index + sym] !== 0) {\n\t      work[offs[lens[lens_index + sym]]++] = sym;\n\t    }\n\t  }\n\n\t  /*\n\t   Create and fill in decoding tables.  In this loop, the table being\n\t   filled is at next and has curr index bits.  The code being used is huff\n\t   with length len.  That code is converted to an index by dropping drop\n\t   bits off of the bottom.  For codes where len is less than drop + curr,\n\t   those top drop + curr - len bits are incremented through all values to\n\t   fill the table with replicated entries.\n\n\t   root is the number of index bits for the root table.  When len exceeds\n\t   root, sub-tables are created pointed to by the root entry with an index\n\t   of the low root bits of huff.  This is saved in low to check for when a\n\t   new sub-table should be started.  drop is zero when the root table is\n\t   being filled, and drop is root when sub-tables are being filled.\n\n\t   When a new sub-table is needed, it is necessary to look ahead in the\n\t   code lengths to determine what size sub-table is needed.  The length\n\t   counts are used for this, and so count[] is decremented as codes are\n\t   entered in the tables.\n\n\t   used keeps track of how many table entries have been allocated from the\n\t   provided *table space.  It is checked for LENS and DIST tables against\n\t   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n\t   the initial root table size constants.  See the comments in inftrees.h\n\t   for more information.\n\n\t   sym increments through all symbols, and the loop terminates when\n\t   all codes of length max, i.e. all codes, have been processed.  This\n\t   routine permits incomplete codes, so another loop after this one fills\n\t   in the rest of the decoding tables with invalid code markers.\n\t   */\n\n\t  /* set up for code type */\n\t  // poor man optimization - use if-else instead of switch,\n\t  // to avoid deopts in old v8\n\t  if (type === CODES) {\n\t      base = extra = work;    /* dummy value--not used */\n\t      end = 19;\n\t  } else if (type === LENS) {\n\t      base = lbase;\n\t      base_index -= 257;\n\t      extra = lext;\n\t      extra_index -= 257;\n\t      end = 256;\n\t  } else {                    /* DISTS */\n\t      base = dbase;\n\t      extra = dext;\n\t      end = -1;\n\t  }\n\n\t  /* initialize opts for loop */\n\t  huff = 0;                   /* starting code */\n\t  sym = 0;                    /* starting code symbol */\n\t  len = min;                  /* starting code length */\n\t  next = table_index;              /* current table to fill in */\n\t  curr = root;                /* current table index bits */\n\t  drop = 0;                   /* current bits to drop from code for index */\n\t  low = -1;                   /* trigger new sub-table when len > root */\n\t  used = 1 << root;          /* use root table entries */\n\t  mask = used - 1;            /* mask for comparing low */\n\n\t  /* check available table space */\n\t  if ((type === LENS && used > ENOUGH_LENS) ||\n\t    (type === DISTS && used > ENOUGH_DISTS)) {\n\t    return 1;\n\t  }\n\n\t  var i=0;\n\t  /* process all codes and make table entries */\n\t  for (;;) {\n\t    i++;\n\t    /* create table entry */\n\t    here_bits = len - drop;\n\t    if (work[sym] < end) {\n\t      here_op = 0;\n\t      here_val = work[sym];\n\t    }\n\t    else if (work[sym] > end) {\n\t      here_op = extra[extra_index + work[sym]];\n\t      here_val = base[base_index + work[sym]];\n\t    }\n\t    else {\n\t      here_op = 32 + 64;         /* end of block */\n\t      here_val = 0;\n\t    }\n\n\t    /* replicate for those indices with low len bits equal to huff */\n\t    incr = 1 << (len - drop);\n\t    fill = 1 << curr;\n\t    min = fill;                 /* save offset to next table */\n\t    do {\n\t      fill -= incr;\n\t      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n\t    } while (fill !== 0);\n\n\t    /* backwards increment the len-bit code huff */\n\t    incr = 1 << (len - 1);\n\t    while (huff & incr) {\n\t      incr >>= 1;\n\t    }\n\t    if (incr !== 0) {\n\t      huff &= incr - 1;\n\t      huff += incr;\n\t    } else {\n\t      huff = 0;\n\t    }\n\n\t    /* go to next symbol, update count, len */\n\t    sym++;\n\t    if (--count[len] === 0) {\n\t      if (len === max) { break; }\n\t      len = lens[lens_index + work[sym]];\n\t    }\n\n\t    /* create new sub-table if needed */\n\t    if (len > root && (huff & mask) !== low) {\n\t      /* if first time, transition to sub-tables */\n\t      if (drop === 0) {\n\t        drop = root;\n\t      }\n\n\t      /* increment past last table */\n\t      next += min;            /* here min is 1 << curr */\n\n\t      /* determine length of next table */\n\t      curr = len - drop;\n\t      left = 1 << curr;\n\t      while (curr + drop < max) {\n\t        left -= count[curr + drop];\n\t        if (left <= 0) { break; }\n\t        curr++;\n\t        left <<= 1;\n\t      }\n\n\t      /* check for enough space */\n\t      used += 1 << curr;\n\t      if ((type === LENS && used > ENOUGH_LENS) ||\n\t        (type === DISTS && used > ENOUGH_DISTS)) {\n\t        return 1;\n\t      }\n\n\t      /* point entry in root table to sub-table */\n\t      low = huff & mask;\n\t      /*table.op[low] = curr;\n\t      table.bits[low] = root;\n\t      table.val[low] = next - opts.table_index;*/\n\t      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n\t    }\n\t  }\n\n\t  /* fill in remaining table entry if code is incomplete (guaranteed to have\n\t   at most one remaining entry, since if the code is incomplete, the\n\t   maximum code length that was allowed to get this far is one bit) */\n\t  if (huff !== 0) {\n\t    //table.op[next + huff] = 64;            /* invalid code marker */\n\t    //table.bits[next + huff] = len - drop;\n\t    //table.val[next + huff] = 0;\n\t    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n\t  }\n\n\t  /* set return parameters */\n\t  //opts.table_index += used;\n\t  opts.bits = root;\n\t  return 0;\n\t};\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\n\tfunction isBuffer(arg) {\n\t  return Buffer.isBuffer(arg);\n\t}\n\texports.isBuffer = isBuffer;\n\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t\t\"data\": [\n\t\t\t1961,\n\t\t\t1969,\n\t\t\t1977,\n\t\t\t1985,\n\t\t\t2025,\n\t\t\t2033,\n\t\t\t2041,\n\t\t\t2049,\n\t\t\t2057,\n\t\t\t2065,\n\t\t\t2073,\n\t\t\t2081,\n\t\t\t2089,\n\t\t\t2097,\n\t\t\t2105,\n\t\t\t2113,\n\t\t\t2121,\n\t\t\t2129,\n\t\t\t2137,\n\t\t\t2145,\n\t\t\t2153,\n\t\t\t2161,\n\t\t\t2169,\n\t\t\t2177,\n\t\t\t2185,\n\t\t\t2193,\n\t\t\t2201,\n\t\t\t2209,\n\t\t\t2217,\n\t\t\t2225,\n\t\t\t2233,\n\t\t\t2241,\n\t\t\t2249,\n\t\t\t2257,\n\t\t\t2265,\n\t\t\t2273,\n\t\t\t2281,\n\t\t\t2289,\n\t\t\t2297,\n\t\t\t2305,\n\t\t\t2313,\n\t\t\t2321,\n\t\t\t2329,\n\t\t\t2337,\n\t\t\t2345,\n\t\t\t2353,\n\t\t\t2361,\n\t\t\t2369,\n\t\t\t2377,\n\t\t\t2385,\n\t\t\t2393,\n\t\t\t2401,\n\t\t\t2409,\n\t\t\t2417,\n\t\t\t2425,\n\t\t\t2433,\n\t\t\t2441,\n\t\t\t2449,\n\t\t\t2457,\n\t\t\t2465,\n\t\t\t2473,\n\t\t\t2481,\n\t\t\t2489,\n\t\t\t2497,\n\t\t\t2505,\n\t\t\t2513,\n\t\t\t2521,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2537,\n\t\t\t2009,\n\t\t\t2545,\n\t\t\t2553,\n\t\t\t2561,\n\t\t\t2569,\n\t\t\t2577,\n\t\t\t2585,\n\t\t\t2593,\n\t\t\t2601,\n\t\t\t2609,\n\t\t\t2617,\n\t\t\t2625,\n\t\t\t2633,\n\t\t\t2641,\n\t\t\t2649,\n\t\t\t2657,\n\t\t\t2665,\n\t\t\t2673,\n\t\t\t2681,\n\t\t\t2689,\n\t\t\t2697,\n\t\t\t2705,\n\t\t\t2713,\n\t\t\t2721,\n\t\t\t2729,\n\t\t\t2737,\n\t\t\t2745,\n\t\t\t2753,\n\t\t\t2761,\n\t\t\t2769,\n\t\t\t2777,\n\t\t\t2785,\n\t\t\t2793,\n\t\t\t2801,\n\t\t\t2809,\n\t\t\t2817,\n\t\t\t2825,\n\t\t\t2833,\n\t\t\t2841,\n\t\t\t2849,\n\t\t\t2857,\n\t\t\t2865,\n\t\t\t2873,\n\t\t\t2881,\n\t\t\t2889,\n\t\t\t2009,\n\t\t\t2897,\n\t\t\t2905,\n\t\t\t2913,\n\t\t\t2009,\n\t\t\t2921,\n\t\t\t2929,\n\t\t\t2937,\n\t\t\t2945,\n\t\t\t2953,\n\t\t\t2961,\n\t\t\t2969,\n\t\t\t2009,\n\t\t\t2977,\n\t\t\t2977,\n\t\t\t2985,\n\t\t\t2993,\n\t\t\t3001,\n\t\t\t3009,\n\t\t\t3009,\n\t\t\t3009,\n\t\t\t3017,\n\t\t\t3017,\n\t\t\t3017,\n\t\t\t3025,\n\t\t\t3025,\n\t\t\t3033,\n\t\t\t3041,\n\t\t\t3041,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3049,\n\t\t\t3057,\n\t\t\t3065,\n\t\t\t3073,\n\t\t\t3073,\n\t\t\t3073,\n\t\t\t3081,\n\t\t\t3089,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3097,\n\t\t\t3105,\n\t\t\t3113,\n\t\t\t3113,\n\t\t\t3121,\n\t\t\t3129,\n\t\t\t3137,\n\t\t\t3145,\n\t\t\t3153,\n\t\t\t3161,\n\t\t\t3161,\n\t\t\t3169,\n\t\t\t3177,\n\t\t\t3185,\n\t\t\t3193,\n\t\t\t3193,\n\t\t\t3193,\n\t\t\t3193,\n\t\t\t3201,\n\t\t\t3209,\n\t\t\t3209,\n\t\t\t3217,\n\t\t\t3225,\n\t\t\t3233,\n\t\t\t3241,\n\t\t\t3241,\n\t\t\t3241,\n\t\t\t3249,\n\t\t\t3257,\n\t\t\t3265,\n\t\t\t3273,\n\t\t\t3273,\n\t\t\t3281,\n\t\t\t3289,\n\t\t\t3297,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t3305,\n\t\t\t3313,\n\t\t\t3321,\n\t\t\t3329,\n\t\t\t3337,\n\t\t\t3345,\n\t\t\t3353,\n\t\t\t3361,\n\t\t\t3369,\n\t\t\t3377,\n\t\t\t3385,\n\t\t\t3393,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t3401,\n\t\t\t3409,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t3417,\n\t\t\t3425,\n\t\t\t3425,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3433,\n\t\t\t3441,\n\t\t\t3449,\n\t\t\t3457,\n\t\t\t3465,\n\t\t\t3473,\n\t\t\t3481,\n\t\t\t3489,\n\t\t\t3497,\n\t\t\t3505,\n\t\t\t3513,\n\t\t\t3521,\n\t\t\t3529,\n\t\t\t3537,\n\t\t\t3545,\n\t\t\t3553,\n\t\t\t3561,\n\t\t\t3569,\n\t\t\t3577,\n\t\t\t3585,\n\t\t\t3593,\n\t\t\t3601,\n\t\t\t3609,\n\t\t\t3617,\n\t\t\t3625,\n\t\t\t3625,\n\t\t\t3633,\n\t\t\t3641,\n\t\t\t3649,\n\t\t\t3649,\n\t\t\t3649,\n\t\t\t3649,\n\t\t\t3649,\n\t\t\t3657,\n\t\t\t3665,\n\t\t\t3665,\n\t\t\t3673,\n\t\t\t3681,\n\t\t\t3681,\n\t\t\t3681,\n\t\t\t3681,\n\t\t\t3689,\n\t\t\t3697,\n\t\t\t3697,\n\t\t\t3705,\n\t\t\t3713,\n\t\t\t3721,\n\t\t\t3729,\n\t\t\t3737,\n\t\t\t3745,\n\t\t\t3753,\n\t\t\t3761,\n\t\t\t3769,\n\t\t\t3777,\n\t\t\t3785,\n\t\t\t3793,\n\t\t\t3801,\n\t\t\t3809,\n\t\t\t3817,\n\t\t\t3825,\n\t\t\t3833,\n\t\t\t3841,\n\t\t\t3849,\n\t\t\t3857,\n\t\t\t3865,\n\t\t\t3873,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3881,\n\t\t\t3889,\n\t\t\t3897,\n\t\t\t3905,\n\t\t\t3913,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3921,\n\t\t\t3929,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3937,\n\t\t\t3945,\n\t\t\t3953,\n\t\t\t3953,\n\t\t\t3953,\n\t\t\t3961,\n\t\t\t3969,\n\t\t\t3969,\n\t\t\t3977,\n\t\t\t3985,\n\t\t\t3993,\n\t\t\t4001,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4009,\n\t\t\t4017,\n\t\t\t4025,\n\t\t\t4033,\n\t\t\t4041,\n\t\t\t4049,\n\t\t\t4057,\n\t\t\t4065,\n\t\t\t4073,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4081,\n\t\t\t4089,\n\t\t\t4097,\n\t\t\t4097,\n\t\t\t4105,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4113,\n\t\t\t4121,\n\t\t\t4121,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4129,\n\t\t\t4137,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4145,\n\t\t\t4153,\n\t\t\t4161,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4169,\n\t\t\t4177,\n\t\t\t4185,\n\t\t\t4193,\n\t\t\t4201,\n\t\t\t4209,\n\t\t\t4217,\n\t\t\t4217,\n\t\t\t4225,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4233,\n\t\t\t4241,\n\t\t\t4249,\n\t\t\t4257,\n\t\t\t4265,\n\t\t\t4273,\n\t\t\t4281,\n\t\t\t4289,\n\t\t\t4297,\n\t\t\t4305,\n\t\t\t4313,\n\t\t\t4321,\n\t\t\t4329,\n\t\t\t4337,\n\t\t\t4345,\n\t\t\t4353,\n\t\t\t4361,\n\t\t\t4361,\n\t\t\t4369,\n\t\t\t4377,\n\t\t\t4385,\n\t\t\t4385,\n\t\t\t4385,\n\t\t\t4385,\n\t\t\t4393,\n\t\t\t4401,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4409,\n\t\t\t4417,\n\t\t\t4425,\n\t\t\t4433,\n\t\t\t4441,\n\t\t\t4449,\n\t\t\t4457,\n\t\t\t4465,\n\t\t\t4473,\n\t\t\t4481,\n\t\t\t4489,\n\t\t\t4497,\n\t\t\t4505,\n\t\t\t4513,\n\t\t\t4521,\n\t\t\t4529,\n\t\t\t4537,\n\t\t\t4545,\n\t\t\t4553,\n\t\t\t4561,\n\t\t\t4569,\n\t\t\t4577,\n\t\t\t4585,\n\t\t\t4593,\n\t\t\t4601,\n\t\t\t4609,\n\t\t\t4617,\n\t\t\t4625,\n\t\t\t4633,\n\t\t\t4641,\n\t\t\t4649,\n\t\t\t4657,\n\t\t\t4665,\n\t\t\t4673,\n\t\t\t4681,\n\t\t\t4689,\n\t\t\t4697,\n\t\t\t4705,\n\t\t\t4713,\n\t\t\t4721,\n\t\t\t4729,\n\t\t\t4737,\n\t\t\t4745,\n\t\t\t4753,\n\t\t\t4761,\n\t\t\t4769,\n\t\t\t4777,\n\t\t\t4785,\n\t\t\t4793,\n\t\t\t4801,\n\t\t\t4809,\n\t\t\t4817,\n\t\t\t4825,\n\t\t\t4833,\n\t\t\t4841,\n\t\t\t4849,\n\t\t\t4857,\n\t\t\t4865,\n\t\t\t4873,\n\t\t\t4881,\n\t\t\t4889,\n\t\t\t4897,\n\t\t\t4905,\n\t\t\t4913,\n\t\t\t4921,\n\t\t\t4929,\n\t\t\t4937,\n\t\t\t4945,\n\t\t\t4953,\n\t\t\t4961,\n\t\t\t4969,\n\t\t\t4977,\n\t\t\t4985,\n\t\t\t4993,\n\t\t\t5001,\n\t\t\t5009,\n\t\t\t5017,\n\t\t\t5025,\n\t\t\t5033,\n\t\t\t5041,\n\t\t\t5049,\n\t\t\t5057,\n\t\t\t5065,\n\t\t\t5073,\n\t\t\t5081,\n\t\t\t5089,\n\t\t\t5097,\n\t\t\t5105,\n\t\t\t5113,\n\t\t\t5121,\n\t\t\t5129,\n\t\t\t5137,\n\t\t\t5145,\n\t\t\t5153,\n\t\t\t5161,\n\t\t\t5169,\n\t\t\t5177,\n\t\t\t5185,\n\t\t\t5193,\n\t\t\t5201,\n\t\t\t5209,\n\t\t\t5217,\n\t\t\t5225,\n\t\t\t5233,\n\t\t\t5241,\n\t\t\t5249,\n\t\t\t5257,\n\t\t\t5265,\n\t\t\t5273,\n\t\t\t5281,\n\t\t\t5289,\n\t\t\t5297,\n\t\t\t5305,\n\t\t\t5313,\n\t\t\t5321,\n\t\t\t5329,\n\t\t\t5337,\n\t\t\t5345,\n\t\t\t5353,\n\t\t\t5361,\n\t\t\t5369,\n\t\t\t5377,\n\t\t\t5385,\n\t\t\t5393,\n\t\t\t5401,\n\t\t\t5409,\n\t\t\t5417,\n\t\t\t5425,\n\t\t\t5433,\n\t\t\t5441,\n\t\t\t5449,\n\t\t\t5457,\n\t\t\t5465,\n\t\t\t5473,\n\t\t\t5481,\n\t\t\t5489,\n\t\t\t5497,\n\t\t\t5505,\n\t\t\t5513,\n\t\t\t5521,\n\t\t\t5529,\n\t\t\t5537,\n\t\t\t5545,\n\t\t\t5553,\n\t\t\t5561,\n\t\t\t5569,\n\t\t\t5577,\n\t\t\t5585,\n\t\t\t5593,\n\t\t\t5601,\n\t\t\t5609,\n\t\t\t5617,\n\t\t\t5625,\n\t\t\t5633,\n\t\t\t5641,\n\t\t\t5649,\n\t\t\t5657,\n\t\t\t5665,\n\t\t\t5673,\n\t\t\t5681,\n\t\t\t5689,\n\t\t\t5697,\n\t\t\t5705,\n\t\t\t5713,\n\t\t\t5721,\n\t\t\t5729,\n\t\t\t5737,\n\t\t\t5745,\n\t\t\t5753,\n\t\t\t5761,\n\t\t\t5769,\n\t\t\t5777,\n\t\t\t5785,\n\t\t\t5793,\n\t\t\t5801,\n\t\t\t5809,\n\t\t\t5817,\n\t\t\t5825,\n\t\t\t5833,\n\t\t\t5841,\n\t\t\t5849,\n\t\t\t5857,\n\t\t\t5865,\n\t\t\t5873,\n\t\t\t5881,\n\t\t\t5889,\n\t\t\t5897,\n\t\t\t5905,\n\t\t\t5913,\n\t\t\t5921,\n\t\t\t5929,\n\t\t\t5937,\n\t\t\t5945,\n\t\t\t5953,\n\t\t\t5961,\n\t\t\t5969,\n\t\t\t5977,\n\t\t\t5985,\n\t\t\t5993,\n\t\t\t6001,\n\t\t\t6009,\n\t\t\t6017,\n\t\t\t6025,\n\t\t\t6033,\n\t\t\t6041,\n\t\t\t6049,\n\t\t\t6057,\n\t\t\t6065,\n\t\t\t6073,\n\t\t\t6081,\n\t\t\t6089,\n\t\t\t6097,\n\t\t\t6105,\n\t\t\t6113,\n\t\t\t6121,\n\t\t\t6129,\n\t\t\t6137,\n\t\t\t6145,\n\t\t\t6153,\n\t\t\t6161,\n\t\t\t6169,\n\t\t\t6177,\n\t\t\t6185,\n\t\t\t6193,\n\t\t\t6201,\n\t\t\t6209,\n\t\t\t6217,\n\t\t\t6225,\n\t\t\t6233,\n\t\t\t6241,\n\t\t\t6249,\n\t\t\t6257,\n\t\t\t6265,\n\t\t\t6273,\n\t\t\t6281,\n\t\t\t6289,\n\t\t\t6297,\n\t\t\t6305,\n\t\t\t6313,\n\t\t\t6321,\n\t\t\t6329,\n\t\t\t6337,\n\t\t\t6345,\n\t\t\t6353,\n\t\t\t6361,\n\t\t\t6369,\n\t\t\t6377,\n\t\t\t6385,\n\t\t\t6393,\n\t\t\t6401,\n\t\t\t6409,\n\t\t\t6417,\n\t\t\t6425,\n\t\t\t6433,\n\t\t\t6441,\n\t\t\t6449,\n\t\t\t6457,\n\t\t\t6465,\n\t\t\t6473,\n\t\t\t6481,\n\t\t\t6489,\n\t\t\t6497,\n\t\t\t6505,\n\t\t\t6513,\n\t\t\t6521,\n\t\t\t6529,\n\t\t\t6537,\n\t\t\t6545,\n\t\t\t6553,\n\t\t\t6561,\n\t\t\t6569,\n\t\t\t6577,\n\t\t\t6585,\n\t\t\t6593,\n\t\t\t6601,\n\t\t\t6609,\n\t\t\t6617,\n\t\t\t6625,\n\t\t\t6633,\n\t\t\t6641,\n\t\t\t6649,\n\t\t\t6657,\n\t\t\t6665,\n\t\t\t6673,\n\t\t\t6681,\n\t\t\t6689,\n\t\t\t6697,\n\t\t\t6705,\n\t\t\t6713,\n\t\t\t6721,\n\t\t\t6729,\n\t\t\t6737,\n\t\t\t6745,\n\t\t\t6753,\n\t\t\t6761,\n\t\t\t6769,\n\t\t\t6777,\n\t\t\t6785,\n\t\t\t6793,\n\t\t\t6801,\n\t\t\t6809,\n\t\t\t6817,\n\t\t\t6825,\n\t\t\t6833,\n\t\t\t6841,\n\t\t\t6849,\n\t\t\t6857,\n\t\t\t6865,\n\t\t\t6873,\n\t\t\t6881,\n\t\t\t6889,\n\t\t\t6897,\n\t\t\t6905,\n\t\t\t6913,\n\t\t\t6921,\n\t\t\t6929,\n\t\t\t6937,\n\t\t\t6945,\n\t\t\t6953,\n\t\t\t6961,\n\t\t\t6969,\n\t\t\t6977,\n\t\t\t6985,\n\t\t\t6993,\n\t\t\t7001,\n\t\t\t7009,\n\t\t\t7017,\n\t\t\t7025,\n\t\t\t7033,\n\t\t\t7041,\n\t\t\t7049,\n\t\t\t7057,\n\t\t\t7065,\n\t\t\t7073,\n\t\t\t7081,\n\t\t\t7089,\n\t\t\t7097,\n\t\t\t7105,\n\t\t\t7113,\n\t\t\t7121,\n\t\t\t7129,\n\t\t\t7137,\n\t\t\t7145,\n\t\t\t7153,\n\t\t\t7161,\n\t\t\t7169,\n\t\t\t7177,\n\t\t\t7185,\n\t\t\t7193,\n\t\t\t7201,\n\t\t\t7209,\n\t\t\t7217,\n\t\t\t7225,\n\t\t\t7233,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7249,\n\t\t\t7257,\n\t\t\t7265,\n\t\t\t7273,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7281,\n\t\t\t7289,\n\t\t\t7297,\n\t\t\t7305,\n\t\t\t7305,\n\t\t\t7305,\n\t\t\t7305,\n\t\t\t7313,\n\t\t\t7321,\n\t\t\t7329,\n\t\t\t7337,\n\t\t\t7345,\n\t\t\t7353,\n\t\t\t7353,\n\t\t\t7353,\n\t\t\t7361,\n\t\t\t7369,\n\t\t\t7377,\n\t\t\t7385,\n\t\t\t7393,\n\t\t\t7401,\n\t\t\t7409,\n\t\t\t7417,\n\t\t\t7425,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7241,\n\t\t\t7972,\n\t\t\t7972,\n\t\t\t8100,\n\t\t\t8164,\n\t\t\t8228,\n\t\t\t8292,\n\t\t\t8356,\n\t\t\t8420,\n\t\t\t8484,\n\t\t\t8548,\n\t\t\t8612,\n\t\t\t8676,\n\t\t\t8740,\n\t\t\t8804,\n\t\t\t8868,\n\t\t\t8932,\n\t\t\t8996,\n\t\t\t9060,\n\t\t\t9124,\n\t\t\t9188,\n\t\t\t9252,\n\t\t\t9316,\n\t\t\t9380,\n\t\t\t9444,\n\t\t\t9508,\n\t\t\t9572,\n\t\t\t9636,\n\t\t\t9700,\n\t\t\t9764,\n\t\t\t9828,\n\t\t\t9892,\n\t\t\t9956,\n\t\t\t2593,\n\t\t\t2657,\n\t\t\t2721,\n\t\t\t2529,\n\t\t\t2785,\n\t\t\t2529,\n\t\t\t2849,\n\t\t\t2913,\n\t\t\t2977,\n\t\t\t3041,\n\t\t\t3105,\n\t\t\t3169,\n\t\t\t3233,\n\t\t\t3297,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t3361,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t3425,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t3489,\n\t\t\t3553,\n\t\t\t2529,\n\t\t\t3617,\n\t\t\t3681,\n\t\t\t3745,\n\t\t\t3809,\n\t\t\t3873,\n\t\t\t3937,\n\t\t\t4001,\n\t\t\t4065,\n\t\t\t4129,\n\t\t\t4193,\n\t\t\t4257,\n\t\t\t4321,\n\t\t\t4385,\n\t\t\t4449,\n\t\t\t4513,\n\t\t\t4577,\n\t\t\t4641,\n\t\t\t4705,\n\t\t\t4769,\n\t\t\t4833,\n\t\t\t4897,\n\t\t\t4961,\n\t\t\t5025,\n\t\t\t5089,\n\t\t\t5153,\n\t\t\t5217,\n\t\t\t5281,\n\t\t\t5345,\n\t\t\t5409,\n\t\t\t5473,\n\t\t\t5537,\n\t\t\t5601,\n\t\t\t5665,\n\t\t\t5729,\n\t\t\t5793,\n\t\t\t5857,\n\t\t\t5921,\n\t\t\t5985,\n\t\t\t6049,\n\t\t\t6113,\n\t\t\t6177,\n\t\t\t6241,\n\t\t\t6305,\n\t\t\t6369,\n\t\t\t6433,\n\t\t\t6497,\n\t\t\t6561,\n\t\t\t6625,\n\t\t\t6689,\n\t\t\t6753,\n\t\t\t6817,\n\t\t\t6881,\n\t\t\t6945,\n\t\t\t7009,\n\t\t\t7073,\n\t\t\t7137,\n\t\t\t7201,\n\t\t\t7265,\n\t\t\t7329,\n\t\t\t7393,\n\t\t\t7457,\n\t\t\t7521,\n\t\t\t7585,\n\t\t\t7649,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t2529,\n\t\t\t7713,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7433,\n\t\t\t7441,\n\t\t\t7449,\n\t\t\t7457,\n\t\t\t7457,\n\t\t\t7457,\n\t\t\t7457,\n\t\t\t7457,\n\t\t\t7457,\n\t\t\t7465,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7473,\n\t\t\t7481,\n\t\t\t7489,\n\t\t\t7497,\n\t\t\t7505,\n\t\t\t7505,\n\t\t\t7505,\n\t\t\t7505,\n\t\t\t7505,\n\t\t\t7513,\n\t\t\t7521,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7529,\n\t\t\t7529,\n\t\t\t7537,\n\t\t\t7545,\n\t\t\t7545,\n\t\t\t7545,\n\t\t\t7545,\n\t\t\t7545,\n\t\t\t7553,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7561,\n\t\t\t7569,\n\t\t\t7577,\n\t\t\t7585,\n\t\t\t7593,\n\t\t\t7593,\n\t\t\t7593,\n\t\t\t7593,\n\t\t\t7593,\n\t\t\t7593,\n\t\t\t7601,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7609,\n\t\t\t7617,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7625,\n\t\t\t7633,\n\t\t\t7641,\n\t\t\t7649,\n\t\t\t7657,\n\t\t\t7665,\n\t\t\t7673,\n\t\t\t7681,\n\t\t\t7689,\n\t\t\t7697,\n\t\t\t7705,\n\t\t\t2009,\n\t\t\t7713,\n\t\t\t7721,\n\t\t\t7729,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7737,\n\t\t\t7745,\n\t\t\t7753,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7761,\n\t\t\t7769,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7777,\n\t\t\t7785,\n\t\t\t7793,\n\t\t\t7801,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7809,\n\t\t\t7817,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7825,\n\t\t\t7833,\n\t\t\t7841,\n\t\t\t7849,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7857,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7865,\n\t\t\t7873,\n\t\t\t7881,\n\t\t\t7889,\n\t\t\t7897,\n\t\t\t7897,\n\t\t\t7897,\n\t\t\t7897,\n\t\t\t7905,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7913,\n\t\t\t7921,\n\t\t\t7929,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7937,\n\t\t\t7945,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t7953,\n\t\t\t2009,\n\t\t\t7961,\n\t\t\t7969,\n\t\t\t7977,\n\t\t\t7985,\n\t\t\t7993,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t8001,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8009,\n\t\t\t8017,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8025,\n\t\t\t8033,\n\t\t\t8041,\n\t\t\t8049,\n\t\t\t8057,\n\t\t\t8065,\n\t\t\t8073,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8081,\n\t\t\t8089,\n\t\t\t2009,\n\t\t\t8097,\n\t\t\t8097,\n\t\t\t8097,\n\t\t\t8105,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8113,\n\t\t\t8121,\n\t\t\t8129,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8137,\n\t\t\t8145,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t2009,\n\t\t\t67496,\n\t\t\t67496,\n\t\t\t67496,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t34,\n\t\t\t30,\n\t\t\t30,\n\t\t\t33,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t38,\n\t\t\t6,\n\t\t\t3,\n\t\t\t12,\n\t\t\t9,\n\t\t\t10,\n\t\t\t12,\n\t\t\t3,\n\t\t\t0,\n\t\t\t2,\n\t\t\t12,\n\t\t\t9,\n\t\t\t8,\n\t\t\t16,\n\t\t\t8,\n\t\t\t7,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t8,\n\t\t\t8,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t6,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t9,\n\t\t\t2,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t17,\n\t\t\t1,\n\t\t\t12,\n\t\t\t21,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t35,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t3,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t9,\n\t\t\t29,\n\t\t\t29,\n\t\t\t18,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t3,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t0,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t18,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t18,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t18,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\t\t\t4,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t8,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t8,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t9,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t6,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t8,\n\t\t\t8,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t10,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t6,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t8,\n\t\t\t6,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t10,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t9,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t10,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t9,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t12,\n\t\t\t18,\n\t\t\t18,\n\t\t\t18,\n\t\t\t18,\n\t\t\t12,\n\t\t\t18,\n\t\t\t18,\n\t\t\t4,\n\t\t\t18,\n\t\t\t18,\n\t\t\t17,\n\t\t\t4,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t6,\n\t\t\t4,\n\t\t\t12,\n\t\t\t6,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t18,\n\t\t\t18,\n\t\t\t17,\n\t\t\t18,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t4,\n\t\t\t4,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t17,\n\t\t\t17,\n\t\t\t5,\n\t\t\t36,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t9,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t6,\n\t\t\t6,\n\t\t\t17,\n\t\t\t17,\n\t\t\t18,\n\t\t\t12,\n\t\t\t6,\n\t\t\t6,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t6,\n\t\t\t6,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t18,\n\t\t\t12,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t4,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t20,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t4,\n\t\t\t17,\n\t\t\t17,\n\t\t\t19,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t0,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t0,\n\t\t\t3,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t15,\n\t\t\t15,\n\t\t\t15,\n\t\t\t17,\n\t\t\t30,\n\t\t\t30,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t4,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t29,\n\t\t\t5,\n\t\t\t5,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t8,\n\t\t\t0,\n\t\t\t1,\n\t\t\t5,\n\t\t\t5,\n\t\t\t5,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t22,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t10,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t10,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t9,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t9,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t9,\n\t\t\t9,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t6,\n\t\t\t6,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t6,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t6,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t3,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t0,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t12,\n\t\t\t12,\n\t\t\t3,\n\t\t\t3,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t6,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t19,\n\t\t\t19,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t5,\n\t\t\t0,\n\t\t\t1,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t32,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t5,\n\t\t\t5,\n\t\t\t5,\n\t\t\t5,\n\t\t\t14,\n\t\t\t5,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t32,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t32,\n\t\t\t5,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t6,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t18,\n\t\t\t18,\n\t\t\t6,\n\t\t\t6,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t25,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t36,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t23,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t24,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t26,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t27,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t37,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t13,\n\t\t\t21,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t12,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t13,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t10,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t8,\n\t\t\t1,\n\t\t\t1,\n\t\t\t8,\n\t\t\t8,\n\t\t\t6,\n\t\t\t6,\n\t\t\t0,\n\t\t\t1,\n\t\t\t15,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t1,\n\t\t\t39,\n\t\t\t5,\n\t\t\t5,\n\t\t\t6,\n\t\t\t6,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t9,\n\t\t\t10,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t22,\n\t\t\t39,\n\t\t\t6,\n\t\t\t14,\n\t\t\t14,\n\t\t\t9,\n\t\t\t10,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t5,\n\t\t\t5,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t6,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t0,\n\t\t\t14,\n\t\t\t1,\n\t\t\t14,\n\t\t\t0,\n\t\t\t1,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t1,\n\t\t\t5,\n\t\t\t12,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t32,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t5,\n\t\t\t5,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t10,\n\t\t\t9,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t9,\n\t\t\t9,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t31,\n\t\t\t29,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t17,\n\t\t\t17,\n\t\t\t12,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t17,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t1,\n\t\t\t1,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t0,\n\t\t\t1,\n\t\t\t1,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t11,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t39,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t29,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t28,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t12,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t14,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t21,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39,\n\t\t\t39\n\t\t],\n\t\t\"highStart\": 919552,\n\t\t\"errorValue\": 0\n\t}\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }\n/******/ ]);\n"],"sourceRoot":"/source/"}